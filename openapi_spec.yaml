openapi: 3.0.1
info:
  title: NinjaOne Public API 2.0
  description: NinjaOne Public API documentation.
  contact:
    email: api@ninjarmm.com
  version: 2.0.9-draft
security:
- oauth2:
  - monitoring
  - management
  - control
- sessionKey:
  - monitoring
  - management
  - control
tags:
- name: system
  description: Core system Entities and Resources
- name: organization
  description: Organizations
- name: devices
  description: Devices
- name: groups
  description: Groups/Search
- name: queries
  description: Queries
- name: management
  description: Management
- name: ticketing
  description: ticketing
- name: webhooks
  description: Webhook Endpoints
- name: Related Items
  description: Related Items
- name: Location
  description: Location
- name: Backup
  description: Backup
- name: Knowledge Base Articles
  description: Knowledge Base Articles
- name: Organization Documents
  description: Organization Documents
- name: Document Templates
  description: Document Templates
- name: Checklist Templates
  description: Checklist Templates
- name: Custom Fields
  description: Custom Fields
- name: Organization Checklists
  description: Organization Checklists
- name: Vulnerability Management
  description: Vulnerability Management
- name: Asset Tags
  description: Asset Tags
paths:
  /v2/policies/{policy_id}/condition/custom-fields:
    get:
      tags:
      - management
      summary: Get custom fields policy conditions
      description: Get all custom fields policy conditions for specified policy
      operationId: getCustomFieldsPolicyConditions
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldPolicyConditionResponse'
    post:
      tags:
      - management
      summary: Create custom fields policy condition
      description: Creates custom fields policy condition for specified policy
      operationId: createCustomFieldsPolicyCondition
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldsPolicyConditionCreateRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldPolicyConditionResponse'
  /v2/policies/{policy_id}/condition/windows-event:
    get:
      tags:
      - management
      summary: Get windows event conditions
      description: Get all windows event conditions for specified policy
      operationId: getWindowsEventPolicyConditions
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsEventPolicyConditionResponse'
    post:
      tags:
      - management
      summary: Create windows event condition
      description: Creates windows event condition for specified policy
      operationId: createWindowsEventPolicyCondition
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WindowsEventPolicyConditionCreateRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsEventPolicyConditionResponse'
  /v2/policies/{policy_id}/condition/{condition_id}:
    delete:
      tags:
      - management
      summary: Delete policy condition
      description: Deletes specified policy condition from specified agent policy
      operationId: deletePolicyCondition
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/policies/{policy_id}/condition/custom-fields/{condition_id}:
    get:
      tags:
      - management
      summary: Get custom fields policy condition
      description: Get specified custom fields condition for specified policy
      operationId: getCustomFieldsPolicyCondition
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldPolicyConditionResponse'
  /v2/policies/{policy_id}/condition/windows-event/{condition_id}:
    get:
      tags:
      - management
      summary: Get windows event condition
      description: Get specified windows event condition for specified policy
      operationId: getWindowsEventPolicyCondition
      parameters:
      - name: policy_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsEventPolicyConditionResponse'
  /v2/webhook:
    put:
      tags:
      - webhooks
      summary: Update API Webhook configuration
      description: Creates or updates Webhook configuration for current application/client
      operationId: configureWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfiguration'
      responses:
        "204":
          description: No Content
        "403":
          description: Only system administrators can configure webhooks
  /v2/organizations:
    get:
      tags:
      - system
      summary: List organizations
      description: Returns list of organizations (Brief mode)
      operationId: getOrganizations
      parameters:
      - name: pageSize
        in: query
        description: Limit number of organizations to return
        schema:
          type: integer
          format: int32
      - name: after
        in: query
        description: Last Organization Identifier from previous page
        schema:
          type: integer
          format: int32
      - name: of
        in: query
        description: Organization filter
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    post:
      tags:
      - management
      summary: Create new organization
      description: |-
        Creates new organization with optional list of locations and policy mappings.
        Template organization ID can be specified to copy various settings
      operationId: createOrganization
      parameters:
      - name: templateOrganizationId
        in: query
        schema:
          type: integer
          description: Model/Template organization to copy settings from
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationWithLocationsAndPolicyAssignmentsModel'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailed'
  /v2/webhook/{id}:
    delete:
      tags:
      - webhooks
      summary: Remove Webhook API channel
      description: Deletes Webhook
      operationId: deleteWebhook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
        "500":
          description: Failed to delete webhook
  /v2/devices/approval/{mode}:
    post:
      tags:
      - management
      summary: Approve/Reject devices
      description: Approve or reject devices that are waiting for approval
      operationId: nodeApprovalOperation
      parameters:
      - name: mode
        in: path
        required: true
        schema:
          type: string
          description: Approval action to perform
          enum:
          - APPROVE
          - REJECT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceIDList'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/alert/{uid}:
    delete:
      tags:
      - management
      summary: Reset alert/condition
      description: Resets alert/condition by UID
      operationId: resetAlert
      parameters:
      - name: uid
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/alert/{uid}/reset:
    post:
      tags:
      - management
      summary: Reset alert/condition and provide custom data for activity
      description: Resets alert/condition by UID
      operationId: resetAlertSetActivityData
      parameters:
      - name: uid
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/attachments/temp/upload:
    post:
      tags:
      - Knowledge Base Articles
      summary: Upload temporary attachments
      description: Upload temporary attachment
      operationId: uploadTempAttachments
      parameters:
      - name: entityType
        in: query
        schema:
          type: string
          enum:
          - TICKET
          - NODE
          - DOCUMENT
          - RELATED_ITEM
          - CHECKLIST
          - AUTOMATION
          - LOCATION
          - ORGANIZATION
          - TRIGGER
          - TECHNICIAN
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/FormDataBodyPart'
      responses:
        "200":
          description: Returns a list of uploaded attachments metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentMetadataPublicApiDTO'
  /v2/checklist/archive:
    post:
      tags:
      - Checklist Templates
      summary: Archive a checklist template
      description: Archive a checklist template by id
      operationId: archiveChecklistTemplate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ArchiveChecklistTemplatesRequest'
      responses:
        "200":
          description: Returns a list of archive checklist templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistTemplatePublicApiDTO'
  /v2/checklist/templates:
    get:
      tags:
      - Checklist Templates
      summary: List checklist templates
      description: List checklists templates with given criteria
      operationId: getChecklistTemplates
      parameters:
      - name: checklistTemplateIds
        in: query
        schema:
          type: string
      - name: checklistTemplateName
        in: query
        schema:
          type: string
      - name: required
        in: query
        schema:
          type: boolean
      - name: includeArchived
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Returns a list of checklist templates with given criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistTemplatePublicApiDTO'
    put:
      tags:
      - Checklist Templates
      summary: Update checklist templates
      description: Updates multiple checklist templates
      operationId: updateChecklistTemplates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateChecklistTemplatePublicApiRequest'
      responses:
        "200":
          description: Returns a list of updated checklist templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistTemplatePublicApiDTO'
    post:
      tags:
      - Checklist Templates
      summary: Create checklist templates
      description: Creates multiple checklist templates
      operationId: createChecklistTemplates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateChecklistTemplatePublicApiRequest'
      responses:
        "200":
          description: Returns a list of created checklist templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistTemplatePublicApiDTO'
  /v2/checklist/template/{checklistTemplateId}:
    delete:
      tags:
      - Checklist Templates
      summary: Delete a checklist template
      description: Delete a checklist template by id
      operationId: deleteChecklistTemplate
      parameters:
      - name: checklistTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/checklist/templates/delete:
    post:
      tags:
      - Checklist Templates
      summary: Delete checklist templates
      description: Deletes checklist templates by id
      operationId: deleteChecklistTemplates
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/checklist/restore:
    post:
      tags:
      - Checklist Templates
      summary: Restore a checklist template
      description: Restore a checklist template by id
      operationId: restoreChecklistTemplate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RestoreChecklistTemplatesRequest'
      responses:
        "200":
          description: Returns a list of restore checklist templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistTemplatePublicApiDTO'
  /v2/organization/archive:
    post:
      tags:
      - Organization Checklists
      summary: Archive organization checklists
      description: Archive multiple organization checklists
      operationId: archiveOrganizationChecklists
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ArchiveClientChecklistRequest'
      responses:
        "200":
          description: Returns a list of archive organization checklists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
  /v2/organization/checklists:
    get:
      tags:
      - Organization Checklists
      summary: List client checklists
      description: List client checklists with given criteria
      operationId: getClientChecklists
      parameters:
      - name: checklistIds
        in: query
        schema:
          type: string
      - name: organizationIds
        in: query
        schema:
          type: string
      - name: checklistName
        in: query
        schema:
          type: string
      - name: assignedToUserId
        in: query
        schema:
          type: integer
          format: int32
      - name: completed
        in: query
        schema:
          type: boolean
      - name: required
        in: query
        schema:
          type: boolean
      - name: includeArchived
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Returns a list of client checklists with given criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
    put:
      tags:
      - Organization Checklists
      summary: Update organization checklists
      description: Updates multiple organization checklists
      operationId: updateOrganizationChecklists
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateClientChecklistAndTasksPublicApiRequest'
      responses:
        "200":
          description: Returns a list of updated organization checklists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
    post:
      tags:
      - Organization Checklists
      summary: Create organization checklists
      description: Creates multiple organization checklists
      operationId: createOrganizationChecklists
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateClientChecklistAndTasksPublicApiRequest'
      responses:
        "200":
          description: Returns a list of created organization checklists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
  /v2/organization/{organizationId}/checklists-from-templates:
    post:
      tags:
      - Organization Checklists
      summary: Create organization checklists from templates
      description: Creates multiple organization checklists from templates
      operationId: createOrganizationChecklistsFromTemplates
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Returns a list of created organization checklists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
  /v2/organization/checklist/{checklistId}:
    get:
      tags:
      - Organization Checklists
      summary: Get client checklist
      description: Get a client checklist by id
      operationId: getClientChecklist
      parameters:
      - name: checklistId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a client checklist with given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
    delete:
      tags:
      - Organization Checklists
      summary: Delete an organization checklist
      description: Deletes an organization checklist by id
      operationId: deleteClientChecklist
      parameters:
      - name: checklistId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/organization/checklists/delete:
    post:
      tags:
      - Organization Checklists
      summary: Delete organization checklists
      description: Deletes organization checklists by id
      operationId: deleteClientChecklists
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/organization/checklist/{checklistId}/signed-urls:
    get:
      tags:
      - Organization Checklists
      summary: Get organization checklist signed urls
      description: Get organization checklist signed urls
      operationId: getClientChecklistSignedUrls
      parameters:
      - name: checklistId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a map of content ids and their corresponding signed
            urls
          content:
            application/json:
              schema:
                type: string
  /v2/organization/checklists/promote-with-name:
    post:
      tags:
      - Organization Checklists
      summary: Promote organization checklists
      description: Promote organization checklists by id
      operationId: promoteClientChecklists
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PromoteClientChecklistWithNamePublicApiRequest'
      responses:
        "204":
          description: No Content
  /v2/organization/checklists/promote:
    post:
      tags:
      - Organization Checklists
      summary: Promote organization checklists
      description: Promote organization checklists by id
      operationId: promoteClientChecklists_1
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/organization/restore:
    post:
      tags:
      - Organization Checklists
      summary: Restore organization checklists
      description: Restore multiple organization checklists
      operationId: restoreOrganizationChecklists
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ArchiveClientChecklistRequest'
      responses:
        "200":
          description: Returns a list of restore organization checklists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientChecklistPublicApiDTO'
  /v2/organization/document/{clientDocumentId}/archive:
    post:
      tags:
      - Organization Documents
      summary: Archive an organization document
      description: Archives an organization document by id
      operationId: archiveClientDocument
      parameters:
      - name: clientDocumentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns the organization document archived
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
  /v2/organization/documents/archive:
    post:
      tags:
      - Organization Documents
      summary: Archives organization documents
      description: Archives multiple organization documents by id
      operationId: archiveMultiPageClientDocuments
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Returns a list of archived organization documents
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
  /v2/organization/{organizationId}/template/{documentTemplateId}/document:
    post:
      tags:
      - Organization Documents
      summary: Create organization document
      description: Creates an organization document and returns the document created
      operationId: createOrganizationDocument
      parameters:
      - name: organizationId
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: documentTemplateId
        in: path
        description: Document template identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiRequest'
      responses:
        "200":
          description: Returns the organization document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
  /v2/organization/documents:
    get:
      tags:
      - Organization Documents
      summary: List all organization documents with field values
      description: List all organization documents with field values
      operationId: getClientDocumentsWithAttributeValues
      parameters:
      - name: groupBy
        in: query
        schema:
          type: string
          enum:
          - TEMPLATE
          - ORGANIZATION
      - name: organizationIds
        in: query
        schema:
          type: string
      - name: templateIds
        in: query
        schema:
          type: string
      - name: templateName
        in: query
        schema:
          type: string
      - name: documentName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of all organization documents with field values
            grouped by organization identifier
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
    post:
      tags:
      - Organization Documents
      summary: Create organization documents
      description: Creates organization documents and returns the documents created
      operationId: createOrganizationDocuments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientDocumentWithAttributeValuesBulkCreatePublicApiRequest'
      responses:
        "200":
          description: Returns a list of created organization documents with field
            values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
    patch:
      tags:
      - Organization Documents
      summary: Update organization documents
      description: Updates organization documents and returns the documents updated
      operationId: updateOrganizationDocuments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientDocumentWithAttributeValuesBulkUpdatePublicApiRequest'
      responses:
        "200":
          description: Returns a list of updated organization documents with field
            values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDocumentWithUpdatedAttributeValuesPublicApiDTO'
  /v2/organization/document/{clientDocumentId}:
    delete:
      tags:
      - Organization Documents
      summary: Delete an archived organization document
      description: Deletes an archived organization document by id
      operationId: deleteClientDocument
      parameters:
      - name: clientDocumentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/organization/document/{clientDocumentId}/signed-urls:
    get:
      tags:
      - Organization Documents
      summary: Get organization document signed urls
      description: Get organization document signed urls
      operationId: getClientDocumentSignedUrls
      parameters:
      - name: clientDocumentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a map of content ids and their corresponding signed
            urls
          content:
            application/json:
              schema:
                type: string
  /v2/organization/{organizationId}/documents:
    get:
      tags:
      - Organization Documents
      summary: List organization documents with field values
      description: List organization documents with field values
      operationId: getOrganizationDocuments
      parameters:
      - name: organizationId
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a list of organization documents with field values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
  /v2/organization/document/{clientDocumentId}/restore:
    post:
      tags:
      - Organization Documents
      summary: Restore an organization document
      description: Restores an organization document by id
      operationId: restoreClientDocument
      parameters:
      - name: clientDocumentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns the organization document restored
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
  /v2/organization/documents/restore:
    post:
      tags:
      - Organization Documents
      summary: Restore multiple multi page organization documents
      description: Restores multiple organization documents by id
      operationId: restoreMultiPageClientDocuments
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Returns a list of restored organization documents
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiDTO'
  /v2/organization/{organizationId}/document/{clientDocumentId}:
    post:
      tags:
      - Organization Documents
      summary: Update organization document
      description: Updates an organization document and returns the updated version
      operationId: updateOrganizationDocument
      parameters:
      - name: organizationId
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: clientDocumentId
        in: path
        description: Organization document identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDocumentWithAttributeValuesPublicApiRequest'
      responses:
        "200":
          description: Returns the organization document updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDocumentWithUpdatedAttributeValuesPublicApiDTO'
  /v2/document-templates/{documentTemplateId}/archive:
    post:
      tags:
      - Document Templates
      summary: Archive a document template
      description: Archives a document template by id
      operationId: archiveDocumentTemplate
      parameters:
      - name: documentTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/document-templates/archive:
    post:
      tags:
      - Document Templates
      summary: Archive multiple document templates
      description: Archives multiple document template by ids
      operationId: archiveDocumentTemplates
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/document-templates:
    get:
      tags:
      - Document Templates
      summary: List document templates with fields
      description: List document templates with fields
      operationId: getDocumentTemplatesWithAttributes
      parameters:
      - name: templateName
        in: query
        schema:
          type: string
      - name: includeTechnicianRoles
        in: query
        description: Includes allowed technician roles.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Returns a list of all document templates with fields
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentTemplatePublicApiDTO'
    post:
      tags:
      - Document Templates
      summary: Create document template
      description: Create document template
      operationId: createDocumentTemplate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewDocumentTemplatePublicApiRequest'
      responses:
        "200":
          description: Returns the document template created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplatePublicApiDTO'
  /v2/document-templates/{documentTemplateId}:
    get:
      tags:
      - Document Templates
      summary: Get document template
      description: Get document template
      operationId: getDocumentTemplate
      parameters:
      - name: documentTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: includeTechnicianRoles
        in: query
        description: Includes allowed technician roles.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Returns a document template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplatePublicApiDTO'
    put:
      tags:
      - Document Templates
      summary: Update document template
      description: Updates a document template by id
      operationId: updateDocumentTemplate
      parameters:
      - name: documentTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateDocumentTemplatePublicApiRequest'
      responses:
        "200":
          description: Returns the document template updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplatePublicApiDTO'
    delete:
      tags:
      - Document Templates
      summary: Delete a document template
      description: Deletes a document template by id
      operationId: deleteDocumentTemplate
      parameters:
      - name: documentTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/document-templates/{documentTemplateId}/restore:
    post:
      tags:
      - Document Templates
      summary: Restore a document template
      description: Restores a document template by id
      operationId: restoreDocumentTemplate
      parameters:
      - name: documentTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns the document template restored
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTemplatePublicApiDTO'
  /v2/document-templates/restore:
    post:
      tags:
      - Document Templates
      summary: Restore a document template
      description: Restores a document template by id
      operationId: restoreDocumentTemplates
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Returns the document template restored
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentTemplatePublicApiDTO'
  /v2/tag/{assetType}:
    post:
      tags:
      - Asset Tags
      summary: Batch tag assets
      description: Update tags for the supplied assetIds. Tags will be added and removed
        as specified
      operationId: batchUpdateTags
      parameters:
      - name: assetType
        in: path
        required: true
        schema:
          type: string
          enum:
          - device
      requestBody:
        description: "Payload supplying the asset ids to modify, as well as tags to\
          \ add/remove from those assets"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItamManageAssetRequestPublicApiDTO'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/tag:
    get:
      tags:
      - Asset Tags
      summary: Get Asset Tags
      description: Get a list of created Asset Tags
      operationId: getTags
      responses:
        "200":
          description: Returns a list of tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetItamTagsResponse'
    post:
      tags:
      - Asset Tags
      summary: Create an Asset Tag
      description: Create an Asset Tag with the provided name and description
      operationId: createTag
      requestBody:
        description: The Asset Tag to be created
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateItamTagRequest'
      responses:
        "200":
          description: The Asset Tag that was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItamTagPublicApiDTO'
  /v2/tag/{tagId}:
    put:
      tags:
      - Asset Tags
      summary: Update an Asset Tag
      description: Update an Asset Tag with the provided metadata
      operationId: updateTag
      parameters:
      - name: tagId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Updated Asset Tag data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateItamTagRequest'
      responses:
        "200":
          description: The Asset Tag that was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItamTagPublicApiDTO'
    delete:
      tags:
      - Asset Tags
      summary: Delete an Asset Tag
      description: Delete the Asset Tag with the provided id
      operationId: deleteTag
      parameters:
      - name: tagId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/tag/delete:
    post:
      tags:
      - Asset Tags
      summary: Delete several Asset Tags
      description: Delete Asset Tags having the provided ids
      operationId: deleteTags
      requestBody:
        description: Array of Asset Tag Ids to delete
        content:
          '*/*':
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/tag/merge:
    post:
      tags:
      - Asset Tags
      summary: Merge existing tags
      description: Merges tags. Can merge into an existing or new tag depending on
        the input parameters
      operationId: mergeTags
      requestBody:
        description: "Payload specifying the tags to merge, as well as whether they\
          \ should be merge to a new or existing tag"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MergeItamTagsPublicApiRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItamTagPublicApiDTO'
  /v2/tag/{assetType}/{assetId}:
    put:
      tags:
      - Asset Tags
      description: Set the tags for an asset to exactly the supplied values
      operationId: setTagsForAsset
      parameters:
      - name: assetType
        in: path
        required: true
        schema:
          type: string
          enum:
          - device
      - name: assetId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Array of Asset Tags to assign to the asset. Existing tags on
          the asset will be removed.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItamSetAssetTagsRequestPublicApiDTO'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/knowledgebase/articles/archive:
    post:
      tags:
      - Knowledge Base Articles
      summary: Archive knowledge base articles
      description: Archive knowledge base articles
      operationId: archiveKnowledgeBaseArticles
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/folders/archive:
    post:
      tags:
      - Knowledge Base Articles
      summary: Archive knowledge base folders
      description: Archive knowledge base folders
      operationId: archiveKnowledgeBaseFolders
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/articles:
    post:
      tags:
      - Knowledge Base Articles
      summary: Create knowledge base articles
      description: Create knowledge base articles
      operationId: createKnowledgeBaseArticles
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KnowledgeBaseArticleBulkCreatePublicApiRequest'
      responses:
        "200":
          description: Returns a list of created knowledge base articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiDTO'
    patch:
      tags:
      - Knowledge Base Articles
      summary: Update knowledge base articles
      description: Update knowledge base articles
      operationId: updateKnowledgeBaseArticles
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KnowledgeBaseArticleBulkUpdatePublicApiRequest'
      responses:
        "200":
          description: Returns a list of updated knowledge base articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiDTO'
  /v2/knowledgebase/articles/delete:
    post:
      tags:
      - Knowledge Base Articles
      summary: Delete knowledge base articles
      description: Delete knowledge base articles
      operationId: deleteKnowledgeBaseArticles
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/folders/delete:
    post:
      tags:
      - Knowledge Base Articles
      summary: Delete knowledge base folders
      description: Delete knowledge base folders
      operationId: deleteKnowledgeBaseFolders
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/article/{articleId}/download:
    get:
      tags:
      - Knowledge Base Articles
      summary: Download knowledge base article
      description: Download knowledge base article
      operationId: downloadKnowledgeBaseArticle
      parameters:
      - name: articleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/organization/articles:
    get:
      tags:
      - Knowledge Base Articles
      summary: Lists organization knowledge base articles
      description: Lists organization knowledge base articles
      operationId: getClientKnowledgeBaseArticles
      parameters:
      - name: organizationIds
        in: query
        schema:
          type: string
      - name: articleName
        in: query
        schema:
          type: string
      - name: includeArchived
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Returns a list of organization knowledge base articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiDTO'
  /v2/knowledgebase/global/articles:
    get:
      tags:
      - Knowledge Base Articles
      summary: Lists global knowledge base articles
      description: Lists global knowledge base articles
      operationId: getGlobalKnowledgeBaseArticles
      parameters:
      - name: articleName
        in: query
        schema:
          type: string
      - name: includeArchived
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Returns a list of global knowledge base articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiDTO'
  /v2/knowledgebase/article/{articleId}/signed-urls:
    get:
      tags:
      - Knowledge Base Articles
      summary: Get knowledge base article signed urls
      description: Get knowledge base article signed urls
      operationId: getKnowledgeBaseArticleSignedUrls
      parameters:
      - name: articleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a map of content ids and their corresponding signed
            urls
          content:
            application/json:
              schema:
                type: string
  /v2/knowledgebase/folder/{folderId}:
    get:
      tags:
      - Knowledge Base Articles
      summary: Returns knowledge base folder
      description: Returns knowledge base folder and its content
      operationId: getKnowledgeBaseFolderContent
      parameters:
      - name: folderId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: includeArchived
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: Returns knowledge base folder and its content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseFolderPublicApiDTO'
  /v2/knowledgebase/folder:
    get:
      tags:
      - Knowledge Base Articles
      summary: Returns knowledge base folder
      description: Returns knowledge base folder and its content
      operationId: getKnowledgeBaseFolderPathContent
      parameters:
      - name: folderPath
        in: query
        schema:
          type: string
      - name: folderId
        in: query
        schema:
          type: integer
          format: int32
      - name: organizationId
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns knowledge base folder and its content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseFolderPublicApiDTO'
  /v2/knowledgebase/folders/move:
    patch:
      tags:
      - Knowledge Base Articles
      summary: Move knowledge base items
      description: Move knowledge base folders and documents to another knowledge
        base folder
      operationId: move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovePublicApiRequest'
      responses:
        "204":
          description: No content
  /v2/knowledgebase/articles/restore:
    post:
      tags:
      - Knowledge Base Articles
      summary: Restore archive knowledge base articles
      description: Restore archived knowledge base articles
      operationId: restoreKnowledgeBaseArticles
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/folders/restore:
    post:
      tags:
      - Knowledge Base Articles
      summary: Restore archived knowledge base folders
      description: Restore archived knowledge base folders
      operationId: restoreKnowledgeBaseFolders
      requestBody:
        content:
          '*/*':
            schema:
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int32
      responses:
        "204":
          description: No Content
  /v2/knowledgebase/articles/upload:
    post:
      tags:
      - Knowledge Base Articles
      summary: Upload knowledge base articles
      description: Upload knowledge base articles
      operationId: uploadKnowledgeBaseArticles
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                organizationId:
                  type: integer
                  format: int32
                folderId:
                  type: integer
                  format: int32
                folderPath:
                  type: string
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/FormDataBodyPart'
      responses:
        "200":
          description: Returns a list of created knowledge base articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiDTO'
  /v2/custom-fields/entity-type/{entityType}/{entityId}/signed-urls:
    get:
      tags:
      - Custom Fields
      summary: Get custom field signed urls
      description: Get custom field signed urls
      operationId: getNodeAttributeSignedUrls
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - NODE
          - LOCATION
          - ORGANIZATION
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a map of content ids and their corresponding signed
            urls
          content:
            application/json:
              schema:
                type: string
  /v2/related-items/entity/{entityType}/{entityId}/attachment:
    post:
      tags:
      - Related Items
      summary: Create Attachment Relation
      description: Relate an attachment to an entity
      operationId: createRelatedItem
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/FormDataBodyPart'
      responses:
        "200":
          description: Returns the attachment related item created for an entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/entity/{entityType}/{entityId}/relation:
    post:
      tags:
      - Related Items
      summary: Create entity relation
      description: Create a relation between two entities
      operationId: createRelatedItemForEntity
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewRelatedItemEntityRequest'
      responses:
        "200":
          description: Returns the relation created for an entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/entity/{entityType}/{entityId}/relations:
    post:
      tags:
      - Related Items
      summary: Create entity relations
      description: Create multiple relations between two entities
      operationId: createRelatedItemForEntity_1
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NewRelatedItemEntityRequest'
      responses:
        "200":
          description: Returns list of relations created for an entity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/entity/{entityType}/{entityId}/secure:
    post:
      tags:
      - Related Items
      summary: Create Secure Relation
      description: Create a relation to a secure value
      operationId: createSecureRelatedItemForEntity
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewRelatedItemSecureValueRequest'
      responses:
        "200":
          description: Returns the secure related item created for an entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/{relatedItemId}:
    delete:
      tags:
      - Related Items
      summary: Delete related item
      description: Deletes related item
      operationId: deleteRelatedItem
      parameters:
      - name: relatedItemId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/related-items/{entityType}/{entityId}:
    delete:
      tags:
      - Related Items
      summary: Delete related items
      description: Deletes related items associated with an entity
      operationId: deleteRelatedItems
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - ATTACHMENT
          - TECHNICIAN
          - CREDENTIAL
          - CHECKLIST
          - END_USER
          - CONTACT
          - KB_DOCUMENT
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/related-items/{relatedItemId}/attachment/download:
    get:
      tags:
      - Knowledge Base Articles
      summary: Download related item attachment
      description: Download related item attachment
      operationId: downloadRelatedItemAttachment
      parameters:
      - name: relatedItemId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /v2/related-items:
    get:
      tags:
      - Related Items
      summary: List all related items
      description: List all related items
      operationId: getAllRelatedItems
      responses:
        "200":
          description: Returns a list of all related items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/with-entity/{entityType}/{entityId}/attachments/signed-urls:
    get:
      tags:
      - Knowledge Base Articles
      summary: Get related item attachments signed urls
      description: Get related item attachments signed urls for an entity
      operationId: getRelatedItemAttachmentsSignedUrls
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a map of content ids and their corresponding signed
            urls
          content:
            application/json:
              schema:
                type: string
  /v2/related-items/with-entity/{entityType}/{entityId}:
    get:
      tags:
      - Related Items
      summary: List host entity related items by scope
      description: List related items for a specific host entity filterable by scope
      operationId: getRelatedItemsForHostEntity
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: scope
        in: query
        schema:
          type: string
          enum:
          - ALL
          - HOSTING
          - HOSTED_BY
      responses:
        "200":
          description: Returns list of the related items for an entity filterable
            by scope
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/with-related-entity/{relEntityType}/{relEntityId}:
    get:
      tags:
      - Related Items
      summary: List related entity related items
      description: List related items for a specific related entity
      operationId: getRelatedItemsWithEntity
      parameters:
      - name: relEntityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - ATTACHMENT
          - TECHNICIAN
          - CREDENTIAL
          - CHECKLIST
          - END_USER
          - CONTACT
          - KB_DOCUMENT
      - name: relEntityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns list of the related items for a specific related entity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/with-related-entity-type/{relatedEntityType}:
    get:
      tags:
      - Related Items
      summary: List related entity type related items
      description: List related entities for a related entity type
      operationId: getRelatedItemsWithEntityType
      parameters:
      - name: relatedEntityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - ATTACHMENT
          - TECHNICIAN
          - CREDENTIAL
          - CHECKLIST
          - END_USER
          - CONTACT
          - KB_DOCUMENT
      responses:
        "200":
          description: Returns list of references for a related entity type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/related-items/with-entity-type/{entityType}:
    get:
      tags:
      - Related Items
      summary: List host entity type related items
      description: List relations and references for a host entity type
      operationId: getRelatedItemsWithHostEntityType
      parameters:
      - name: entityType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
      responses:
        "200":
          description: Returns a list of relations and references for an entity type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedItemPublicApiDTO'
  /v2/backup/integrity-check-jobs:
    get:
      tags:
      - Backup
      summary: Integrity check jobs.
      description: Returns a list of integrity check jobs.
      operationId: getIntegrityCheckJobs
      parameters:
      - name: df
        in: query
        description: Device filter.
        schema:
          type: string
      - name: ddf
        in: query
        description: Deleted device filter.
        schema:
          type: string
      - name: sf
        in: query
        description: Backup job status filter.
        schema:
          type: string
      - name: ptf
        in: query
        description: Backup job planType filter.
        schema:
          type: string
      - name: stf
        in: query
        description: Backup job startTime filter.
        schema:
          type: string
      - name: include
        in: query
        description: Which devices include (active|deleted|all) default value active.
        schema:
          type: string
          default: active
      - name: cursor
        in: query
        description: Cursor name.
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page.
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
          default: 10000
      responses:
        "200":
          description: The integrity check job report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupJobReport'
    post:
      tags:
      - Backup
      summary: Create an integrity check job
      description: Creates an integrity check job
      operationId: submitIntegrityCheckJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockhartIntegrityCheckJobCreationRequest'
      responses:
        "200":
          description: "Returns SUCCESS if the job was saved correctly, FAILURE otherwise."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockhartIntegrityCheckJobCreationResponse'
  /v2/ticketing/ticket:
    post:
      tags:
      - ticketing
      summary: Create ticket
      description: "Create a new ticket, does not accept files"
      operationId: create
      requestBody:
        description: NewTicket object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicket'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDTO'
  /v2/ticketing/ticket/{ticketId}/comment:
    post:
      tags:
      - ticketing
      summary: Add comment to ticket
      description: "Add a new comment to a ticket, allows files"
      operationId: createComment
      parameters:
      - name: ticketId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  $ref: '#/components/schemas/NewTicketLogEntry'
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                    nullable: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/ticketing/ticket/{ticketId}:
    get:
      tags:
      - ticketing
      summary: Ticket
      description: Returns a ticket
      operationId: getTicketById
      parameters:
      - name: ticketId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDTO'
    put:
      tags:
      - ticketing
      summary: Update ticket
      description: Change ticket fields. Does not accept comments
      operationId: update
      parameters:
      - name: ticketId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: UpdateTicket object that needs to be updated to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicket'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDTO'
  /v2/ticketing/ticket/{ticketId}/log-entry:
    get:
      tags:
      - ticketing
      summary: List ticket log entries
      description: Returns list of the ticket log entries for a ticket
      operationId: getTicketLogEntriesByTicketId
      parameters:
      - name: ticketId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
          enum:
          - DESCRIPTION
          - COMMENT
          - CONDITION
          - SAVE
          - DELETE
          - PRODUCT
      - name: createTime
        in: query
        schema:
          type: string
      - name: anchorId
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 500
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketLogEntryPublicApiDTO'
  /v2/vulnerability/scan-groups:
    get:
      tags:
      - Vulnerability Management
      summary: Fetch all Scan Groups
      description: Fetches all Scan Groups.
      operationId: fetchAllScanGroups
      responses:
        "200":
          description: Scan Groups were found successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicScanGroup'
  /v2/vulnerability/scan-groups/{scan-group-id}:
    get:
      tags:
      - Vulnerability Management
      summary: Fetch Scan Group
      description: Fetches a single Scan Group by ID.
      operationId: fetchScanGroupById
      parameters:
      - name: scan-group-id
        in: path
        description: Unique ID of the scan group to upload CSV to
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Scan Group was found successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicScanGroup'
        "404":
          description: The Scan group was not found by the given scan-group-id.
  /v2/vulnerability/scan-groups/{scan-group-id}/upload:
    post:
      tags:
      - Vulnerability Management
      summary: Upload CSV
      description: "Upload CSV to an existing scan group. The uploaded CSV must contain\
        \ the columns defined in the \nscan group which map to the Ninja machine identifier\
        \ (hostname, IP address, or MAC address) and the CVE ID."
      operationId: updateScanGroup
      parameters:
      - name: scan-group-id
        in: path
        description: Unique ID of the scan group to upload CSV to
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Multi-part form data which contains the CSV file to upload
        content:
          multipart/form-data:
            schema:
              type: object
            encoding:
              csv:
                contentType: text/csv
      responses:
        "200":
          description: Upload was accepted and is being processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicScanGroup'
        "404":
          description: Scan group was not found by the given scan-group-id
  /v2/device/{id}/maintenance:
    put:
      tags:
      - management
      summary: Schedule maintenance
      description: Schedule maintenance window for device
      operationId: updateDeviceMaintenance
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceSettings'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
      - management
      summary: Cancel maintenance
      description: Cancel pending or active maintenance for device
      operationId: cancelDeviceMaintenance
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/device/{id}/windows-service/{serviceId}/control:
    post:
      tags:
      - management
      summary: Windows service control
      description: Start/Stop/Restart Windows Service on a device
      operationId: controlWindowsService
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: serviceId
        in: path
        description: Service identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WindowsServiceControlRequest'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/device/{id}:
    get:
      tags:
      - devices
      summary: Device details
      description: Returns device details
      operationId: getDevice
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Device information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
    patch:
      tags:
      - management
      summary: Update device information
      description: "Change device friendly name, user data, etc."
      operationId: updateDevice
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceMutableProperties'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
      security:
      - oauth2:
        - management
  /v2/device/{id}/jobs:
    get:
      tags:
      - devices
      summary: Device currently running (active) jobs
      description: Returns currently running jobs for device
      operationId: getDeviceActiveJobs
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: lang
        in: query
        schema:
          type: string
          description: Language tag
      - name: tz
        in: query
        description: Time Zone
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
  /v2/device/{id}/activities:
    get:
      tags:
      - devices
      summary: Device activities
      description: Returns activity log for device
      operationId: getDeviceActivities
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: olderThan
        in: query
        description: Return activities recorded that are newer than specified activity
          ID
        schema:
          type: integer
          format: int32
      - name: newerThan
        in: query
        description: Return activities recorded that are older than specified activity
          ID
        schema:
          type: integer
          format: int32
      - name: activityType
        in: query
        description: Return activities of type
        schema:
          type: string
      - name: status
        in: query
        description: Return activities with status(es)
        schema:
          type: string
      - name: seriesUid
        in: query
        description: Return activities related to alert (series)
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of activities to return
        schema:
          maximum: 1000
          minimum: 10
          type: integer
          format: int32
          default: 200
      - name: lang
        in: query
        description: Language tag
        schema:
          type: string
      - name: tz
        in: query
        description: Time Zone
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeActivitiesResponse'
  /v2/device/{id}/alerts:
    get:
      tags:
      - devices
      summary: Device alerts (triggered conditions)
      description: Returns list of active alerts (triggered conditions) for device
      operationId: getDeviceAlerts
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: lang
        in: query
        schema:
          type: string
          description: Language tag
      - name: tz
        in: query
        description: Time Zone
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
  /v2/device/{id}/disks:
    get:
      tags:
      - devices
      summary: Device disk drives
      description: Returns device disks' details
      operationId: getDeviceDiskDrives
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiskDrive'
  /v2/device/{id}/os-patch-installs:
    get:
      tags:
      - devices
      summary: OS Patch installation report for device
      description: Returns patch installation history records (successful and failed)
        for device
      operationId: getDeviceInstalledOSPatches
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: "Patch Status filter (FAILED, INSTALLED)"
        schema:
          type: string
      - name: installedBefore
        in: query
        description: Include patches installed before specified date
        schema:
          type: string
      - name: installedAfter
        in: query
        description: Include patches installed after specified date
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OSPatch'
  /v2/device/{id}/software-patch-installs:
    get:
      tags:
      - devices
      summary: Software Patch history for device
      description: Returns 3rd party software patch installation history records for
        device (successful and failed)
      operationId: getDeviceInstalledSoftwarePatches
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        description: Patch Type filter
        schema:
          type: string
      - name: impact
        in: query
        description: Patch Impact filter
        schema:
          type: string
      - name: status
        in: query
        description: Patch Status filter
        schema:
          type: string
      - name: productIdentifier
        in: query
        description: Product Identifier
        schema:
          type: string
      - name: installedBefore
        in: query
        description: Include patches installed before specified date
        schema:
          type: string
      - name: installedAfter
        in: query
        description: Include patches installed after specified date
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwarePatch'
  /v2/device/{id}/last-logged-on-user:
    get:
      tags:
      - devices
      summary: Last logged-on user information
      description: Returns username that was last to login to device
      operationId: getDeviceLastLoggedOnUser
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedOnUser'
      security:
      - oauth2:
        - monitoring
  /v2/device/{id}/dashboard-url:
    get:
      tags:
      - management
      summary: Device link
      description: Returns link to device
      operationId: getDeviceLink
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: redirect
        in: query
        description: Return redirect response
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLink'
  /v2/device/{id}/network-interfaces:
    get:
      tags:
      - devices
      summary: Device network interfaces
      description: Returns device network interfaces' details
      operationId: getDeviceNetworkInterfaces
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkInterface'
  /v2/device/{id}/os-patches:
    get:
      tags:
      - devices
      summary: OS Patches
      description: Returns list of pending/rejected/approved OS patches for device
      operationId: getDevicePendingFailedRejectedOSPatches
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: Patch Status filter
        schema:
          type: string
      - name: type
        in: query
        description: Patch Type filter
        schema:
          type: string
      - name: severity
        in: query
        description: Patch Severity filter
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OSPatch'
  /v2/device/{id}/software-patches:
    get:
      tags:
      - devices
      summary: "Pending, Failed and Rejected Software patches for device"
      description: Returns list of 3rd party Software patches for a device (for which
        there were no installation attempts)
      operationId: getDevicePendingFailedRejectedSoftwarePatches
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: Patch Status filter
        schema:
          type: string
      - name: productIdentifier
        in: query
        description: Product Identifier
        schema:
          type: string
      - name: type
        in: query
        description: Patch Type filter
        schema:
          type: string
      - name: impact
        in: query
        description: Patch Impact filter
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwarePatch'
  /v2/device/{id}/processors:
    get:
      tags:
      - devices
      summary: Device processors
      description: Returns list of device Processor details
      operationId: getDeviceProcessors
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Processor'
  /v2/device/{id}/windows-services:
    get:
      tags:
      - devices
      summary: Windows services
      description: Returns list of Windows Services and their statuses
      operationId: getDeviceServices
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: name
        in: query
        description: Service name
        schema:
          type: string
      - name: state
        in: query
        description: Service state
        schema:
          type: string
          enum:
          - UNKNOWN
          - STOPPED
          - START_PENDING
          - RUNNING
          - STOP_PENDING
          - PAUSE_PENDING
          - PAUSED
          - CONTINUE_PENDING
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WindowsService'
  /v2/device/{id}/software:
    get:
      tags:
      - devices
      summary: Device software inventory
      description: Returns list of software installed on device
      operationId: getDeviceSoftware
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
  /v2/device/{id}/volumes:
    get:
      tags:
      - devices
      summary: Device storage volumes
      description: Returns device volumes' details
      operationId: getDeviceVolumes
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: include
        in: query
        description: Additional information to include (bl - BitLocker status)
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'
  /v2/device/{id}/custom-fields:
    get:
      tags:
      - devices
      summary: Device custom fields
      description: Returns list of device custom fields
      operationId: getNodeCustomFields
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: withInheritance
        in: query
        description: Retrieve values using definition scope hierarchy
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
    patch:
      tags:
      - devices
      summary: Update Field Values
      description: Update device custom field values
      operationId: updateNodeAttributeValues
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/device/{id}/policy/overrides:
    get:
      tags:
      - devices
      summary: Get summary of device policy overrides
      description: Returns list of overridden policy sections
      operationId: getPolicyOverrides
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyOverrides'
    delete:
      tags:
      - management
      summary: Reset device policy overrides
      description: Submit request to remove device policy overrides
      operationId: resetPolicyOverrides
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v2/device/{id}/reboot/{mode}:
    post:
      tags:
      - management
      summary: Reboot device
      description: Sends a command to restart the computer
      operationId: rebootDevices
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: mode
        in: path
        description: Reboot mode
        required: true
        schema:
          type: string
          enum:
          - NORMAL
          - FORCED
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootRequest'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/device/{id}/owner:
    delete:
      tags:
      - management
      summary: Remove device owner
      description: Removes the owner of the device.
      operationId: removeDeviceOwner
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            '*/*': {}
      security:
      - oauth2:
        - management
  /v2/device/{id}/scripting/options:
    get:
      tags:
      - management
      summary: Device scripting options
      description: "Returns scripting options (built-in actions, custom scripts) available\
        \ for device"
      operationId: requestScriptingOptions
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: lang
        in: query
        description: Language
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceScriptingOptions'
  /v2/device/{id}/script/run:
    post:
      tags:
      - management
      summary: Run script or built-in action
      description: Run script or built-in action on a device
      operationId: runScriptOnDevice
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunScriptRequest'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/device/{id}/owner/{ownerUid}:
    post:
      tags:
      - management
      summary: Set device owner
      description: Sets the owner of the device.
      operationId: setDeviceOwner
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: ownerUid
        in: path
        description: Device owner identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            '*/*': {}
      security:
      - oauth2:
        - management
  /v2/device/{id}/windows-service/{serviceId}/configure:
    post:
      tags:
      - management
      summary: Modify Windows Service configuration
      description: Configures Windows Service startup settings
      operationId: setWindowsServiceConfiguration
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: serviceId
        in: path
        description: Service identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WindowsServiceConfiguration'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/device/{id}/patch/os/apply:
    post:
      tags:
      - management
      summary: Run OS patch apply
      description: Submit a job to start a device OS patch apply
      operationId: submitOSPatchApply
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Device is not applicable for os apply.
  /v2/device/{id}/patch/os/scan:
    post:
      tags:
      - management
      summary: Run OS patch scan
      description: Submit a job to start a device OS patch scan
      operationId: submitOSPatchScan
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Device is not applicable for os scan.
  /v2/device/{id}/patch/software/apply:
    post:
      tags:
      - management
      summary: Run Software patch apply
      description: Submit a job to start a device software patch apply
      operationId: submitSoftwarePatchApply
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Device is not applicable for software apply.
  /v2/device/{id}/patch/software/scan:
    post:
      tags:
      - management
      summary: Run Software patch scan
      description: Submit a job to start a device software patch scan
      operationId: submitSoftwarePatchScan
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
        "400":
          description: Device is not applicable for software scan.
  /v2/group/{id}/device-ids:
    get:
      tags:
      - groups
      summary: Group members
      description: Returns list of device identifiers that match group criteria
      operationId: getGroupDeviceIds
      parameters:
      - name: id
        in: path
        description: Group identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /v2/organization/{id}/locations:
    get:
      tags:
      - organization
      summary: Organization locations
      description: Returns list of locations for organization
      operationId: getOrganizationLocations
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
    post:
      tags:
      - management
      summary: Add new location to organization
      description: Creates new location for organization
      operationId: createLocationForOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationModel'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
  /v2/organization/{id}/end-users:
    get:
      tags:
      - organization
      summary: List users
      description: Returns list of end-users for organization
      operationId: getEndUsers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: includeRoles
        in: query
        description: Includes user role information
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /v2/organization/generate-installer:
    post:
      tags:
      - management
      summary: Generate installer
      description: Generates and returns URL for installer with specified settings
      operationId: getInstaller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateInstallerRequestDto'
            examples:
              example with nodeRole param auto:
                description: example with nodeRole param auto
                value:
                  organizationId: 1
                  locationId: 1
                  installerType: WINDOWS_MSI
                  content:
                    nodeRoleId: auto
              example with nodeRole param integer:
                description: example with nodeRole param integer
                value:
                  organizationId: 1
                  locationId: 1
                  installerType: WINDOWS_MSI
                  content:
                    nodeRoleId: "201"
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
  /v2/organization/{id}/location/{location_id}/installer/{installer_type}:
    get:
      tags:
      - management
      summary: Generate installer
      description: Generates and returns URL for installer for specified organization/location
      operationId: getInstallerForLocation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: installer_type
        in: path
        required: true
        schema:
          type: string
          enum:
          - WINDOWS_MSI
          - MAC_DMG
          - MAC_PKG
          - LINUX_DEB
          - LINUX_RPM
          - LINUX_ARM64_DEB
          - LINUX_ARMV7A_DEB
          - LINUX_ARM64_RPM
          - LINUX_ARMV7A_RPM
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
  /v2/organization/{id}/locations/{locationId}/backup/usage:
    get:
      tags:
      - organization
      summary: Organization location backup usage
      description: Returns a location backup usage
      operationId: getLocationUsage
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        description: Location identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a location backup usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBackupUsageSummary'
  /v2/organization/{id}/custom-fields:
    get:
      tags:
      - organization
      summary: Organization custom fields
      description: Returns list of organization custom fields
      operationId: getNodeCustomFields_1
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
    patch:
      tags:
      - organization
      summary: Update Field Values
      description: Update organization custom field values
      operationId: updateNodeAttributeValues_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/organization/{id}/location/{locationId}/custom-fields:
    get:
      tags:
      - Location
      summary: Location custom fields
      description: Returns list of location custom fields
      operationId: getNodeCustomFields_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: withInheritance
        in: query
        description: Retrieve values using definition scope hierarchy
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
    patch:
      tags:
      - Location
      summary: Update Field Values
      description: Update location custom field values
      operationId: updateNodeAttributeValues_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/organization/{id}:
    get:
      tags:
      - organization
      summary: Organization information
      description: "Returns organization details (policy mappings, locations)"
      operationId: getOrganization
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailed'
    patch:
      tags:
      - management
      summary: Update organization
      description: "Change organization name, description and policy mappings"
      operationId: updateOrganization
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationModel'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /v2/organization/{id}/devices:
    get:
      tags:
      - organization
      summary: Organization devices
      description: Returns list of devices for organization
      operationId: getOrganizationDevices
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Limit number of devices to return
        schema:
          type: integer
          format: int32
      - name: after
        in: query
        description: Last Node ID from previous page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeWithDetailedReferences'
  /v2/organization/{id}/locations/backup/usage:
    get:
      tags:
      - organization
      summary: Organization locations backup usage
      description: Returns a list of locations backup usage
      operationId: getOrganizationLocationUsage
      parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns list of locations backup usage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationBackupUsageSummary'
  /v2/organization/{id}/locations/{locationId}:
    patch:
      tags:
      - management
      summary: Update location
      description: "Change location name, address, description, custom data"
      operationId: updateLocation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationModel'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
  /v2/organization/{id}/policies:
    put:
      tags:
      - management
      summary: Change organization policy mappings
      description: Update policy assignment for node role(s). Returns list of affected
        device IDs
      operationId: updateNodeRolePolicyAssignmentForOrganization
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NodeRolePolicyAssignment'
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /v2/queries/antivirus-status:
    get:
      tags:
      - queries
      summary: Antivirus status report
      description: Returns list of statues of antivirus software installed on devices
      operationId: getAntivirusStatusReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: productState
        in: query
        description: Product State filter
        schema:
          type: string
      - name: productName
        in: query
        description: Product Name filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AntivirusStatusReport'
  /v2/queries/antivirus-threats:
    get:
      tags:
      - queries
      summary: Antivirus threats report
      description: Returns list of antivirus threats
      operationId: getAntivirusThreats
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AntivirusThreatsReport'
  /v2/queries/computer-systems:
    get:
      tags:
      - queries
      summary: Computer systems report
      description: Returns computer systems information for devices
      operationId: getComputerSystems
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerSystemsReport'
  /v2/queries/custom-fields-detailed:
    get:
      tags:
      - queries
      summary: Custom fields detailed report
      description: Returns Custom Fields report with additional information about
        each field
      operationId: getCustomFieldsDetailedReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      - name: updatedAfter
        in: query
        description: Custom fields updated after specified date
        schema:
          type: string
      - name: fields
        in: query
        description: Comma-separated list of fields
        schema:
          type: string
      - name: showSecureValues
        in: query
        description: Flag to indicate if secure values should be returned as plain
          text without encryption
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeAttributesDetailedReport'
  /v2/queries/custom-fields:
    get:
      tags:
      - queries
      summary: Custom fields report
      description: Returns Custom Fields report
      operationId: getCustomFieldsReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      - name: updatedAfter
        in: query
        description: Custom fields updated after specified date
        schema:
          type: string
      - name: fields
        in: query
        description: Comma-separated list of fields
        schema:
          type: string
      - name: showSecureValues
        in: query
        description: Flag to indicate if secure values should be returned as plain
          text without encryption
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeAttributesReport'
  /v2/queries/device-health:
    get:
      tags:
      - queries
      summary: Device health report
      description: Returns list of device health summary records
      operationId: getDeviceHealthReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: health
        in: query
        description: Health status filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceHealthReport'
  /v2/queries/backup/usage:
    get:
      tags:
      - queries
      summary: Device backup usage
      description: Returns the backup usage by device
      operationId: getDeviceUsage
      parameters:
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      - name: includeDeletedDevices
        in: query
        description: Whether or not include deleted devices
        schema:
          type: boolean
      responses:
        "200":
          description: Returns a device backup usage report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUsageReport'
  /v2/queries/disks:
    get:
      tags:
      - queries
      summary: Disk drives report
      description: Returns list of physical disks
      operationId: getDiskDrives
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskDriveReport'
  /v2/queries/os-patch-installs:
    get:
      tags:
      - queries
      summary: OS Patch installation report
      description: Returns patch installation history records (successful and failed)
      operationId: getInstalledOSPatches
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: status
        in: query
        description: "Patch Status filter (FAILED, INSTALLED)"
        schema:
          type: string
      - name: installedBefore
        in: query
        description: Include patches installed before specified date
        schema:
          type: string
      - name: installedAfter
        in: query
        description: Include patches installed after specified date
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPatchReport'
  /v2/queries/software-patch-installs:
    get:
      tags:
      - queries
      summary: Software Patch history report
      description: Returns 3rd party software patch installation history records (successful
        and failed)
      operationId: getInstalledSoftwarePatches
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: type
        in: query
        description: Patch Type filter
        schema:
          type: string
      - name: impact
        in: query
        description: Patch Impact filter
        schema:
          type: string
      - name: status
        in: query
        description: Patch Status filter
        schema:
          type: string
      - name: productIdentifier
        in: query
        description: Product Identifier
        schema:
          type: string
      - name: installedBefore
        in: query
        description: Include patches installed before specified date
        schema:
          type: string
      - name: installedAfter
        in: query
        description: Include patches installed after specified date
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwarePatchReport'
  /v2/queries/logged-on-users:
    get:
      tags:
      - queries
      summary: Last logged-on user report
      description: 'Returns usernames and logon times '
      operationId: getLastLoggedOnUsersReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedOnUsersReport'
  /v2/queries/network-interfaces:
    get:
      tags:
      - queries
      summary: List Network Interfaces
      description: Returns list of Network Interfaces for each device
      operationId: getNetworkInterfaces
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: integer
          description: Limit number of devices to return
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkInterfacesReport'
  /v2/queries/operating-systems:
    get:
      tags:
      - queries
      summary: Operating systems report
      description: Returns operating systems' for devices
      operationId: getOperatingSystems
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemsReport'
  /v2/queries/os-patches:
    get:
      tags:
      - queries
      summary: "Pending, Failed and Rejected OS patches report"
      description: Returns list of OS patches for which there were no installation
        attempts
      operationId: getPendingFailedRejectedOSPatches
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: status
        in: query
        description: Patch Status filter
        schema:
          type: string
      - name: type
        in: query
        description: Patch Type filter
        schema:
          type: string
      - name: severity
        in: query
        description: Patch Severity filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPatchReport'
  /v2/queries/software-patches:
    get:
      tags:
      - queries
      summary: "Pending, Failed and Rejected Software patches report"
      description: Returns list of 3rd party Software patches for which there were
        no installation attempts
      operationId: getPendingFailedRejectedSoftwarePatches
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: status
        in: query
        description: Patch Status filter
        schema:
          type: string
      - name: productIdentifier
        in: query
        description: Product Identifier
        schema:
          type: string
      - name: type
        in: query
        description: Patch Type filter
        schema:
          type: string
      - name: impact
        in: query
        description: Patch Impact filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwarePatchReport'
  /v2/queries/policy-overrides:
    get:
      tags:
      - queries
      summary: Get summary of device policy overrides
      description: Returns list of overridden policy sections for each device
      operationId: getPolicyOverrides_1
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyOverridesReport'
  /v2/queries/processors:
    get:
      tags:
      - queries
      summary: Processor report
      description: Returns list of processors
      operationId: getProcessors
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorReport'
  /v2/queries/raid-controllers:
    get:
      tags:
      - queries
      summary: RAID controller report
      description: Returns list of RAID controllers
      operationId: getRAIDControllerReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAIDControllerReport'
  /v2/queries/raid-drives:
    get:
      tags:
      - queries
      summary: RAID drive report
      description: Returns list of drives connected to RAID controllers
      operationId: getRAIDDriveReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAIDDriveReport'
  /v2/queries/scoped-custom-fields-detailed:
    get:
      tags:
      - queries
      summary: Scoped custom fields detailed report
      description: "Returns report for Custom Fields defined at different scopes (device,\
        \ location, organization) with additional information about each field"
      operationId: getScopedCustomFieldsDetailedReport
      parameters:
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      - name: updatedAfter
        in: query
        description: Custom fields updated after specified date
        schema:
          type: string
      - name: fields
        in: query
        description: Comma-separated list of fields
        schema:
          type: string
      - name: scopes
        in: query
        description: Comma-separated list of scopes
        schema:
          type: string
          default: all
      - name: showSecureValues
        in: query
        description: Flag to indicate if secure values should be returned as plain
          text without encryption
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedAttributesDetailedReport'
  /v2/queries/scoped-custom-fields:
    get:
      tags:
      - queries
      summary: Scoped custom fields report
      description: "Returns report for Custom Fields defined at different scopes (device,\
        \ location, organization)"
      operationId: getScopedCustomFieldsReport
      parameters:
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      - name: updatedAfter
        in: query
        description: Custom fields updated after specified date
        schema:
          type: string
      - name: fields
        in: query
        description: Comma-separated list of fields
        schema:
          type: string
      - name: scopes
        in: query
        description: Comma-separated list of scopes
        schema:
          type: string
          default: all
      - name: showSecureValues
        in: query
        description: Flag to indicate if secure values should be returned as plain
          text without encryption
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedAttributesReport'
  /v2/queries/software:
    get:
      tags:
      - queries
      summary: Software inventory
      description: Returns list software installed on devices
      operationId: getSoftware
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      - name: installedBefore
        in: query
        description: Include software installed before specified date
        schema:
          type: string
      - name: installedAfter
        in: query
        description: Include software installed after specified date
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareReport'
  /v2/queries/volumes:
    get:
      tags:
      - queries
      summary: Disk volumes report
      description: Returns list of disk volumes
      operationId: getVolumes
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ts
        in: query
        description: Monitoring timestamp filter
        schema:
          type: string
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
      - name: include
        in: query
        description: Additional information to include (bl - BitLocker status)
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesReport'
  /v2/queries/windows-services:
    get:
      tags:
      - queries
      summary: Windows services report
      description: Returns list of Windows Services and their statuses
      operationId: getWindowsServicesReport
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: name
        in: query
        description: Service name
        schema:
          type: string
      - name: state
        in: query
        description: Service state
        schema:
          type: string
          enum:
          - UNKNOWN
          - STOPPED
          - START_PENDING
          - RUNNING
          - STOP_PENDING
          - PAUSE_PENDING
          - PAUSED
          - CONTINUE_PENDING
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 10
          type: integer
          format: int32
          default: 1000
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsServiceReport'
  /v2/policies:
    get:
      tags:
      - system
      summary: List policies
      description: Returns list of policies
      operationId: getPolicies
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
    post:
      tags:
      - management
      summary: Creates new Policy
      description: "Creates new policy using (New Root, Child, Copy)"
      operationId: createPolicy
      parameters:
      - name: mode
        in: query
        description: Policy creation mode
        schema:
          type: string
          enum:
          - NEW
          - CHILD
          - COPY
      - name: templatePolicyId
        in: query
        description: Template Policy identifier
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyInfo'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
  /v2/jobs:
    get:
      tags:
      - system
      summary: List active jobs
      description: Returns list of running jobs
      operationId: getActiveJobs
      parameters:
      - name: jobType
        in: query
        description: Job Type filter
        schema:
          type: string
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: lang
        in: query
        description: Language tag
        schema:
          type: string
      - name: tz
        in: query
        description: Time Zone
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
  /v2/activities:
    get:
      tags:
      - system
      summary: List activities
      description: Returns activity log in reverse chronological order
      operationId: getActivities
      parameters:
      - name: class
        in: query
        description: Activity Class (System/Device) filter
        schema:
          type: string
          default: ALL
          enum:
          - SYSTEM
          - DEVICE
          - USER
          - ALL
      - name: before
        in: query
        description: Return activities recorded prior to specified date
        schema:
          type: string
      - name: after
        in: query
        description: Return activities recorded after to specified date
        schema:
          type: string
      - name: olderThan
        in: query
        description: Return activities recorded that are newer than specified activity
          ID
        schema:
          type: integer
          format: int64
      - name: newerThan
        in: query
        description: Return activities recorded that are older than specified activity
          ID
        schema:
          type: integer
          format: int64
      - name: type
        in: query
        description: Return activities of type
        schema:
          type: string
      - name: status
        in: query
        description: Return activities with status(es)
        schema:
          type: string
      - name: user
        in: query
        description: Return activities for user(s)
        schema:
          type: string
      - name: seriesUid
        in: query
        description: Return activities related to alert (series)
        schema:
          type: string
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of activities to return
        schema:
          maximum: 1000
          minimum: 10
          type: integer
          format: int32
          default: 200
      - name: lang
        in: query
        description: Language tag
        schema:
          type: string
      - name: tz
        in: query
        description: Time Zone
        schema:
          type: string
      - name: sourceConfigUid
        in: query
        description: Allows users to make a request directed to a specific script
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
  /v2/alerts:
    get:
      tags:
      - system
      summary: List active alerts (triggered conditions)
      description: Returns list of active alerts/triggered conditions
      operationId: getAlerts
      parameters:
      - name: sourceType
        in: query
        schema:
          type: string
          description: Alert Source filter
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: lang
        in: query
        description: Language tag
        schema:
          type: string
      - name: tz
        in: query
        description: Time Zone
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
  /v2/automation/scripts:
    get:
      tags:
      - system
      summary: List all available automation scripts
      description: Returns list of all available automation scripts
      operationId: getAutomationScripts
      parameters:
      - name: lang
        in: query
        description: Language
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AutomationScript'
  /v2/device-custom-fields:
    get:
      tags:
      - system
      summary: Device Custom Fields
      description: Returns list of all custom fields
      operationId: getDeviceGlobalCustomFields
      parameters:
      - name: scopes
        in: query
        description: Comma-separated list of scopes
        schema:
          type: string
          enum:
          - "all,node,location,organization"
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributePublicApiDTO'
  /v2/devices:
    get:
      tags:
      - system
      summary: List devices
      description: Returns list of devices (basic node information)
      operationId: getDevices
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of devices to return
        schema:
          type: integer
          format: int32
      - name: after
        in: query
        description: Last Node ID from previous page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeWithDetailedReferences'
  /v2/devices-detailed:
    get:
      tags:
      - system
      summary: List devices (detailed)
      description: Returns list of devices with additional information
      operationId: getDevicesDetailed
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: integer
          description: Limit number of devices to return
          format: int32
      - name: after
        in: query
        schema:
          type: integer
          description: Last Node ID from previous page
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /v2/notification-channels/enabled:
    get:
      tags:
      - system
      summary: List enabled notification channels
      description: Returns list of enabled notification channels
      operationId: getEnabledNotificationChannels
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationChannel'
  /v2/groups:
    get:
      tags:
      - system
      summary: List groups (saved searches)
      description: Returns list of groups
      operationId: getGroups
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
  /v2/locations:
    get:
      tags:
      - system
      summary: List locations
      description: Returns flat list of all locations for all organizations
      operationId: getLocations
      parameters:
      - name: pageSize
        in: query
        description: Limit number of locations to return
        schema:
          type: integer
          format: int32
      - name: after
        in: query
        description: Last Location Identifier from previous page
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationWithOrganizationRef'
  /v2/roles:
    get:
      tags:
      - system
      summary: List device roles
      description: Returns list of device roles
      operationId: getNodeRoles
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeRole'
  /v2/notification-channels:
    get:
      tags:
      - system
      summary: List notification channels
      description: Returns list of notification channels
      operationId: getNotificationChannels
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationChannel'
  /v2/organizations-detailed:
    get:
      tags:
      - system
      summary: List organizations (Detailed)
      description: Returns list of organizations with locations and policy mappings
      operationId: getOrganizationsDetailed
      parameters:
      - name: pageSize
        in: query
        description: Limit number of organizations to return
        schema:
          type: integer
          format: int32
      - name: after
        in: query
        description: Last Organization Identifier from previous page
        schema:
          type: integer
          format: int32
      - name: of
        in: query
        description: Organization filter
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDetailed'
  /v2/tasks:
    get:
      tags:
      - system
      summary: List scheduled tasks
      description: Returns list of registered scheduled tasks
      operationId: getScheduledTasks
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledTask'
  /v2/software-products:
    get:
      tags:
      - system
      summary: List supported 3rd party software
      description: Returns available software products (3rd party patching)
      operationId: getSoftwareProducts
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwareProduct'
  /v2/users:
    get:
      tags:
      - system
      summary: List users
      description: Returns list of users
      operationId: getUsers
      parameters:
      - name: userType
        in: query
        description: User type filter
        schema:
          type: string
          enum:
          - TECHNICIAN
          - END_USER
      - name: includeRoles
        in: query
        description: Includes user role information
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /v2/devices/search:
    get:
      tags:
      - system
      summary: Find devices
      description: Returns list of entities matching search term
      operationId: search
      parameters:
      - name: q
        in: query
        description: "Search query (name, logged on user name, IP address, etc.)"
        schema:
          type: string
      - name: limit
        in: query
        description: Limit number of devices to return
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSearchResults'
  /v2/backup/jobs:
    get:
      tags:
      - Backup
      summary: Backup jobs
      description: Returns list of backup jobs
      operationId: getBackupJobs
      parameters:
      - name: df
        in: query
        description: Device filter
        schema:
          type: string
      - name: ddf
        in: query
        description: Deleted device filter
        schema:
          type: string
      - name: sf
        in: query
        description: Backup job status filter
        schema:
          type: string
      - name: ptf
        in: query
        description: Backup job planType filter
        schema:
          type: string
      - name: stf
        in: query
        description: Backup job startTime filter
        schema:
          type: string
      - name: include
        in: query
        description: Which devices include (active|deleted|all) default value active
        schema:
          type: string
          default: active
      - name: cursor
        in: query
        description: Cursor name
        schema:
          type: string
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          format: int32
          default: 10000
      responses:
        "200":
          description: Returns a backup job report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupJobReport'
  /v2/ticketing/attributes:
    get:
      tags:
      - ticketing
      summary: List ticket attributes
      description: Returns list of the ticket attributes
      operationId: getTicketAttributes
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingAttributePublicApiDTO'
  /v2/ticketing/contact/contacts:
    get:
      tags:
      - ticketing
      summary: List contacts
      description: Returns list of contacts
      operationId: getContacts
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactResponseDTO'
  /v2/ticketing/ticket-form/{id}:
    get:
      tags:
      - ticketing
      summary: Ticket form
      description: 'Returns a ticket form with fields '
      operationId: getTicketFormById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketFormPublicApiDTO'
  /v2/ticketing/ticket-form:
    get:
      tags:
      - ticketing
      summary: List ticket forms
      description: Returns list of ticket forms with their fields
      operationId: getTicketForms
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketFormPublicApiDTO'
  /v2/ticketing/statuses:
    get:
      tags:
      - ticketing
      summary: Get list of ticket status
      description: 'Get list of ticket status '
      operationId: getAllStatuses
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketStatusPublicApiDTO'
  /v2/ticketing/trigger/boards:
    get:
      tags:
      - ticketing
      summary: List boards
      description: Returns list of ticketing boards
      operationId: getBoards
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketingBoardPublicApiDTO'
  /v2/ticketing/trigger/board/{boardId}/run:
    post:
      tags:
      - ticketing
      summary: List of tickets for board
      description: Run a board. Returns list of tickets matching the board condition
        and filters. Allows pagination
      operationId: getTicketsByBoard
      parameters:
      - name: boardId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketBoardScrollingRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDashboardPublicApiDTO'
  /v2/ticketing/app-user-contact:
    get:
      tags:
      - ticketing
      summary: List of users by user type
      description: "Returns list of users (contacts, end-user, technician)"
      operationId: getAllUserAndContacts
      parameters:
      - name: pageSize
        in: query
        description: Limit number of records per page
        schema:
          type: integer
          format: int32
          default: 50
      - name: anchorNaturalId
        in: query
        description: Last User Identifier from previous page
        schema:
          type: integer
          format: int32
          default: 0
      - name: searchCriteria
        in: query
        description: "Search by first name, last name or email address"
        schema:
          type: string
      - name: userType
        in: query
        description: User Type
        schema:
          type: string
          enum:
          - TECHNICIAN
          - END_USER
          - CONTACT
      - name: clientId
        in: query
        description: Organization identifier
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a list of all users and contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppUserAndContactPublicApiDTO'
components:
  schemas:
    CustomFieldPolicyConditionResponse:
      type: object
      properties:
        id:
          type: string
          description: Policy condition id
        conditionName:
          type: string
          description: Policy condition name
        displayName:
          type: string
          description: Policy condition display name
        enabled:
          type: boolean
          description: Policy condition enabled
        severity:
          type: string
          description: Policy condition severity
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          description: Policy condition priority
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        channels:
          uniqueItems: true
          type: array
          description: Policy condition notification channels
          items:
            type: integer
            description: Policy condition notification channels
            format: int32
        scripts:
          type: array
          description: Policy condition scripts
          items:
            $ref: '#/components/schemas/PolicyConditionScript'
        notificationAction:
          type: string
          description: Policy condition notification action
          enum:
          - NONE
          - SEND
        notifyOnReset:
          type: boolean
          description: Policy condition notify on reset
        resetThreshold:
          type: integer
          description: Policy condition reset threshold (seconds)
          format: int32
        inheritance:
          $ref: '#/components/schemas/PolicyConditionInheritanceStatus'
        matchAll:
          type: array
          description: Custom field value must meet all conditions
          items:
            $ref: '#/components/schemas/PolicyConditionCustomField'
        matchAny:
          type: array
          description: Custom field value must meet any conditions
          items:
            $ref: '#/components/schemas/PolicyConditionCustomField'
      description: Custom fields policy condition response payload
    PolicyConditionCustomField:
      required:
      - fieldName
      - operator
      - value
      type: object
      properties:
        fieldName:
          maxLength: 250
          minLength: 0
          type: string
          description: Custom field name
        operator:
          type: string
          description: Custom field operator
          enum:
          - EQUALS
          - NOT_EQUALS
          - LESS_THAN
          - LESS_OR_EQUAL_THAN
          - GREATER_THAN
          - GREATER_OR_EQUAL_THAN
          - IS_NOT_NULL
          - CONTAINS
          - CONTAINS_NONE
          - CONTAINS_ANY
        value:
          maxLength: 65535
          minLength: 0
          type: string
          description: Custom field value
      description: Policy condition custom field
    PolicyConditionInheritanceStatus:
      type: object
      properties:
        inherited:
          type: boolean
          description: Is policy condition inherited
        overridden:
          type: boolean
          description: Is policy condition overridden
        sourcePolicyId:
          type: integer
          description: Parent policy Id
          format: int32
      description: Policy condition inheritance status
    PolicyConditionScript:
      type: object
      properties:
        scriptId:
          type: integer
          description: Policy condition script id
          format: int32
        runAs:
          type: string
          description: Policy condition script runAs
          default: SYSTEM
          enum:
          - SYSTEM
          - LOGGED_ON_USER
          - LOCAL_ADMIN
          - DOMAIN_ADMIN
          - PREFERRED_CREDENTIAL_MAC
          - PREFERRED_CREDENTIAL_LINUX
        scriptParam:
          type: string
          description: Policy condition script parameter
        scriptVariables:
          maxItems: 20
          minItems: 0
          type: array
          description: Policy condition script variables
          items:
            $ref: '#/components/schemas/PolicyConditionScriptVariable'
      description: Policy condition script
    PolicyConditionScriptVariable:
      type: object
      properties:
        id:
          type: string
          description: Policy condition script variable Id
        value:
          maxLength: 65535
          minLength: 0
          type: string
          description: Policy condition script variable value
      description: Policy condition script variable
    CustomFieldsPolicyConditionCreateRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: Policy condition enabled
          default: true
        displayName:
          maxLength: 255
          minLength: 0
          type: string
          description: Policy condition display name
        severity:
          type: string
          description: Policy condition severity
          default: NONE
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          description: Policy condition priority
          default: NONE
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        channels:
          maxItems: 20
          minItems: 0
          uniqueItems: true
          type: array
          description: Policy condition notification channels
          items:
            type: integer
            description: Policy condition notification channels
            format: int32
        scripts:
          maxItems: 20
          minItems: 0
          type: array
          description: Policy condition scripts
          items:
            $ref: '#/components/schemas/PolicyConditionScript'
        notificationAction:
          type: string
          description: Policy condition notification action
          default: NONE
          enum:
          - NONE
          - SEND
        notifyOnReset:
          type: boolean
          description: Policy condition notify on reset
          default: false
        resetThreshold:
          type: integer
          description: Policy condition reset threshold (seconds)
          format: int32
          default: 14400
        matchAll:
          maxItems: 10
          minItems: 0
          type: array
          description: Custom field value must meet all conditions
          items:
            $ref: '#/components/schemas/PolicyConditionCustomField'
        matchAny:
          maxItems: 10
          minItems: 0
          type: array
          description: Custom field value must meet any conditions
          items:
            $ref: '#/components/schemas/PolicyConditionCustomField'
      description: Custom fields policy condition create request payload
    WindowsEventPolicyConditionOccurrence:
      type: object
      properties:
        enabled:
          type: boolean
          description: Occurrence enabled
          default: false
        threshold:
          type: integer
          description: Occurrence threshold
          format: int32
          default: 2
        duration:
          type: integer
          description: Occurrence duration
          format: int32
          default: 5
      description: Windows event policy condition occurrence
    WindowsEventPolicyConditionResponse:
      type: object
      properties:
        id:
          type: string
          description: Policy condition id
        conditionName:
          type: string
          description: Policy condition name
        displayName:
          type: string
          description: Policy condition display name
        enabled:
          type: boolean
          description: Policy condition enabled
        severity:
          type: string
          description: Policy condition severity
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          description: Policy condition priority
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        channels:
          uniqueItems: true
          type: array
          description: Policy condition notification channels
          items:
            type: integer
            description: Policy condition notification channels
            format: int32
        scripts:
          type: array
          description: Policy condition scripts
          items:
            $ref: '#/components/schemas/PolicyConditionScript'
        notificationAction:
          type: string
          description: Policy condition notification action
          enum:
          - NONE
          - SEND
        notifyOnReset:
          type: boolean
          description: Policy condition notify on reset
        resetThreshold:
          type: integer
          description: Policy condition reset threshold (seconds)
          format: int32
        inheritance:
          $ref: '#/components/schemas/PolicyConditionInheritanceStatus'
        source:
          type: string
          description: Event Source
        eventIds:
          uniqueItems: true
          type: array
          description: Event IDs
          items:
            type: integer
            description: Event IDs
            format: int32
        text:
          $ref: '#/components/schemas/WindowsEventPolicyConditionText'
        occurrence:
          $ref: '#/components/schemas/WindowsEventPolicyConditionOccurrence'
      description: Windows event policy condition response payload
    WindowsEventPolicyConditionText:
      type: object
      properties:
        values:
          maxItems: 20
          minItems: 0
          uniqueItems: true
          type: array
          description: Text values
          items:
            type: string
            description: Text values
        condition:
          type: string
          description: Text condition
          default: CONTAINS
          enum:
          - CONTAINS
          - NOT_CONTAINS
        include:
          type: string
          description: Text include
          default: ALL
          enum:
          - ALL
          - ANY
      description: Windows event policy condition text
    WindowsEventPolicyConditionCreateRequest:
      required:
      - eventIds
      - source
      type: object
      properties:
        enabled:
          type: boolean
          description: Policy condition enabled
          default: true
        displayName:
          maxLength: 255
          minLength: 0
          type: string
          description: Policy condition display name
        severity:
          type: string
          description: Policy condition severity
          default: NONE
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          description: Policy condition priority
          default: NONE
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        channels:
          maxItems: 20
          minItems: 0
          uniqueItems: true
          type: array
          description: Policy condition notification channels
          items:
            type: integer
            description: Policy condition notification channels
            format: int32
        scripts:
          maxItems: 20
          minItems: 0
          type: array
          description: Policy condition scripts
          items:
            $ref: '#/components/schemas/PolicyConditionScript'
        notificationAction:
          type: string
          description: Policy condition notification action
          default: NONE
          enum:
          - NONE
          - SEND
        notifyOnReset:
          type: boolean
          description: Policy condition notify on reset
          default: false
        resetThreshold:
          type: integer
          description: Policy condition reset threshold (seconds)
          format: int32
          default: 14400
        source:
          maxLength: 255
          minLength: 0
          type: string
          description: Event Source
        eventIds:
          maxItems: 20
          minItems: 0
          uniqueItems: true
          type: array
          description: Event IDs
          items:
            type: integer
            description: Event IDs
            format: int32
        text:
          $ref: '#/components/schemas/WindowsEventPolicyConditionText'
        occurrence:
          $ref: '#/components/schemas/WindowsEventPolicyConditionOccurrence'
      description: Windows event policy condition create request payload
    HTTPHeader:
      type: object
      properties:
        name:
          type: string
          description: Header name
        value:
          type: string
          description: Header value
      description: Custom HTTP Headers (i.e. Authorization)
    WebhookConfiguration:
      type: object
      properties:
        url:
          type: string
          description: Callback (WebHook) URL for activity notifications
        activities:
          type: object
          additionalProperties:
            type: array
            description: Activity filter
            items:
              type: string
              description: Activity filter
          description: Activity filter
        expand:
          type: array
          description: Which references to expand in payloads
          items:
            type: string
            description: Which references to expand in payloads
        headers:
          type: array
          description: Custom HTTP Headers (i.e. Authorization)
          items:
            $ref: '#/components/schemas/HTTPHeader'
    FeatureSettings:
      type: object
      properties:
        product:
          type: string
          description: Configured product code
        enabled:
          type: boolean
          description: Is enabled
        targets:
          type: array
          description: Feature deployment targets
          items:
            type: string
            description: Feature deployment targets
        options:
          type: object
          additionalProperties:
            type: object
            description: Feature options
          description: Feature options
      description: Feature/product/integration configuration settings
    Location:
      type: object
      properties:
        name:
          type: string
          description: Location name
        address:
          type: string
          description: Address
        description:
          type: string
          description: Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        id:
          type: integer
          description: Location identifier
          format: int32
      description: Location
    NodeRolePolicyAssignment:
      type: object
      properties:
        nodeRoleId:
          type: integer
          description: Node Role Identifier
          format: int32
        policyId:
          type: integer
          description: Policy Identifier
          format: int32
      description: Node role policy assignments
    OrganizationDetailed:
      type: object
      properties:
        name:
          type: string
          description: Organization full name
        description:
          type: string
          description: Organization Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        nodeApprovalMode:
          type: string
          description: Device Approval Mode
          enum:
          - AUTOMATIC
          - MANUAL
          - REJECT
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        id:
          type: integer
          description: Organization identifier
          format: int32
        locations:
          type: array
          description: List of locations
          items:
            $ref: '#/components/schemas/Location'
        policies:
          type: array
          description: Node role policy assignments
          items:
            $ref: '#/components/schemas/NodeRolePolicyAssignment'
        settings:
          $ref: '#/components/schemas/OrganizationSettings'
    OrganizationSettings:
      type: object
      properties:
        trayicon:
          $ref: '#/components/schemas/FeatureSettings'
        splashtop:
          $ref: '#/components/schemas/FeatureSettings'
        teamviewer:
          $ref: '#/components/schemas/FeatureSettings'
        backup:
          $ref: '#/components/schemas/FeatureSettings'
        psa:
          $ref: '#/components/schemas/FeatureSettings'
      description: Organization settings
    LocationModel:
      type: object
      properties:
        name:
          type: string
          description: Location name
        address:
          type: string
          description: Address
        description:
          type: string
          description: Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
    OrganizationWithLocationsAndPolicyAssignmentsModel:
      type: object
      properties:
        name:
          type: string
          description: Organization full name
        description:
          type: string
          description: Organization Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        nodeApprovalMode:
          type: string
          description: Device Approval Mode
          enum:
          - AUTOMATIC
          - MANUAL
          - REJECT
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        locations:
          type: array
          description: List of locations
          items:
            $ref: '#/components/schemas/LocationModel'
        policies:
          type: array
          description: Node role policy assignments
          items:
            $ref: '#/components/schemas/NodeRolePolicyAssignment'
    DeviceIDList:
      type: object
      properties:
        devices:
          type: array
          items:
            type: integer
            format: int32
    AttachmentMetadataPublicApiDTO:
      type: object
      properties:
        name:
          type: string
          description: name
        mimeType:
          type: string
          description: Mime type
        size:
          type: string
          description: Size in bytes
        extension:
          type: string
          description: File extension
        contentId:
          type: string
          description: Content identifier
    BodyPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
    FormDataBodyPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        simple:
          type: boolean
        name:
          type: string
        value:
          type: string
        formDataContentDisposition:
          $ref: '#/components/schemas/FormDataContentDisposition'
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    FormDataContentDisposition:
      type: object
      properties:
        type:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
        name:
          type: string
    MessageBodyWorkers:
      type: object
    MultiPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        bodyParts:
          type: array
          items:
            $ref: '#/components/schemas/BodyPart'
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    ParameterizedHeader:
      type: object
      properties:
        value:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    ChecklistDescription:
      type: object
      properties:
        text:
          type: string
        html:
          type: string
      description: Task description
    ChecklistTemplatePublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        name:
          type: string
          description: Checklist template name (must be unique)
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        tasks:
          type: array
          description: Checklist template tasks
          items:
            $ref: '#/components/schemas/ChecklistTemplateTaskPublicApiDTO'
        required:
          type: boolean
          description: Indicates if the checklist completion is required
        lastUpdatedOn:
          type: number
          description: Last updated on
          format: double
        lastUpdatedBy:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
        archived:
          type: boolean
          description: Indicates if the checklist template is archived
        archivedBy:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
        archiveTime:
          type: number
          description: Archive time
          format: double
    ChecklistTemplateTaskPublicApiDTO:
      type: object
      properties:
        position:
          type: integer
          description: Position of the task
          format: int32
        name:
          type: string
          description: Task name
        description:
          $ref: '#/components/schemas/ChecklistDescription'
      description: Checklist template tasks
    ChecklistUserResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        deleted:
          type: boolean
      description: Archive by user
    ArchiveChecklistTemplatesRequest:
      type: object
      properties:
        checklistTemplateIds:
          type: array
          items:
            type: integer
            format: int32
    ChecklistTemplateTaskPublicApiRequest:
      type: object
      properties:
        position:
          type: integer
          description: Position of the task
          format: int32
        name:
          type: string
          description: Task name
        description:
          $ref: '#/components/schemas/ChecklistDescription'
      description: Checklist's tasks
    CreateChecklistTemplatePublicApiRequest:
      type: object
      properties:
        name:
          type: string
          description: Checklist template name (must be unique)
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        tasks:
          type: array
          description: Checklist's tasks
          items:
            $ref: '#/components/schemas/ChecklistTemplateTaskPublicApiRequest'
        required:
          type: boolean
          description: Checklist's tasks
    RestoreChecklistTemplatesRequest:
      type: object
      properties:
        checklistTemplateIds:
          type: array
          items:
            type: integer
            format: int32
    UpdateChecklistTemplatePublicApiRequest:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Checklist template identifier
          format: int32
        name:
          type: string
          description: Checklist template name (must be unique)
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        tasks:
          type: array
          description: Checklist's tasks
          items:
            $ref: '#/components/schemas/ChecklistTemplateTaskPublicApiRequest'
        required:
          type: boolean
          description: Indicates if the checklist is required
    ClientChecklistPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        name:
          type: string
          description: Checklist name (must be unique)
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        required:
          type: boolean
          description: Indicates if the checklist completion is required
        dueDate:
          type: number
          description: Due date
          format: double
        completed:
          type: boolean
          description: Indicates if the checklist is completed
        completedOn:
          type: number
          description: Date of completion
          format: double
        assignedTo:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
        lastUpdatedOn:
          type: number
          description: Last updated on
          format: double
        lastUpdatedBy:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
        completedTaskCount:
          type: integer
          description: Last updated by user
          format: int32
        totalTaskCount:
          type: integer
          description: Checklist's total tasks count
          format: int32
        tasks:
          type: array
          description: Checklist's tasks
          items:
            $ref: '#/components/schemas/ClientChecklistTaskPublicApiDTO'
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        clientName:
          type: string
          description: Client name
        archived:
          type: boolean
          description: Indicates if the checklist is archived
        archivedBy:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
        archiveTime:
          type: number
          description: Archive time
          format: double
    ClientChecklistTaskPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        position:
          type: integer
          description: Position of the task
          format: int32
        name:
          type: string
          description: Task name
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        assignedTo:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
        dueDate:
          type: number
          description: Due date
          format: double
        completed:
          type: boolean
          description: Indicates if the checklist is completed
        completedOn:
          type: number
          description: Date of completion
          format: double
        completedBy:
          $ref: '#/components/schemas/ChecklistUserResponseDTO'
      description: Checklist's tasks
    ArchiveClientChecklistRequest:
      type: object
      properties:
        clientChecklistIds:
          type: array
          items:
            type: integer
            format: int32
    ClientChecklistTaskPublicApiRequest:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Identifier
          format: int32
        position:
          type: integer
          description: Position of the task
          format: int32
        name:
          type: string
          description: Task name
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        assignedToUserId:
          minimum: 1
          type: integer
          description: User identifier assigned to the checklist task
          format: int32
        dueDate:
          type: number
          description: Due date
          format: double
        completed:
          type: boolean
          description: Indicates if the checklist is completed
      description: Checklist tasks
    CreateClientChecklistAndTasksPublicApiRequest:
      type: object
      properties:
        name:
          type: string
          description: Checklist name
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        required:
          type: boolean
          description: Indicates if the checklist completion is required
        dueDate:
          type: number
          description: Due date
          format: double
        assignedToUserId:
          minimum: 1
          type: integer
          description: User identifier assigned to the checklist
          format: int32
        organizationId:
          minimum: 1
          type: integer
          description: Organization identifier
          format: int32
        checklistTemplateId:
          minimum: 1
          type: integer
          description: Checklist template identifier
          format: int32
        tasks:
          type: array
          description: Checklist tasks
          items:
            $ref: '#/components/schemas/ClientChecklistTaskPublicApiRequest'
    PromoteClientChecklistWithNamePublicApiRequest:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Identifier
          format: int32
        name:
          type: string
          description: Checklist name
    UpdateClientChecklistAndTasksPublicApiRequest:
      type: object
      properties:
        checklistId:
          minimum: 1
          type: integer
          description: Checklist identifier
          format: int32
        name:
          type: string
          description: Checklist name
        description:
          $ref: '#/components/schemas/ChecklistDescription'
        required:
          type: boolean
          description: Indicates if the checklist completion is required
        dueDate:
          type: number
          description: Due date
          format: double
        assignedToUserId:
          minimum: 1
          type: integer
          description: User identifier assigned to the checklist
          format: int32
        tasks:
          type: array
          description: Checklist tasks
          items:
            $ref: '#/components/schemas/ClientChecklistTaskPublicApiRequest'
    ClientDocumentAttributeWithValuePublicApiDTO:
      type: object
      properties:
        name:
          type: string
          description: Name
        value:
          type: object
          description: Value
        valueUpdateTime:
          type: number
          description: Value Last Updated
          format: double
      description: Updated Fields
    ClientDocumentWithAttributeValuesPublicApiDTO:
      type: object
      properties:
        documentId:
          type: integer
          description: Document Identifier
          format: int32
        documentName:
          type: string
          description: Document Name
        documentDescription:
          type: string
          description: Document Description
        documentUpdateTime:
          type: number
          description: Document Last Updated
          format: double
        fields:
          type: array
          description: Fields
          items:
            $ref: '#/components/schemas/ClientDocumentAttributeWithValuePublicApiDTO'
        documentTemplateId:
          type: integer
          description: Document Template Identifier
          format: int32
        documentTemplateName:
          type: string
          description: Document Template Name
        organizationId:
          type: integer
          description: Organization Identifier
          format: int32
    ClientDocumentWithAttributeValuesPublicApiRequest:
      type: object
      properties:
        documentName:
          type: string
          description: Document Name
        documentDescription:
          type: string
          description: Document Description
        fields:
          type: object
          additionalProperties:
            type: object
            description: Fields
          description: Fields
    ClientDocumentWithAttributeValuesBulkCreatePublicApiRequest:
      type: object
      properties:
        documentName:
          type: string
          description: Document Name
        documentDescription:
          type: string
          description: Document Description
        fields:
          type: object
          additionalProperties:
            type: object
            description: Fields
          description: Fields
        documentTemplateId:
          type: integer
          description: Document Template Identifier
          format: int32
        organizationId:
          type: integer
          description: Organization Identifier
          format: int32
    ClientDocumentWithUpdatedAttributeValuesPublicApiDTO:
      type: object
      properties:
        documentId:
          type: integer
          description: Document Identifier
          format: int32
        documentName:
          type: string
          description: Document Name
        documentDescription:
          type: string
          description: Document Description
        documentUpdateTime:
          type: number
          description: Document Last Updated
          format: double
        updatedFields:
          type: array
          description: Updated Fields
          items:
            $ref: '#/components/schemas/ClientDocumentAttributeWithValuePublicApiDTO'
        documentTemplateId:
          type: integer
          description: Document Template Identifier
          format: int32
        documentTemplateName:
          type: string
          description: Document Template Name
        organizationId:
          type: integer
          description: Organization Identifier
          format: int32
    ClientDocumentWithAttributeValuesBulkUpdatePublicApiRequest:
      type: object
      properties:
        documentId:
          type: integer
          description: Document Identifier
          format: int32
        documentName:
          type: string
          description: Document Name
        documentDescription:
          type: string
          description: Document Description
        fields:
          type: object
          additionalProperties:
            type: object
            description: Fields
          description: Fields
    ArchiveUserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        displayName:
          type: string
        deleted:
          type: boolean
      description: Indicates who archived the template
    AttributeContentAdvancedSettings:
      type: object
      properties:
        fileMaxSize:
          type: integer
          format: int32
        fileExtensions:
          type: array
          items:
            type: string
        dateFilters:
          $ref: '#/components/schemas/AttributeContentAdvancedSettingsDateFilters'
        maxCharacters:
          type: integer
          format: int32
        complexityRules:
          $ref: '#/components/schemas/AttributeContentAdvancedSettingsComplexityRules'
        numericRange:
          $ref: '#/components/schemas/AttributeContentAdvancedSettingsNumericRange'
        org:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        nodeClass:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - WINDOWS_SERVER
            - WINDOWS_WORKSTATION
            - LINUX_WORKSTATION
            - MAC
            - ANDROID
            - APPLE_IOS
            - APPLE_IPADOS
            - VMWARE_VM_HOST
            - VMWARE_VM_GUEST
            - HYPERV_VMM_HOST
            - HYPERV_VMM_GUEST
            - LINUX_SERVER
            - MAC_SERVER
            - CLOUD_MONITOR_TARGET
            - NMS_SWITCH
            - NMS_ROUTER
            - NMS_FIREWALL
            - NMS_PRIVATE_NETWORK_GATEWAY
            - NMS_PRINTER
            - NMS_SCANNER
            - NMS_DIAL_MANAGER
            - NMS_WAP
            - NMS_IPSLA
            - NMS_COMPUTER
            - NMS_VM_HOST
            - NMS_APPLIANCE
            - NMS_OTHER
            - NMS_SERVER
            - NMS_PHONE
            - NMS_VIRTUAL_MACHINE
            - NMS_NETWORK_MANAGEMENT_AGENT
        ipAddressType:
          type: string
          enum:
          - ALL
          - IPV4
          - IPV6
        expandLargeValueOnRender:
          type: boolean
    AttributeContentAdvancedSettingsComplexityRules:
      type: object
      properties:
        mustContainOneInteger:
          type: boolean
        mustContainOneLowercaseLetter:
          type: boolean
        mustContainOneUppercaseLetter:
          type: boolean
        greaterOrEqualThanSixCharacters:
          type: boolean
    AttributeContentAdvancedSettingsDateFilters:
      type: object
      properties:
        type:
          type: string
          enum:
          - NONE
          - INCLUDE
          - EXCLUDE
          - PAST_DATES_ONLY
          - FUTURE_DATES_ONLY
          - RANGE
        selected:
          type: array
          items:
            type: string
    AttributeContentAdvancedSettingsNumericRange:
      type: object
      properties:
        min:
          type: number
        max:
          type: number
    DocumentAttributeContentPublicApi:
      type: object
      properties:
        values:
          type: array
          description: Used for dropdown options
          items:
            $ref: '#/components/schemas/DocumentAttributeContentValuePublicApi'
        required:
          type: boolean
          description: Indicates if the field is required
        footerText:
          type: string
          description: Footer text
        tooltipText:
          type: string
          description: Tooltip text
        advancedSettings:
          $ref: '#/components/schemas/AttributeContentAdvancedSettings'
      description: Field content
    DocumentAttributeContentValuePublicApi:
      type: object
      properties:
        id:
          type: string
          description: Identifier
          format: uuid
        name:
          type: string
          description: Dropdown option name
        active:
          type: boolean
          description: Indicates if a dropdown option is active
      description: Used for dropdown options
    DocumentItemPublicApiDTO:
      type: object
      properties:
        fieldId:
          type: integer
          description: Field identifier
          format: int32
        fieldLabel:
          type: string
          description: Field or UI element name
        fieldName:
          type: string
          description: Field name
        fieldDescription:
          type: string
          description: Field description
        fieldType:
          type: string
          description: Field type
          enum:
          - DROPDOWN
          - MULTI_SELECT
          - CHECKBOX
          - TEXT
          - TEXT_MULTILINE
          - TEXT_ENCRYPTED
          - NUMERIC
          - DECIMAL
          - DATE
          - DATE_TIME
          - TIME
          - ATTACHMENT
          - NODE_DROPDOWN
          - NODE_MULTI_SELECT
          - CLIENT_DROPDOWN
          - CLIENT_MULTI_SELECT
          - CLIENT_LOCATION_DROPDOWN
          - CLIENT_LOCATION_MULTI_SELECT
          - CLIENT_DOCUMENT_DROPDOWN
          - CLIENT_DOCUMENT_MULTI_SELECT
          - EMAIL
          - PHONE
          - IP_ADDRESS
          - WYSIWYG
          - URL
        fieldTechnicianPermission:
          type: string
          description: Field technician permission
          enum:
          - NONE
          - EDITABLE
          - READ_ONLY
        fieldScriptPermission:
          type: string
          description: Field script permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        fieldApiPermission:
          type: string
          description: Field public API permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        fieldDefaultValue:
          type: string
          description: Default value
        fieldContent:
          $ref: '#/components/schemas/DocumentAttributeContentPublicApi'
        uiElementUid:
          type: string
          description: UI element identifier
          format: uuid
        uiElementName:
          type: string
          description: UI element name
        uiElementType:
          type: string
          description: UI element type
          enum:
          - TITLE
          - DESCRIPTION
          - SEPARATOR
        uiElementValue:
          type: string
          description: UI element value
        createdTime:
          type: number
          description: Creation time
          format: double
        updatedTime:
          type: number
          description: Last updated time
          format: double
      description: Document template fields
    DocumentTemplatePublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        name:
          type: string
          description: Name of the template (must be unique)
        description:
          type: string
          description: Description of the template
        allowMultiple:
          type: boolean
          description: Indicates if multiple instances of the document template is
            allowed
        mandatory:
          type: boolean
          description: Indicates if the document template is mandatory
        createTime:
          type: number
          description: Creation time
          format: double
        updateTime:
          type: number
          description: Last updated time
          format: double
        fields:
          type: array
          description: Document template fields
          items:
            $ref: '#/components/schemas/DocumentItemPublicApiDTO'
        availableToAllTechnicians:
          type: boolean
          description: Indicates if the document template is available to all technicians
        allowedTechnicianRoles:
          type: array
          description: List of allowed technician role ids
          items:
            type: integer
            description: List of allowed technician role ids
            format: int32
        archived:
          type: boolean
          description: Indicates if the document template is archived
        archivedTime:
          type: number
          description: Indicates the time the template was archived
          format: double
        archivedBy:
          $ref: '#/components/schemas/ArchiveUserInfo'
    NewDocumentAttributeContentPublicApi:
      type: object
      properties:
        values:
          type: array
          description: Used for dropdown options
          items:
            $ref: '#/components/schemas/NewDocumentAttributeContentValuePublicApi'
        required:
          type: boolean
          description: Indicates if the field is required
        footerText:
          type: string
          description: Footer text
        tooltipText:
          type: string
          description: Tooltip text
        advancedSettings:
          $ref: '#/components/schemas/AttributeContentAdvancedSettings'
      description: Field content
    NewDocumentAttributeContentValuePublicApi:
      type: object
      properties:
        name:
          type: string
          description: Dropdown option name
      description: Used for dropdown options
    NewDocumentItemPublicApiRequest:
      required:
      - fieldLabel
      - fieldName
      type: object
      properties:
        fieldLabel:
          type: string
          description: Field label
        fieldName:
          type: string
          description: Field name (Immutable value)
        fieldDescription:
          type: string
          description: Field description
        fieldType:
          type: string
          description: Field type (Immutable value)
          enum:
          - DROPDOWN
          - MULTI_SELECT
          - CHECKBOX
          - TEXT
          - TEXT_MULTILINE
          - TEXT_ENCRYPTED
          - NUMERIC
          - DECIMAL
          - DATE
          - DATE_TIME
          - TIME
          - ATTACHMENT
          - NODE_DROPDOWN
          - NODE_MULTI_SELECT
          - CLIENT_DROPDOWN
          - CLIENT_MULTI_SELECT
          - CLIENT_LOCATION_DROPDOWN
          - CLIENT_LOCATION_MULTI_SELECT
          - CLIENT_DOCUMENT_DROPDOWN
          - CLIENT_DOCUMENT_MULTI_SELECT
          - EMAIL
          - PHONE
          - IP_ADDRESS
          - WYSIWYG
          - URL
        fieldTechnicianPermission:
          type: string
          description: Field technician permission
          enum:
          - NONE
          - EDITABLE
          - READ_ONLY
        fieldScriptPermission:
          type: string
          description: Field script permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        fieldApiPermission:
          type: string
          description: Field public API permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        fieldDefaultValue:
          type: string
          description: Default value
        fieldContent:
          $ref: '#/components/schemas/NewDocumentAttributeContentPublicApi'
        uiElementName:
          type: string
          description: UI element name
        uiElementType:
          type: string
          description: UI element type
          enum:
          - TITLE
          - DESCRIPTION
          - SEPARATOR
        uiElementValue:
          type: string
          description: UI element value
      description: List of fields and ui elements
    NewDocumentTemplatePublicApiRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the template (must be unique)
        description:
          type: string
          description: Description of the template
        allowMultiple:
          type: boolean
          description: States if multiple instances of the document template is allowed
        mandatory:
          type: boolean
          description: Indicates if the document template is mandatory
        fields:
          type: array
          description: List of fields and ui elements
          items:
            $ref: '#/components/schemas/NewDocumentItemPublicApiRequest'
        availableToAllTechnicians:
          type: boolean
          description: States if the document template is available to all technicians
        allowedTechnicianRoles:
          type: array
          description: List of allowed technician role ids
          items:
            type: integer
            description: List of allowed technician role ids
            format: int32
    UpdateDocumentItemPublicApiRequest:
      type: object
      properties:
        fieldId:
          type: integer
          description: Field identifier (Used to identify existing fields)
          format: int32
        fieldLabel:
          type: string
          description: Field or UI element name
        fieldName:
          type: string
          description: Field name (Immutable except for new fields)
        fieldDescription:
          type: string
          description: Field description
        fieldType:
          type: string
          description: Field type (Immutable except for new fields)
          enum:
          - DROPDOWN
          - MULTI_SELECT
          - CHECKBOX
          - TEXT
          - TEXT_MULTILINE
          - TEXT_ENCRYPTED
          - NUMERIC
          - DECIMAL
          - DATE
          - DATE_TIME
          - TIME
          - ATTACHMENT
          - NODE_DROPDOWN
          - NODE_MULTI_SELECT
          - CLIENT_DROPDOWN
          - CLIENT_MULTI_SELECT
          - CLIENT_LOCATION_DROPDOWN
          - CLIENT_LOCATION_MULTI_SELECT
          - CLIENT_DOCUMENT_DROPDOWN
          - CLIENT_DOCUMENT_MULTI_SELECT
          - EMAIL
          - PHONE
          - IP_ADDRESS
          - WYSIWYG
          - URL
        fieldTechnicianPermission:
          type: string
          description: Field technician permission
          enum:
          - NONE
          - EDITABLE
          - READ_ONLY
        fieldScriptPermission:
          type: string
          description: Field script permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        fieldApiPermission:
          type: string
          description: Field public API permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        fieldDefaultValue:
          type: string
          description: Default value
        fieldContent:
          $ref: '#/components/schemas/DocumentAttributeContentPublicApi'
        uiElementUid:
          type: string
          description: UI element identifier
          format: uuid
        uiElementName:
          type: string
          description: UI element name
        uiElementType:
          type: string
          description: UI element type
          enum:
          - TITLE
          - DESCRIPTION
          - SEPARATOR
        uiElementValue:
          type: string
          description: UI element value
      description: List of fields and ui elements
    UpdateDocumentTemplatePublicApiRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the template (must be unique)
        description:
          type: string
          description: Description of the template
        mandatory:
          type: boolean
          description: Indicates if the document template is mandatory
        fields:
          type: array
          description: List of fields and ui elements
          items:
            $ref: '#/components/schemas/UpdateDocumentItemPublicApiRequest'
        availableToAllTechnicians:
          type: boolean
          description: States if the document template is available to all technicians
        allowedTechnicianRoles:
          type: array
          description: List of allowed technician role ids
          items:
            type: integer
            description: List of allowed technician role ids
            format: int32
    ItamManageAssetRequestPublicApiDTO:
      type: object
      properties:
        assetIds:
          uniqueItems: true
          type: array
          description: Array of asset IDs to perform bulk operations on (provide the
            type of asset with the URL)
          items:
            type: integer
            description: Array of asset IDs to perform bulk operations on (provide
              the type of asset with the URL)
            format: int32
        tagIdsToAdd:
          uniqueItems: true
          type: array
          description: Array of tag IDs to add to the supplied assets
          items:
            type: integer
            description: Array of tag IDs to add to the supplied assets
            format: int32
        tagIdsToRemove:
          uniqueItems: true
          type: array
          description: Array of tag IDs to remove from the supplied assets
          items:
            type: integer
            description: Array of tag IDs to remove from the supplied assets
            format: int32
    ItamTagPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Tag ID
          format: int32
        name:
          type: string
          description: Tag name
        description:
          type: string
          description: Description of the tag
        createTime:
          type: number
          description: Creation time for the tag in seconds since unix epoch
          format: double
        updateTime:
          type: number
          description: Last update time for the tag in seconds since unix epoch
          format: double
        createdByUserId:
          type: integer
          description: Id of the user that created the tag
          format: int32
        updatedByUserId:
          type: integer
          description: Id of the user that last updated the the tag
          format: int32
    CreateItamTagRequest:
      type: object
      properties:
        name:
          maxLength: 40
          minLength: 1
          type: string
        description:
          maxLength: 250
          minLength: 0
          type: string
    GetItamTagsResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ItamTagDTO'
    ItamTagDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        createTime:
          type: number
          format: double
        updateTime:
          type: number
          format: double
        createdByUserId:
          type: integer
          format: int32
        updatedByUserId:
          type: integer
          format: int32
        targetsCount:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserBasicInfo'
        updatedBy:
          $ref: '#/components/schemas/UserBasicInfo'
    UserBasicInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
    GetItamTagsPublicApiResponse:
      type: object
      properties:
        tags:
          type: array
          description: List of tag objects
          items:
            $ref: '#/components/schemas/ItamTagPublicApiDTO'
    MergeItamTagsPublicApiRequest:
      type: object
      properties:
        tagIds:
          uniqueItems: true
          type: array
          description: Array of tag ids to merge
          items:
            type: integer
            description: Array of tag ids to merge
            format: int32
        mergeMethod:
          type: string
          description: Method to use - merge into an existing tag or create a new
            one
          enum:
          - MERGE_INTO_EXISTING_TAG
          - MERGE_INTO_NEW_TAG
        mergeIntoTagId:
          type: integer
          description: "If merging into an existing tag, you must provide the target\
            \ tag id here"
          format: int32
          nullable: true
        name:
          maxLength: 40
          minLength: 0
          type: string
          description: "If creating a new tag, you must supply the new tag name here"
          nullable: true
        description:
          maxLength: 250
          minLength: 0
          type: string
          description: "If creating a new tag, you can supply the new tag description\
            \ here"
          nullable: true
    ItamSetAssetTagsRequestPublicApiDTO:
      type: object
      properties:
        tagIds:
          uniqueItems: true
          type: array
          description: "Array of tag IDS to assign to asset from URL. The tags on\
            \ the asset will be set to exactly these tags, removing existing tags\
            \ if necessary"
          items:
            type: integer
            description: "Array of tag IDS to assign to asset from URL. The tags on\
              \ the asset will be set to exactly these tags, removing existing tags\
              \ if necessary"
            format: int32
    UpdateItamTagRequest:
      type: object
      properties:
        name:
          maxLength: 40
          minLength: 0
          type: string
        description:
          maxLength: 250
          minLength: 0
          type: string
    AttachmentMetadata:
      type: object
      properties:
        name:
          type: string
        mimeType:
          type: string
        size:
          type: string
        extension:
          type: string
        contentId:
          type: string
        inline:
          type: boolean
      description: Attachment metadata
    KnowledgeBaseArticlePublicApiContent:
      type: object
      properties:
        html:
          type: string
          description: Article content html
        text:
          type: string
          description: Article content text
      description: Article content
    KnowledgeBaseArticlePublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        parentFolderId:
          type: integer
          description: Parent folder identifier
          format: int32
        name:
          type: string
          description: Article name
        isNinjaArticle:
          type: boolean
          description: Indicates if the article was created in ninja
        isArchived:
          type: boolean
          description: Indicates if the article is archived
        attachments:
          type: array
          description: Lists the files associated with the article
          items:
            $ref: '#/components/schemas/KnowledgeBaseAttachmentPublicApiDTO'
        content:
          $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiContent'
        createTime:
          type: number
          description: Article created time
          format: double
        updateTime:
          type: number
          description: Article last updated time
          format: double
        archivedTime:
          type: number
          description: Article archived time
          format: double
        path:
          type: string
          description: Article path
    KnowledgeBaseAttachmentPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        uploadStatus:
          type: string
          description: Upload status
          enum:
          - PROCESSING
          - SUCCESS
          - FAILURE
          - SUSPICIOUS
        metadata:
          $ref: '#/components/schemas/AttachmentMetadata'
      description: Lists the files associated with the article
    KnowledgeBaseArticleBulkCreatePublicApiRequest:
      type: object
      properties:
        name:
          type: string
          description: Article name
        organizationId:
          type: integer
          description: Organization Identifier
          format: int32
        destinationFolderId:
          type: integer
          description: Destination folder identifier
          format: int32
        destinationFolderPath:
          type: string
          description: "Folder path, each folder name separated by '|'"
          example: Folder 1|Folder 2|Folder 3|Folder 4
        content:
          $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiContent'
    KnowledgeBaseFolderItemPublicApiDTO:
      type: object
      properties:
        archived:
          type: boolean
        folder:
          type: boolean
        id:
          type: integer
          description: Identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        parentFolderId:
          type: integer
          description: Parent folder identifier
          format: int32
        isFolder:
          type: boolean
          description: Indicates if this item is a folder
        isArchived:
          type: boolean
          description: Indicates if this item is archived
        name:
          type: string
          description: Article name (In the case of uploaded articles this will be
            the file name)
        fileSize:
          type: string
          description: Article file size (Only for uploaded knowledge base articles)
        fileExtension:
          type: string
          description: Article file extension (For native kb articles the extension
            will be 'ninja')
        fileUploadStatus:
          type: string
          description: Article file upload status (Only for uploaded knowledge base
            articles)
          enum:
          - PROCESSING
          - SUCCESS
          - FAILURE
          - SUSPICIOUS
        createTime:
          type: number
          description: Item created time
          format: double
        updateTime:
          type: number
          description: Item last updated time
          format: double
      description: Folder content
    KnowledgeBaseFolderPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        parentFolderId:
          type: integer
          description: Parent folder identifier
          format: int32
        name:
          type: string
          description: Article name
        isArchived:
          type: boolean
          description: Indicates if the article is archived
        createTime:
          type: number
          description: Folder created time
          format: double
        updateTime:
          type: number
          description: Folder last updated time
          format: double
        archivedTime:
          type: number
          description: Folder archived time
          format: double
        content:
          type: array
          description: Folder content
          items:
            $ref: '#/components/schemas/KnowledgeBaseFolderItemPublicApiDTO'
    MovePublicApiRequest:
      type: object
      properties:
        folderIds:
          type: array
          description: Folders to move
          items:
            type: integer
            description: Folders to move
            format: int32
        documentIds:
          type: array
          description: Documents to move
          items:
            type: integer
            description: Documents to move
            format: int32
        destinationFolderId:
          type: integer
          description: Destination folder
          format: int32
        destinationOrganizationId:
          type: integer
          description: Destination client. Use when the root folder of the client
            does not exist.
          format: int32
    KnowledgeBaseArticleBulkUpdatePublicApiRequest:
      type: object
      properties:
        id:
          type: integer
          description: Article identifier
          format: int32
        name:
          type: string
          description: Article name
        content:
          $ref: '#/components/schemas/KnowledgeBaseArticlePublicApiContent'
    RelatedItemPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
          format: int32
        type:
          type: string
          description: Type of Relation
          enum:
          - VALUE
          - ENTITY
        entity:
          type: object
          description: Entity
        entityId:
          type: integer
          description: Entity Identifier
          format: int32
        entityType:
          type: string
          description: Entity Type
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - CHECKLIST
          - KB_DOCUMENT
          - END_USER
        relEntity:
          type: object
          description: Related Entity
        relEntityId:
          type: integer
          description: Related Entity Identifier
          format: int32
        relEntityType:
          type: string
          description: Related Entity Type
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - ATTACHMENT
          - TECHNICIAN
          - CREDENTIAL
          - CHECKLIST
          - END_USER
          - CONTACT
          - KB_DOCUMENT
          - SECURE
        value:
          type: object
          description: Related item value (Attachment meta data / Secure information)
        createTime:
          type: number
          description: Creation time
          format: double
        updateTime:
          type: number
          description: Last update time
          format: double
        createdByAppUserId:
          type: integer
          description: The identifier of the user who created the related item
          format: int32
        updatedByAppUserId:
          type: integer
          description: The identifier of the last user to update the related item
          format: int32
    NewRelatedItemEntityRequest:
      type: object
      properties:
        relEntityType:
          type: string
          description: Related Entity Type
          enum:
          - ORGANIZATION
          - DOCUMENT
          - LOCATION
          - NODE
          - ATTACHMENT
          - TECHNICIAN
          - CREDENTIAL
          - CHECKLIST
          - END_USER
          - CONTACT
          - KB_DOCUMENT
        relEntityId:
          type: integer
          description: Related Entity Identifier
          format: int32
    NewRelatedItemSecureValueRequest:
      type: object
      properties:
        name:
          type: string
          description: Name
        url:
          type: string
          description: URL
        notes:
          type: string
          description: Notes
        username:
          type: string
          description: Username
        password:
          type: string
          description: Password
        totpSecret:
          type: string
          description: TOTP Secret
    LockhartIntegrityCheckJobCreationResponse:
      type: object
      properties:
        result:
          type: string
          enum:
          - SUCCESS
          - FAILURE
          - UNSUPPORTED
          - UNCOMPLETED
        jobUid:
          type: string
          format: uuid
        deviceId:
          type: integer
          format: int32
        planGuid:
          type: string
          format: uuid
        planName:
          type: string
        planType:
          type: string
      description: Response of the Integrity Check Job creation.
    LockhartIntegrityCheckJobCreationRequest:
      type: object
      properties:
        deviceId:
          type: integer
          format: int32
        planUid:
          type: string
          format: uuid
      description: Request of the Integrity Check Job creation.
    CarbonCopy:
      type: object
      properties:
        uids:
          uniqueItems: true
          type: array
          description: List of user uids to be carbon-copied
          nullable: true
          example:
          - 1fa74a18-a329-40d8-b5b7-0a22624f7800
          - b0558cb6-3c4e-438c-b8fd-5247c648bbbe
          items:
            type: string
            description: List of user uids to be carbon-copied
            format: uuid
            nullable: true
        emails:
          uniqueItems: true
          type: array
          description: emails
          nullable: true
          example:
          - example1@example.com
          - example2@example.com
          items:
            type: string
            description: emails
            nullable: true
            example: "[\"example1@example.com\",\"example2@example.com\"]"
      nullable: true
    NewTicket:
      required:
      - clientId
      - status
      - subject
      - ticketFormId
      type: object
      properties:
        clientId:
          type: integer
          description: Client (Organization) identifier
          format: int32
          example: 1
        ticketFormId:
          type: integer
          description: Ticket form identifier
          format: int32
          example: 1
        locationId:
          type: integer
          description: Location identifier
          format: int32
          nullable: true
          example: 1
        nodeId:
          type: integer
          description: Device identifier
          format: int32
          nullable: true
          example: 1
        subject:
          maxLength: 200
          minLength: 0
          type: string
          example: CPU with problems
        description:
          $ref: '#/components/schemas/NewTicketLogEntry'
        status:
          type: string
          default: "1000"
        type:
          type: string
          description: Type of ticket
          nullable: true
          example: PROBLEM
          enum:
          - PROBLEM
          - QUESTION
          - INCIDENT
          - TASK
        cc:
          $ref: '#/components/schemas/CarbonCopy'
        assignedAppUserId:
          type: integer
          format: int32
          nullable: true
        requesterUid:
          type: string
          format: uuid
        severity:
          type: string
          nullable: true
          default: NONE
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          nullable: true
          default: NONE
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        parentTicketId:
          type: integer
          description: Ticket parent identifier
          format: int32
          nullable: true
          example: 1
        tags:
          type: array
          nullable: true
          example:
          - tag1
          - tag2
          items:
            type: string
            nullable: true
            example: "[\"tag1\",\"tag2\"]"
        attributes:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TicketingAttributeValue'
    NewTicketLogEntry:
      required:
      - public
      type: object
      properties:
        public:
          type: boolean
          default: true
        body:
          type: string
          nullable: true
          example: new comment
        htmlBody:
          type: string
          nullable: true
          example: <p>new comment</p>
        timeTracked:
          type: integer
          description: time in seconds
          format: int32
          nullable: true
          example: 60
        duplicateInIncidents:
          type: boolean
    TicketingAttributeValue:
      required:
      - attributeId
      - value
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
          example: 1
        attributeId:
          type: integer
          description: Attribute identifier
          format: int32
          example: 1
        value:
          type: string
          description: Attribute value
      nullable: true
    AttributeValueDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        attributeId:
          type: integer
          format: int32
        value:
          type: object
    CcList:
      type: object
      properties:
        uids:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        emails:
          uniqueItems: true
          type: array
          items:
            type: string
    TicketDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        version:
          type: integer
          format: int32
        nodeId:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int32
        locationId:
          type: integer
          format: int32
        assignedAppUserId:
          type: integer
          format: int32
        requesterUid:
          type: string
          format: uuid
        subject:
          type: string
        status:
          $ref: '#/components/schemas/TicketStatusPublicApiDTO'
        type:
          type: string
          enum:
          - PROBLEM
          - QUESTION
          - INCIDENT
          - TASK
        priority:
          type: string
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        severity:
          type: string
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        ticketFormId:
          type: integer
          format: int32
        source:
          type: string
          enum:
          - TECHNICIAN
          - EMAIL
          - WEB_FORM
          - HELP_REQUEST
          - END_USER
          - CONDITION
          - SCHEDULED_SCRIPT
          - ACTIVITY
        tags:
          type: array
          items:
            type: string
        ccList:
          $ref: '#/components/schemas/CcList'
        createTime:
          type: number
          format: double
        deleted:
          type: boolean
        attributeValues:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueDTO'
    TicketStatusPublicApiDTO:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        parentId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
    AgreementDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    TechniciansTaggedMetadataDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
        displayName:
          type: string
        deleted:
          type: boolean
        permitted:
          type: boolean
    TicketLogEntryAutomationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        system:
          type: boolean
        type:
          type: string
    TicketLogEntryPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        appUserContactUid:
          type: string
          format: uuid
        appUserContactId:
          type: integer
          format: int32
        appUserContactType:
          type: string
          enum:
          - TECHNICIAN
          - END_USER
          - CONTACT
        type:
          type: string
          enum:
          - DESCRIPTION
          - COMMENT
          - CONDITION
          - SAVE
          - DELETE
          - PRODUCT
        body:
          type: string
        htmlBody:
          type: string
        fullEmailBody:
          type: string
        publicEntry:
          type: boolean
        system:
          type: boolean
        createTime:
          type: number
          format: double
        changeDiff:
          type: object
        activityId:
          type: integer
          format: int64
        timeTracked:
          type: integer
          format: int32
        technicianTagged:
          type: array
          items:
            type: integer
            format: int32
        techniciansTaggedMetadata:
          type: array
          items:
            $ref: '#/components/schemas/TechniciansTaggedMetadataDTO'
        automation:
          $ref: '#/components/schemas/TicketLogEntryAutomationDTO'
        blockedByInvoice:
          type: boolean
        ticketTimeEntry:
          $ref: '#/components/schemas/TicketTimeEntryDTO'
        emailResponse:
          type: boolean
    TicketTimeEntryDTO:
      type: object
      properties:
        ticketLogEntryId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
        startDate:
          type: integer
          format: int64
        remote:
          type: boolean
        billing:
          type: string
          enum:
          - BILLABLE
          - NOT_BILLABLE
          - NO_CHARGE
        billingStatus:
          type: string
          enum:
          - BILLED
          - PENDING
          - NOT_BILLABLE
        agreementOriginType:
          type: string
          enum:
          - NONE
          - SELF
          - TICKET
        price:
          type: number
        timeTracked:
          type: integer
          format: int32
        agreement:
          $ref: '#/components/schemas/AgreementDTO'
    UpdateTicket:
      required:
      - clientId
      - requesterUid
      - status
      - subject
      - ticketFormId
      - version
      type: object
      properties:
        version:
          type: integer
          description: ticket version
          format: int32
          example: 1
        clientId:
          type: integer
          description: Client (Organization) identifier
          format: int32
          example: 1
        ticketFormId:
          type: integer
          description: Ticket form identifier
          format: int32
          example: 1
        locationId:
          type: integer
          description: Location identifier
          format: int32
          nullable: true
          example: 1
        nodeId:
          type: integer
          description: Device identifier
          format: int32
          nullable: true
          example: 1
        subject:
          maxLength: 200
          minLength: 0
          type: string
          example: CPU with problems
        status:
          type: string
          default: "1000"
        type:
          type: string
          description: Type of ticket
          nullable: true
          example: PROBLEM
          enum:
          - PROBLEM
          - QUESTION
          - INCIDENT
          - TASK
        cc:
          $ref: '#/components/schemas/CarbonCopy'
        assignedAppUserId:
          type: integer
          format: int32
          nullable: true
        requesterUid:
          type: string
          format: uuid
        severity:
          type: string
          nullable: true
          default: NONE
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          nullable: true
          default: NONE
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        parentTicketId:
          type: integer
          description: Ticket parent identifier
          format: int32
          nullable: true
          example: 1
        tags:
          type: array
          nullable: true
          example:
          - tag1
          - tag2
          items:
            type: string
            nullable: true
            example: "[\"tag1\",\"tag2\"]"
        attributes:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TicketingAttributeValue'
    PublicScanGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        groupName:
          type: string
        fileName:
          type: string
        status:
          type: string
          enum:
          - COMPLETE
          - IN_PROGRESS
          - FAILED
        vendor:
          type: string
        thirdPartyApiTile:
          type: string
        deviceIdHeader:
          type: string
        deviceInternalMapping:
          type: string
        cveIdHeader:
          type: string
        lastFileUploadDate:
          type: string
        recordsProcessed:
          type: integer
          format: int32
    WindowsServiceControlRequest:
      type: object
      properties:
        action:
          type: string
          description: Action
          enum:
          - START
          - PAUSE
          - STOP
          - RESTART
    AgentDevice:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          os:
            $ref: '#/components/schemas/OperatingSystem'
          system:
            $ref: '#/components/schemas/ComputerSystem'
          memory:
            $ref: '#/components/schemas/Memory'
          processors:
            type: array
            description: Processors
            items:
              $ref: '#/components/schemas/Processor'
          volumes:
            type: array
            description: Disk Volumes
            items:
              $ref: '#/components/schemas/Volume'
          lastLoggedInUser:
            type: string
            description: Username that logged in most recently
    BackupUsage:
      type: object
      properties:
        revisionsCurrentSize:
          type: integer
          description: Revisions current size
          format: int64
        revisionsPreviousSize:
          type: integer
          description: Revisions previous size
          format: int64
        revisionsDeletedSize:
          type: integer
          description: Revisions deleted size
          format: int64
        localFileFolderSize:
          type: integer
          description: Revisions local file folder size
          format: int64
        localImageSize:
          type: integer
          description: Revisions local image size
          format: int64
        localImageV2Size:
          type: integer
          description: Revisions local image v2 size
          format: int64
        cloudFileFolderSize:
          type: integer
          description: Revisions cloud file folder size
          format: int64
        cloudImageSize:
          type: integer
          description: Revisions cloud image size
          format: int64
        cloudImageV2Size:
          type: integer
          description: Revisions cloud image v2 size
          format: int64
        lastSuccessfulBackupJob:
          type: number
          description: Last successful job. This is provided when the 'includeLastBackupJobTimes'
            query parameter is set to 'true'
          format: double
        lastFailedBackupJob:
          type: number
          description: Last failed job. This is provided when the 'includeLastBackupJobTimes'
            query parameter is set to 'true'
          format: double
        revisionsTotalSize:
          type: integer
          description: Revisions total size
          format: int64
          readOnly: true
        cloudTotalSize:
          type: integer
          description: Revisions cloud total size
          format: int64
          readOnly: true
        localTotalSize:
          type: integer
          description: Revisions local total size
          format: int64
          readOnly: true
      description: Device Backup Usage
    CloudMonitorDNS:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          enabled:
            type: boolean
            description: Is enabled?
          interval:
            type: integer
            description: Monitoring interval (seconds)
            format: int32
          timeout:
            type: integer
            description: Timeout (seconds)
            format: int32
          target:
            type: string
            description: "Monitoring target (hostname, IP address or URL)"
    CloudMonitorEmailServer:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          enabled:
            type: boolean
            description: Is enabled?
          interval:
            type: integer
            description: Monitoring interval (seconds)
            format: int32
          timeout:
            type: integer
            description: Timeout (seconds)
            format: int32
          target:
            type: string
            description: SMTP Host (hostname or IP address)
          smtpPort:
            type: integer
            description: SMTP Port
            format: int32
          senderEmail:
            type: string
            description: Sender's email (FROM)
          recipientEmail:
            type: string
            description: Recipient's email (TO)
    CloudMonitorHTTP:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          enabled:
            type: boolean
            description: Is enabled?
          interval:
            type: integer
            description: Monitoring interval (seconds)
            format: int32
          timeout:
            type: integer
            description: Timeout (seconds)
            format: int32
          target:
            type: string
            description: "Monitoring target (hostname, IP address or URL)"
    CloudMonitorPing:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          enabled:
            type: boolean
            description: Is enabled?
          interval:
            type: integer
            description: Monitoring interval (seconds)
            format: int32
          timeout:
            type: integer
            description: Timeout (seconds)
            format: int32
          target:
            type: string
            description: "Monitoring target (hostname, IP address or URL)"
    CloudMonitorPortScan:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          enabled:
            type: boolean
            description: Is enabled?
          interval:
            type: integer
            description: Monitoring interval (seconds)
            format: int32
          timeout:
            type: integer
            description: Timeout (seconds)
            format: int32
          target:
            type: string
            description: "Monitoring target (hostname, IP address or URL)"
    ComputerSystem:
      type: object
      properties:
        name:
          type: string
          description: Name
        manufacturer:
          type: string
          description: Manufacturer
        model:
          type: string
          description: Model
        biosSerialNumber:
          type: string
          description: Bios Serial Number
        serialNumber:
          type: string
          description: Serial Number
        domain:
          type: string
        domainRole:
          type: string
        numberOfProcessors:
          type: integer
          format: int32
        totalPhysicalMemory:
          type: integer
          format: int64
        virtualMachine:
          type: boolean
        chassisType:
          type: string
      description: Computer System (Chassis)
    Device:
      type: object
      properties:
        id:
          type: integer
          description: Node (Device) identifier
          format: int32
        parentDeviceId:
          type: integer
          description: Parent Node identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        locationId:
          type: integer
          description: Location identifier
          format: int32
        nodeClass:
          type: string
          description: Node Class
          enum:
          - WINDOWS_SERVER
          - WINDOWS_WORKSTATION
          - LINUX_WORKSTATION
          - MAC
          - ANDROID
          - APPLE_IOS
          - APPLE_IPADOS
          - VMWARE_VM_HOST
          - VMWARE_VM_GUEST
          - HYPERV_VMM_HOST
          - HYPERV_VMM_GUEST
          - LINUX_SERVER
          - MAC_SERVER
          - CLOUD_MONITOR_TARGET
          - NMS_SWITCH
          - NMS_ROUTER
          - NMS_FIREWALL
          - NMS_PRIVATE_NETWORK_GATEWAY
          - NMS_PRINTER
          - NMS_SCANNER
          - NMS_DIAL_MANAGER
          - NMS_WAP
          - NMS_IPSLA
          - NMS_COMPUTER
          - NMS_VM_HOST
          - NMS_APPLIANCE
          - NMS_OTHER
          - NMS_SERVER
          - NMS_PHONE
          - NMS_VIRTUAL_MACHINE
          - NMS_NETWORK_MANAGEMENT_AGENT
        nodeRoleId:
          type: integer
          description: Node Role identifier
          format: int32
        rolePolicyId:
          type: integer
          description: Node Role policy ID based on organization and location Policy
            Mapping
          format: int32
        policyId:
          type: integer
          description: Assigned policy ID (overrides organization and location policy
            mapping)
          format: int32
        approvalStatus:
          type: string
          description: Approval Status
          enum:
          - PENDING
          - APPROVED
        offline:
          type: boolean
          description: Is Offline?
        displayName:
          type: string
          description: Display Name
        systemName:
          type: string
          description: System Name
        dnsName:
          type: string
          description: DNS Name
        netbiosName:
          type: string
          description: NETBIOS Name
        created:
          type: number
          description: Created
          format: double
        lastContact:
          type: number
          description: Last Contact
          format: double
        lastUpdate:
          type: number
          description: Last data submission timestamp
          format: double
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        maintenance:
          $ref: '#/components/schemas/Maintenance'
        references:
          $ref: '#/components/schemas/NodeReferences'
        ipAddresses:
          type: array
          description: Device IP addresses
          items:
            type: string
            description: Device IP addresses
        macAddresses:
          type: array
          description: Device MAC addresses
          items:
            type: string
            description: Device MAC addresses
        publicIP:
          type: string
          description: Device Public IP Address
        notes:
          type: array
          description: Device Notes
          items:
            $ref: '#/components/schemas/Note'
        deviceType:
          type: string
      discriminator:
        propertyName: deviceType
    Maintenance:
      type: object
      properties:
        status:
          type: string
          description: Maintenance mode status
          enum:
          - PENDING
          - IN_MAINTENANCE
          - FAILED
        start:
          type: number
          description: Maintenance mode start time
          format: double
        end:
          type: number
          description: Maintenance mode end time
          format: double
      description: Maintenance mode status
    MdmDevice:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
    Memory:
      type: object
      properties:
        capacity:
          type: integer
          description: Capacity
          format: int64
      description: Memory information
    NMSServer:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
    NMSTarget:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
    NodeReferences:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
        location:
          $ref: '#/components/schemas/Location'
        rolePolicy:
          $ref: '#/components/schemas/Policy'
        policy:
          $ref: '#/components/schemas/Policy'
        role:
          $ref: '#/components/schemas/NodeRole'
        backupUsage:
          $ref: '#/components/schemas/BackupUsage'
        warranty:
          $ref: '#/components/schemas/WarrantyDates'
      description: Expanded entity references
    NodeRole:
      type: object
      properties:
        id:
          type: integer
          description: Device Role identifier
          format: int32
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
        nodeClass:
          type: string
          description: Node Class
          enum:
          - WINDOWS_SERVER
          - WINDOWS_WORKSTATION
          - LINUX_WORKSTATION
          - MAC
          - ANDROID
          - APPLE_IOS
          - APPLE_IPADOS
          - VMWARE_VM_HOST
          - VMWARE_VM_GUEST
          - HYPERV_VMM_HOST
          - HYPERV_VMM_GUEST
          - LINUX_SERVER
          - MAC_SERVER
          - CLOUD_MONITOR_TARGET
          - NMS_SWITCH
          - NMS_ROUTER
          - NMS_FIREWALL
          - NMS_PRIVATE_NETWORK_GATEWAY
          - NMS_PRINTER
          - NMS_SCANNER
          - NMS_DIAL_MANAGER
          - NMS_WAP
          - NMS_IPSLA
          - NMS_COMPUTER
          - NMS_VM_HOST
          - NMS_APPLIANCE
          - NMS_OTHER
          - NMS_SERVER
          - NMS_PHONE
          - NMS_VIRTUAL_MACHINE
          - NMS_NETWORK_MANAGEMENT_AGENT
        custom:
          type: boolean
          description: Is custom node role?
        chassisType:
          type: string
          description: Chassis Type
          enum:
          - UNKNOWN
          - DESKTOP
          - LAPTOP
          - MOBILE
        created:
          type: number
          description: Date created
          format: double
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
      description: Device Role
    Note:
      type: object
      properties:
        text:
          type: string
          description: Note text
      description: Device Notes
    OperatingSystem:
      type: object
      properties:
        manufacturer:
          type: string
          description: Manufacturer
        name:
          type: string
          description: Name
        architecture:
          type: string
          description: Architecture
        lastBootTime:
          type: number
          description: Last boot time
          format: double
        buildNumber:
          type: string
          description: Build number
        releaseId:
          type: string
          description: Release ID
        servicePackMajorVersion:
          type: integer
          description: Service Pack Major Version
          format: int32
        servicePackMinorVersion:
          type: integer
          description: Service Pack Minor Version
          format: int32
        locale:
          type: string
          description: Locale
        language:
          type: string
          description: Language
        needsReboot:
          type: boolean
          description: Operating system has pending reboot requests
      description: Operating System
    Organization:
      type: object
      properties:
        name:
          type: string
          description: Organization full name
        description:
          type: string
          description: Organization Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        nodeApprovalMode:
          type: string
          description: Device Approval Mode
          enum:
          - AUTOMATIC
          - MANUAL
          - REJECT
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        id:
          type: integer
          description: Organization identifier
          format: int32
      description: Organization
    Policy:
      type: object
      properties:
        id:
          type: integer
          description: Policy identifier
          format: int32
        parentPolicyId:
          type: integer
          description: Parent Policy identifier
          format: int32
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
        nodeClass:
          type: string
          description: Node Class
          enum:
          - WINDOWS_SERVER
          - WINDOWS_WORKSTATION
          - LINUX_WORKSTATION
          - MAC
          - ANDROID
          - APPLE_IOS
          - APPLE_IPADOS
          - VMWARE_VM_HOST
          - VMWARE_VM_GUEST
          - HYPERV_VMM_HOST
          - HYPERV_VMM_GUEST
          - LINUX_SERVER
          - MAC_SERVER
          - CLOUD_MONITOR_TARGET
          - NMS_SWITCH
          - NMS_ROUTER
          - NMS_FIREWALL
          - NMS_PRIVATE_NETWORK_GATEWAY
          - NMS_PRINTER
          - NMS_SCANNER
          - NMS_DIAL_MANAGER
          - NMS_WAP
          - NMS_IPSLA
          - NMS_COMPUTER
          - NMS_VM_HOST
          - NMS_APPLIANCE
          - NMS_OTHER
          - NMS_SERVER
          - NMS_PHONE
          - NMS_VIRTUAL_MACHINE
          - NMS_NETWORK_MANAGEMENT_AGENT
        updated:
          type: number
          description: Last update timestamp
          format: double
        nodeClassDefault:
          type: boolean
          description: Is Default Policy for Node Class
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
      description: Assigned policy (overrides organization and location policy mapping)
    Processor:
      type: object
      properties:
        architecture:
          type: string
          description: Architecture
        maxClockSpeed:
          type: integer
          description: Max Clock Speed
          format: int64
        clockSpeed:
          type: integer
          description: Current Clock Speed
          format: int64
        name:
          type: string
          description: Name
        numCores:
          type: integer
          description: Number of Cores
          format: int32
        numLogicalCores:
          type: integer
          description: "Number of Logical Cores]"
          format: int32
      description: Processors
    VMGuest:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          files:
            type: string
            description: Guest VM Files
          fullName:
            type: string
            description: Full Name
          lastBootTime:
            type: number
            description: Last VM Boot Time
            format: double
          memorySize:
            type: integer
            description: VM Memory size (bytes)
            format: int64
          coresPerSocket:
            type: integer
            description: Number of Cores per Socket
            format: int32
          cpuCores:
            type: integer
            description: Total Number of CPU Cores
            format: int32
          powerState:
            type: string
            description: Current power state
          toolsInstallType:
            type: string
            description: Guest tools installation type
          toolStatus:
            type: string
            description: Guest tools status
          toolsVersion:
            type: string
            description: Guest tools version
          guestOSFullName:
            type: string
            description: Guest OS full name
          guestOSFamily:
            type: string
            description: Guest OS family
          guestOSId:
            type: string
            description: Guest OS identifier
          toolsVersionStatus:
            type: string
            description: Guest tools version status
          snapshotCount:
            type: integer
            description: Number of snapshots
            format: int32
          snapshotTotalSize:
            type: integer
            description: Total snapshot size (bytes)
            format: int64
    VMHost:
      type: object
      allOf:
      - $ref: '#/components/schemas/Device'
      - type: object
        properties:
          cpuMhz:
            type: integer
            description: CPU Frequency
            format: int64
          cpuModel:
            type: string
            description: CPU Model
          htActive:
            type: boolean
            description: Is Hyper-Threading active?
          htAvailable:
            type: boolean
            description: Is Hyper-Threading available?
          lastBootTime:
            type: number
            description: Last toot time
            format: double
          memorySize:
            type: integer
            description: Total memory size (bytes)
            format: int64
          model:
            type: string
            description: Model
          name:
            type: string
            description: Name
          cpuCores:
            type: integer
            description: Number of CPU Cores
            format: int32
          cpuPackages:
            type: integer
            description: Number of CPUs
            format: int32
          cpuThreads:
            type: integer
            description: Total number of logical CPU cores
            format: int32
          serviceTag:
            type: string
            description: Service Tag
          vendor:
            type: string
            description: Vendor
          releaseName:
            type: string
            description: Release Name
          version:
            type: string
            description: Version
          buildNumber:
            type: string
            description: Build number
    Volume:
      type: object
      properties:
        name:
          type: string
          description: Name
        driveLetter:
          type: string
          description: Drive Letter
        label:
          type: string
          description: Volume Label
        deviceType:
          type: string
          description: Device Type
        fileSystem:
          type: string
          description: File System Type
        autoMount:
          type: boolean
          description: Automatically Mounted
        compressed:
          type: boolean
          description: Compressed
        capacity:
          type: integer
          description: Capacity (bytes)
          format: int64
        freeSpace:
          type: integer
          description: Free Space (bytes)
          format: int64
        serialNumber:
          type: string
          description: Serial Number
        bitLockerStatus:
          $ref: '#/components/schemas/VolumeBitLockerStatus'
      description: Disk Volumes
    VolumeBitLockerStatus:
      type: object
      properties:
        conversionStatus:
          type: string
          description: Volume encryption or decryption status.
          enum:
          - FULLY_DECRYPTED
          - FULLY_ENCRYPTED
          - ENCRYPTION_IN_PROGRESS
          - DECRYPTION_IN_PROGRESS
          - ENCRYPTION_PAUSED
          - DECRYPTION_PAUSED
          - UNKNOWN
        encryptionMethod:
          type: string
          description: Indicated the encryption algorithm and key size used on the
            volume
          enum:
          - NONE
          - AES_128_WITH_DIFFUSER
          - AES_256_WITH_DIFFUSER
          - AES_128
          - AES_256
          - HARDWARE_ENCRYPTION
          - XTS_AES_128
          - XTS_AES_256
          - UNKNOWN
        protectionStatus:
          type: string
          description: ' indicates whether the volume and its encryption key (if any)
            are secured.'
          enum:
          - UNPROTECTED
          - PROTECTED
          - UNKNOWN
          - PENDING
        lockStatus:
          type: string
          description: Indicates whether the contents of the volume are accessible
            from Windows
          enum:
          - UNKNOWN
          - UNLOCKED
          - LOCKED
        initializedForProtection:
          type: boolean
          description: Is initialized for protection
      description: BitLocker Status
    WarrantyDates:
      type: object
      properties:
        startDate:
          type: number
          description: Warranty Start Date (Seconds)
          format: double
        endDate:
          type: number
          description: Warranty End Date (Seconds)
          format: double
        manufacturerFulfillmentDate:
          type: number
          description: Manufacturer Fulfillment Date
          format: double
      description: Warranty Info
    Job:
      type: object
      properties:
        uid:
          type: string
          description: Task/Job UID (activity series UID)
          format: uuid
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        message:
          type: string
          description: Job message
        createTime:
          type: number
          description: Job start timestamp
          format: double
        updateTime:
          type: number
          description: Job last updated
          format: double
        sourceType:
          type: string
          description: Job origin
          enum:
          - AGENT_OFFLINE
          - CONDITION_AGENT_CPU
          - CONDITION_AGENT_MEMORY
          - CONDITION_AGENT_NETWORK
          - CONDITION_AGENT_DISK_IO
          - CONDITION_AGENT_DISK_FREE_SPACE
          - CONDITION_AGENT_DISK_USAGE
          - CONDITION_AGENT_CVSS_SCORE
          - CONDITION_AGENT_PATCH_LAST_INSTALLED
          - CONDITION_NMS_CPU
          - CONDITION_NMS_MEMORY
          - CONDITION_NMS_NETWORK_TRAFFIC_BITS
          - CONDITION_NMS_NETWORK_TRAFFIC_PERCENT
          - CONDITION_NMS_NETWORK_STATUS
          - CONDITION_NMS_NETWORK_STATUS_CHANGE
          - CONDITION_NMS_SYSTEM_UPTIME
          - CONDITION_PING
          - CONDITION_PING_LATENCY
          - CONDITION_PING_PACKET_LOSS
          - CONDITION_PING_RESPONSE
          - CONDITION_SYSTEM_UPTIME
          - CONDITION_SMART_STATUS_DEGRATED
          - CONDITION_RAID_HEALTH_STATUS
          - CONDITION_SCRIPT_RESULT
          - CONDITION_HTTP
          - CONDITION_HTTP_RESPONSE
          - CONDITION_PORT
          - CONDITION_PORT_SCAN
          - CONDITION_SYSLOG
          - CONDITION_CONFIGURATION_FILE
          - CONDITION_SNMPTRAP
          - CONDITION_CRITICAL_EVENT
          - CONDITION_DNS
          - CONDITION_EMAIL
          - CONDITION_CUSTOM_SNMP
          - CONDITION_COMPOUND
          - SHADOWPROTECT_BACKUPJOB_CREATE
          - SHADOWPROTECT_BACKUPJOB_UPDATE
          - SHADOWPROTECT_BACKUPJOB_DELETE
          - SHADOWPROTECT_BACKUPJOB_EXECUTE
          - IMAGEMANAGER_MANAGEDFOLDER_CREATE
          - IMAGEMANAGER_MANAGEDFOLDER_UPDATE
          - IMAGEMANAGER_MANAGEDFOLDER_DELETE
          - IMAGEMANAGER_MANAGEDFOLDER_EXECUTE
          - TEAMVIEWER_CONNECTION
          - RETRIEVE_AGENT_LOGS
          - SCHEDULED_TASK
          - CONDITION_WINDOWS_EVENT_LOG_TRIGGERED
          - CONDITION_WINDOWS_SERVICE_STATE_CHANGED
          - UI_MESSAGE_ACTION_REBOOT
          - UI_MESSAGE_BD_INSTALLATION_ISSUES
          - GRAVITYZONE_UI_MESSAGE_INSTALLATION_ISSUES
          - AV_QUARANTINE_THREAT
          - AV_RESTORE_THREAT
          - AV_DELETE_THREAT
          - AV_REMOVE_THREAT
          - BITDEFENDER_RESTORE_THREAT
          - BITDEFENDER_DELETE_THREAT
          - CONDITION_BITLOCKER_STATUS
          - CONDITION_FILEVAULT_STATUS
          - CONDITION_LINUX_PROCESS
          - CONDITION_LINUX_Daemon
          - CONDITION_LINUX_PROCESS_RESOURCE
          - CONDITION_LINUX_PROCESS_RESOURCE_CPU
          - CONDITION_LINUX_PROCESS_RESOURCE_MEMORY
          - CONDITION_LINUX_DISK_FREE_SPACE
          - CONDITION_LINUX_DISK_USAGE
          - CONDITION_VM_AGGREGATE_CPU_USAGE
          - CONDITION_VM_DISK_USAGE
          - CONDITION_VM_HOST_DATASTORE
          - CONDITION_VM_HOST_UPTIME
          - CONDITION_VM_HOST_DEVICE_DOWN
          - CONDITION_VM_HOST_BAD_SENSORS
          - CONDITION_VM_HOST_SENSOR_HEALTH
          - CONDITION_VM_GUEST_GUEST_OPERATIONAL_MODE
          - CONDITION_VM_GUEST_SNAPSHOT_SIZE
          - CONDITION_VM_GUEST_SNAPSHOT_LIFESPAN
          - CONDITION_VM_GUEST_TOOLS_NOT_RUNNING
          - CONDITION_HV_GUEST_CHECKPOINT_SIZE
          - CONDITION_HV_GUEST_CHECKPOINT_LIFESPAN
          - CONDITION_SOFTWARE
          - CONDITION_WINDOWS_PROCESS_STATE
          - CONDITION_WINDOWS_PROCESS_RESOURCE_CPU
          - CONDITION_WINDOWS_PROCESS_RESOURCE_MEMORY
          - CONDITION_MAC_PROCESS_STATE
          - CONDITION_MAC_PROCESS_RESOURCE_CPU
          - CONDITION_MAC_PROCESS_RESOURCE_MEMORY
          - CONDITION_MAC_DEAMON
          - CONDITION_CUSTOM_FIELD
          - CONDITION_PENDING_REBOOT
        sourceConfigUid:
          type: string
          description: Source configuration/policy element reference
          format: uuid
        sourceName:
          type: string
          description: Source configuration/policy element name
        subject:
          type: string
          description: Job subject
        userId:
          type: integer
          description: User identifier
          format: int32
        psaTicketId:
          type: object
          description: Related PSA ticket ID
        ticketTemplateId:
          type: integer
          description: PSA ticket template
          format: int32
        data:
          type: object
          additionalProperties: true
          description: Job data
        device:
          $ref: '#/components/schemas/NodeWithDetailedReferences'
        jobStatus:
          type: string
          description: Job Status
          enum:
          - START_REQUESTED
          - STARTED
          - IN_PROCESS
          - COMPLETED
          - CANCEL_REQUESTED
          - CANCELLED
          - TRIGGERED
          - RESET
          - ACKNOWLEDGED
          - DISABLED
        jobResult:
          type: string
          description: Job result
          enum:
          - SUCCESS
          - FAILURE
          - UNSUPPORTED
          - UNCOMPLETED
        jobType:
          type: string
          description: Job Type
          enum:
          - ACTIONSET
          - ACTION
          - CONDITION
          - CONDITION_ACTIONSET
          - CONDITION_ACTION
          - ANTIVIRUS
          - PATCH_MANAGEMENT
          - TEAMVIEWER
          - MONITOR
          - SYSTEM
          - COMMENT
          - SHADOWPROTECT
          - IMAGEMANAGER
          - HELP_REQUEST
          - SOFTWARE_PATCH_MANAGEMENT
          - SPLASHTOP
          - CLOUDBERRY
          - CLOUDBERRY_BACKUP
          - SCHEDULED_TASK
          - RDP
          - SCRIPTING
          - SECURITY
          - REMOTE_TOOLS
          - VIRTUALIZATION
          - PSA
          - MDM
          - NINJA_REMOTE
          - NINJA_QUICK_CONNECT
          - NINJA_NETWORK_DISCOVERY
          - NINJA_BACKUP
          - NINJA_TICKETING
          - KNOWLEDGE_BASE
          - RELATED_ITEM
          - CLIENT_CHECKLIST
          - CHECKLIST_TEMPLATE
          - DOCUMENTATION
    NodeWithDetailedReferences:
      type: object
      properties:
        id:
          type: integer
          description: Node (Device) identifier
          format: int32
        parentDeviceId:
          type: integer
          description: Parent Node identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        locationId:
          type: integer
          description: Location identifier
          format: int32
        nodeClass:
          type: string
          description: Node Class
          enum:
          - WINDOWS_SERVER
          - WINDOWS_WORKSTATION
          - LINUX_WORKSTATION
          - MAC
          - ANDROID
          - APPLE_IOS
          - APPLE_IPADOS
          - VMWARE_VM_HOST
          - VMWARE_VM_GUEST
          - HYPERV_VMM_HOST
          - HYPERV_VMM_GUEST
          - LINUX_SERVER
          - MAC_SERVER
          - CLOUD_MONITOR_TARGET
          - NMS_SWITCH
          - NMS_ROUTER
          - NMS_FIREWALL
          - NMS_PRIVATE_NETWORK_GATEWAY
          - NMS_PRINTER
          - NMS_SCANNER
          - NMS_DIAL_MANAGER
          - NMS_WAP
          - NMS_IPSLA
          - NMS_COMPUTER
          - NMS_VM_HOST
          - NMS_APPLIANCE
          - NMS_OTHER
          - NMS_SERVER
          - NMS_PHONE
          - NMS_VIRTUAL_MACHINE
          - NMS_NETWORK_MANAGEMENT_AGENT
        nodeRoleId:
          type: integer
          description: Node Role identifier
          format: int32
        rolePolicyId:
          type: integer
          description: Node Role policy ID based on organization and location Policy
            Mapping
          format: int32
        policyId:
          type: integer
          description: Assigned policy ID (overrides organization and location policy
            mapping)
          format: int32
        approvalStatus:
          type: string
          description: Approval Status
          enum:
          - PENDING
          - APPROVED
        offline:
          type: boolean
          description: Is Offline?
        displayName:
          type: string
          description: Display Name
        systemName:
          type: string
          description: System Name
        dnsName:
          type: string
          description: DNS Name
        netbiosName:
          type: string
          description: NETBIOS Name
        created:
          type: number
          description: Created
          format: double
        lastContact:
          type: number
          description: Last Contact
          format: double
        lastUpdate:
          type: number
          description: Last data submission timestamp
          format: double
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        maintenance:
          $ref: '#/components/schemas/Maintenance'
        references:
          $ref: '#/components/schemas/NodeReferences'
      description: Device information.
    Activity:
      type: object
      properties:
        id:
          type: integer
          description: Activity identifier
          format: int64
        activityTime:
          type: number
          description: Activity timestamp
          format: double
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        severity:
          type: string
          description: Severity
          enum:
          - NONE
          - MINOR
          - MODERATE
          - MAJOR
          - CRITICAL
        priority:
          type: string
          description: Priority
          enum:
          - NONE
          - LOW
          - MEDIUM
          - HIGH
        seriesUid:
          type: string
          description: Activity series UID (job/condition UID)
          format: uuid
        activityType:
          type: string
          description: Activity type code
          enum:
          - ACTIONSET
          - ACTION
          - CONDITION
          - CONDITION_ACTIONSET
          - CONDITION_ACTION
          - ANTIVIRUS
          - PATCH_MANAGEMENT
          - TEAMVIEWER
          - MONITOR
          - SYSTEM
          - COMMENT
          - SHADOWPROTECT
          - IMAGEMANAGER
          - HELP_REQUEST
          - SOFTWARE_PATCH_MANAGEMENT
          - SPLASHTOP
          - CLOUDBERRY
          - CLOUDBERRY_BACKUP
          - SCHEDULED_TASK
          - RDP
          - SCRIPTING
          - SECURITY
          - REMOTE_TOOLS
          - VIRTUALIZATION
          - PSA
          - MDM
          - NINJA_REMOTE
          - NINJA_QUICK_CONNECT
          - NINJA_NETWORK_DISCOVERY
          - NINJA_BACKUP
          - NINJA_TICKETING
          - KNOWLEDGE_BASE
          - RELATED_ITEM
          - CLIENT_CHECKLIST
          - CHECKLIST_TEMPLATE
          - DOCUMENTATION
        statusCode:
          type: string
          description: Activity status code
          enum:
          - START_REQUESTED
          - STARTED
          - IN_PROCESS
          - COMPLETED
          - CANCEL_REQUESTED
          - CANCELLED
          - BLOCKED
          - TRIGGERED
          - RESET
          - ACKNOWLEDGED
          - DISABLED
          - EVALUATION_FAILURE
          - CLIENT_CREATED
          - CLIENT_UPDATED
          - CLIENT_DELETED
          - CREDENTIAL_CREATED
          - CREDENTIAL_UPDATED
          - CREDENTIAL_DELETED
          - LOCATION_CREATED
          - LOCATION_UPDATED
          - LOCATION_DELETED
          - POLICY_CREATED
          - POLICY_UPDATED
          - POLICY_DELETED
          - NODE_CREATED
          - NODE_UPDATED
          - NODE_DELETED
          - NODE_RE_ENROLLED
          - NODE_ACCESS_GRANTED
          - NODE_ACCESS_DENIED
          - NODE_REGISTRATION_REJECTED
          - NODE_IDENTIFICATION_UPDATED
          - NODE_CLONING_DETECTED
          - NODE_CLONE_ADVISED_TO_REGISTER
          - NODE_MANUALLY_APPROVED
          - NODE_AUTOMATICALLY_APPROVED
          - NODE_MANUALLY_REJECTED
          - NODE_AUTOMATICALLY_REJECTED
          - REJECTED_NODE_CLEARED
          - REJECTED_NODE_DELETED
          - MOBILE_DEVICE_UNREGISTERED
          - APP_USER_CREATED
          - APP_USER_UPDATED
          - APP_USER_DELETED
          - APP_USER_LOGGED_IN
          - APP_USER_LOGGED_OUT
          - APP_USER_MFA_SETUP
          - APP_USER_MFA_DELETED
          - APP_USER_CRITICAL_ACTION
          - APP_USER_AUDIT_FAILED_LOGIN
          - END_USER_CREATED
          - END_USER_UPDATED
          - END_USER_DELETED
          - END_USER_LOGGED_IN
          - END_USER_LOGGED_OUT
          - END_USER_MFA_SETUP
          - END_USER_MFA_DELETED
          - END_USER_AUDIT_FAILED_LOGIN
          - END_USER_CRITICAL_ACTION
          - CONTACT_CREATED
          - CONTACT_UPDATED
          - CONTACT_DELETED
          - DEVICE_GROUP_CREATED
          - DEVICE_GROUP_UPDATED
          - DEVICE_GROUP_DELETED
          - TICKET_TEMPLATE_CREATED
          - TICKET_TEMPLATE_UPDATED
          - TICKET_TEMPLATE_DELETED
          - CUSTOM_HEALTH_STATUS_CHANGED
          - CUSTOM_HEALTH_STATUS_RESET
          - PSA_TICKET_CREATION_FAILED
          - PSA_TICKET_CREATION_SUCCEEDED
          - RESET_BY_PSA_TICKET_CALLBACK
          - PSA_TICKET_CREATION_TEST
          - PSA_ENABLED
          - PSA_DISABLED
          - PSA_CREDENTIALS_FAILED
          - CONNECTWISE_AGREEMENTS_SYNC_COMPLETED
          - CONNECTWISE_AGREEMENTS_SYNC_STARTED
          - CONNECTWISE_NODE_SYNC_COMPLETED
          - CONNECTWISE_NODE_SYNC_STARTED
          - CONNECTWISE_NODE_SYNC_NODE_CREATED
          - CONNECTWISE_NODE_SYNC_NODE_UPDATED
          - CONNECTWISE_NODE_SYNC_NODE_DELETED
          - CONNECTWISE_UPDATED
          - CONNECTWISECONTROL_ATTEMPT
          - AUTOTASK_NODE_SYNC_STARTED
          - AUTOTASK_NODE_SYNC_COMPLETED
          - AUTOTASK_NODE_SYNC_NODE_CREATED
          - AUTOTASK_NODE_SYNC_NODE_UPDATED
          - AUTOTASK_NODE_SYNC_NODE_DELETED
          - AUTOTASK_UPDATED
          - AUTOTASK_ATTACHMENT_FAILURE
          - PSA_TICKET_UPDATED_FAILED
          - PSA_TICKET_UPDATED_SUCCEEDED
          - REPORT_CREATED
          - REPORT_UPDATED
          - REPORT_DELETED
          - TIME_ZONE_UPDATED
          - LANGUAGE_TAG_UPDATED
          - NODE_ROLE_CREATED
          - NODE_ROLE_UPDATED
          - NODE_ROLE_DELETED
          - COMMENT
          - VIPREAV_INSTALLED
          - VIPREAV_INSTALL_FAILED
          - VIPREAV_UNINSTALLED
          - VIPREAV_UNINSTALL_FAILED
          - VIPREAV_SCAN_THREAT_QUARANTINED
          - VIPREAV_ACTIVEPROTECTION_THREAT_QUARANTINED
          - VIPREAV_USERINITIATED_THREAT_QUARANTINED
          - VIPREAV_QUARANTINED_THREAT_REMOVED
          - VIPREAV_REBOOT_REQUIRED
          - VIPREAV_SCAN_STARTED
          - VIPREAV_SCAN_COMPLETED
          - VIPREAV_SCAN_ABORTED
          - VIPREAV_SCAN_FAILED
          - VIPREAV_SCAN_PAUSED
          - VIPREAV_DISABLED
          - WEBROOT_COMMAND_SUBMITTED
          - WEBROOT_THREAT_DETECTED
          - WEBROOT_INSTALL_FAILED
          - BITDEFENDER_SCAN_STARTED
          - BITDEFENDER_SCAN_COMPLETED
          - BITDEFENDER_THREAT_DELETE_FROM_QUARANTINE
          - BITDEFENDER_THREAT_RESTORE_FROM_QUARANTINE
          - BITDEFENDER_SCAN_FAILED
          - BITDEFENDER_THREAT_DELETE_FROM_QUARANTINE_FAILED
          - BITDEFENDER_THREAT_RESTORE_FROM_QUARANTINE_FAILED
          - BITDEFENDER_DOWNLOAD_STARTED
          - BITDEFENDER_DOWNLOAD_SUCCEEDED
          - BITDEFENDER_DOWNLOAD_FAILED
          - BITDEFENDER_INSTALLATION_STARTED
          - BITDEFENDER_INSTALLATION_SUCCEEDED
          - BITDEFENDER_INSTALLATION_FAILED
          - BITDEFENDER_UNINSTALLATION_STARTED
          - BITDEFENDER_UNINSTALLATION_SUCCEEDED
          - BITDEFENDER_UNINSTALLATION_FAILED
          - BITDEFENDER_UNPACKING_FAILED
          - BDAS_BITDEFENDER_THREAT_IGNORED
          - BDAS_BITDEFENDER_THREAT_PRESENT
          - BDAS_BITDEFENDER_THREAT_DELETED
          - BDAS_BITDEFENDER_THREAT_BLOCKED
          - BDAS_BITDEFENDER_THREAT_QUARANTINED
          - BDAS_BITDEFENDER_THREAT_CLEANED
          - BDAS_BITDEFENDER_PURGE_QUARANTINE_FAILED
          - BDAS_BITDEFENDER_PURGE_QUARANTINE_SUCCESS
          - BDAS_BITDEFENDER_THREAT_QUARANTINE_RESTORED
          - BDAS_BITDEFENDER_THREAT_QUARANTINE_RESTORED_CUSTOMPATH
          - BDAS_BITDEFENDER_THREAT_QUARANTINE_DELETED
          - BITDEFENDER_RETRY_INSTALL_COMPLETED
          - BITDEFENDER_DISABLED
          - BITDEFENDER_EXISTING_PRODUCT_UNINSTALL
          - COMPETITOR_EXISTING_PRODUCT_UNINSTALL
          - SCHEDULE_INSTALL_OPTION_CHANGED
          - SECURITY_CREDENTIAL_ACCESS_GRANTED
          - SECURITY_CREDENTIAL_ACCESS_DENIED
          - PATCH_MANAGEMENT_SCAN_STARTED
          - PATCH_MANAGEMENT_SCAN_COMPLETED
          - PATCH_MANAGEMENT_APPLY_PATCH_STARTED
          - PATCH_MANAGEMENT_APPLY_PATCH_COMPLETED
          - PATCH_MANAGEMENT_INSTALLED
          - PATCH_MANAGEMENT_INSTALL_FAILED
          - PATCH_MANAGEMENT_MESSAGE
          - PATCH_MANAGEMENT_FAILURE
          - PATCH_MANAGEMENT_ROLLBACK_PATCH_REQUESTED
          - PATCH_MANAGEMENT_ROLLBACK_PATCH_STARTED
          - PATCH_MANAGEMENT_ROLLBACK_PATCH_COMPLETED
          - PATCH_MANAGEMENT_PATCH_APPROVED
          - PATCH_MANAGEMENT_PATCH_REJECTED
          - SOFTWARE_PATCH_MANAGEMENT_SCAN_STARTED
          - SOFTWARE_PATCH_MANAGEMENT_SCAN_COMPLETED
          - SOFTWARE_PATCH_MANAGEMENT_APPLY_PATCH_STARTED
          - SOFTWARE_PATCH_MANAGEMENT_APPLY_PATCH_COMPLETED
          - SOFTWARE_PATCH_MANAGEMENT_INSTALLED
          - SOFTWARE_PATCH_MANAGEMENT_INSTALL_FAILED
          - SOFTWARE_PATCH_MANAGEMENT_MESSAGE
          - SOFTWARE_PATCH_MANAGEMENT_PATCH_APPROVED
          - SOFTWARE_PATCH_MANAGEMENT_PATCH_REJECTED
          - TEAMVIEWER_INSTALLED
          - TEAMVIEWER_INSTALL_FAILED
          - TEAMVIEWER_UNINSTALLED
          - TEAMVIEWER_UNINSTALL_FAILED
          - TEAMVIEWER_CONNECTION_ESTABLISHED
          - TEAMVIEWER_CONNECTION_TERMINATED
          - TEAMVIEWER_PERMANENT_PASSWORD_CHANGED
          - TEAMVIEWER_ACCOUNTNAME_ADDED
          - TEAMVIEWER_ACCOUNTNAME_CHANGED
          - TEAMVIEWER_ACCOUNTNAME_REMOVED
          - TEAMVIEWER_CONNECTION_CANCELLED
          - TEAMVIEWER_CONFIG_CHANGED
          - SPLASHTOP_CONNECTION_INITIATED
          - SPLASHTOP_CONNECTION_ESTABLISHED
          - SPLASHTOP_CONNECTION_TERMINATED
          - REMOTE_TOOLS_UPLOAD_FILE_INITIATED
          - REMOTE_TOOLS_DOWNLOAD_FILE_INITIATED
          - REMOTE_TOOLS_COMPRESS_FILE_INITIATED
          - REMOTE_TOOLS_COMPRESS_FILE_SUCCESS
          - REMOTE_TOOLS_COMPRESS_FILE_FAILED
          - REMOTE_TOOLS_CREATE_DIRECTORY_INITIATED
          - REMOTE_TOOLS_RENAME_FILE_INITIATED
          - REMOTE_TOOLS_DELETE_FILE_INITIATED
          - REMOTE_TOOLS_MODIFY_OBJECT_SUCCESS
          - REMOTE_TOOLS_MODIFY_OBJECT_FAILED
          - REMOTE_TOOLS_COPY_OBJECT_SUCCESS
          - REMOTE_TOOLS_COPY_OBJECT_FAILED
          - REMOTE_TOOLS_MOVE_OBJECT_SUCCESS
          - REMOTE_TOOLS_MOVE_OBJECT_FAILED
          - REMOTE_TOOLS_DELETE_OBJECT_SUCCESS
          - REMOTE_TOOLS_DELETE_OBJECT_FAILED
          - REMOTE_TOOLS_CREATE_DIRECTORY_SUCCESS
          - REMOTE_TOOLS_CREATE_DIRECTORY_FAILED
          - REMOTE_TOOLS_FILE_TRANSFER_SUCCESS
          - REMOTE_TOOLS_FILE_TRANSFER_FAILED
          - REMOTE_TOOLS_SERVICE_CONTROL_INITIATED
          - REMOTE_TOOLS_START_SERVICE_SUCCESS
          - REMOTE_TOOLS_START_SERVICE_FAILED
          - REMOTE_TOOLS_STOP_SERVICE_SUCCESS
          - REMOTE_TOOLS_STOP_SERVICE_FAILED
          - REMOTE_TOOLS_RESTART_SERVICE_SUCCESS
          - REMOTE_TOOLS_RESTART_SERVICE_FAILED
          - REMOTE_TOOLS_START_TYPE_CHANGE_SUCCESS
          - REMOTE_TOOLS_START_TYPE_CHANGE_FAILED
          - REMOTE_TOOLS_PROCESS_CONTROL_INITIATED
          - REMOTE_TOOLS_SET_PROCESS_PRIORITY_SUCESS
          - REMOTE_TOOLS_SET_PROCESS_PRIORITY_FAILED
          - REMOTE_TOOLS_TERMINATE_PROCESS_SUCCESS
          - REMOTE_TOOLS_TERMINATE_PROCESS_FAILED
          - REMOTE_TOOLS_TERMINATE_PROCESS_TREE_SUCCESS
          - REMOTE_TOOLS_TERMINATE_PROCESS_TREE_FAILED
          - REMOTE_TOOLS_REGISTRY_CONTROL_INITIATED
          - REMOTE_TOOLS_CREATE_KEY_SUCCESS
          - REMOTE_TOOLS_CREATE_KEY_FAILED
          - REMOTE_TOOLS_RENAME_KEY_SUCCESS
          - REMOTE_TOOLS_RENAME_KEY_FAILED
          - REMOTE_TOOLS_DELETE_KEY_SUCCESS
          - REMOTE_TOOLS_DELETE_KEY_FAILED
          - REMOTE_TOOLS_CREATE_PARAMETER_SUCCESS
          - REMOTE_TOOLS_CREATE_PARAMETER_FAILED
          - REMOTE_TOOLS_RENAME_PARAMETER_SUCCESS
          - REMOTE_TOOLS_RENAME_PARAMETER_FAILED
          - REMOTE_TOOLS_DELETE_PARAMETER_SUCCESS
          - REMOTE_TOOLS_DELETE_PARAMETER_FAILED
          - REMOTE_TOOLS_MODIFY_PARAMETER_SUCCESS
          - REMOTE_TOOLS_MODIFY_PARAMETER_FAILED
          - REMOTE_TOOLS_ACTIVE_DIRECTORY_INITIATED
          - ADAPTER_ADDED
          - ADAPTER_REMOVED
          - ADAPTER_CONFIG_CHANGED
          - ADAPTER_STATUS_CHANGED
          - CPU_ADDED
          - CPU_REMOVED
          - MEMORY_ADDED
          - MEMORY_REMOVED
          - DISK_DRIVE_ADDED
          - DISK_DRIVE_REMOVED
          - USER_LOGGED_IN
          - USER_LOGGED_OUT
          - PORT_OPENED
          - PORT_CLOSED
          - WINDOWS_SERVICE_STARTED
          - WINDOWS_SERVICE_STOPPED
          - MAC_DAEMON_STARTED
          - MAC_DAEMON_STOPPED
          - USER_ACCOUNT_ADDED
          - USER_ACCOUNT_REMOVED
          - PROCESS_STARTED
          - PROCESS_STOPPED
          - SYSTEM_REBOOTED
          - SOFTWARE_ADDED
          - SOFTWARE_REMOVED
          - SOFTWARE_UPDATED
          - DISK_PARTITION_ADDED
          - DISK_PARTITION_REMOVED
          - DISK_VOLUME_ADDED
          - DISK_VOLUME_REMOVED
          - CREDENTIALS_CHANGED
          - RAID_CONTROLLER_ADDED
          - RAID_CONTROLLER_REMOVED
          - RAID_PHYSICAL_DRIVE_ADDED
          - RAID_PHYSICAL_DRIVE_REMOVED
          - RAID_LOGICAL_DISK_ADDED
          - RAID_LOGICAL_DISK_REMOVED
          - BITLOCKER_ENABLED
          - BITLOCKER_DISABLED
          - FILEVAULT_ENABLED
          - FILEVAULT_DISABLED
          - TRUSTED_PLATFORM_MODULE_ENABLED
          - TRUSTED_PLATFORM_MODULE_DISABLED
          - TRUSTED_PLATFORM_MODULE_INSTALLED
          - TRUSTED_PLATFORM_MODULE_UNINSTALLED
          - SHADOWPROTECT_INSTALLED
          - SHADOWPROTECT_INSTALL_FAILED
          - SHADOWPROTECT_UNINSTALLED
          - SHADOWPROTECT_UNINSTALL_FAILED
          - SHADOWPROTECT_BACKUPJOB_FAILED
          - SHADOWPROTECT_BACKUPJOB_ABORTED
          - SHADOWPROTECT_LICENSE_PROVISIONED
          - SHADOWPROTECT_LICENSE_PROVISION_FAILED
          - SHADOWPROTECT_LICENSE_ACTIVATED
          - SHADOWPROTECT_LICENSE_ACTIVATION_FAILED
          - SHADOWPROTECT_LICENSE_DEACTIVATED
          - SHADOWPROTECT_LICENSE_DEACTIVATION_FAILED
          - IMAGEMANAGER_INSTALLED
          - IMAGEMANAGER_INSTALL_FAILED
          - IMAGEMANAGER_UNINSTALLED
          - IMAGEMANAGER_UNINSTALL_FAILED
          - IMAGEMANAGER_LICENSE_PROVISIONED
          - IMAGEMANAGER_LICENSE_PROVISION_FAILED
          - IMAGEMANAGER_LICENSE_ACTIVATED
          - IMAGEMANAGER_LICENSE_ACTIVATION_FAILED
          - IMAGEMANAGER_LICENSE_DEACTIVATED
          - IMAGEMANAGER_LICENSE_DEACTIVATION_FAILED
          - IMAGEMANAGER_CONSOLIDATION_FAILED
          - IMAGEMANAGER_VERIFICATION_FAILED
          - HELP_REQUEST_SUBMITTED
          - CLOUDBERRY_INSTALLED
          - CLOUDBERRY_INSTALL_FAILED
          - CLOUDBERRY_UNINSTALLED
          - CLOUDBERRY_UNINSTALL_FAILED
          - CLOUDBERRY_BACKUPPLAN_CREATED
          - CLOUDBERRY_BACKUPPLAN_EDITED
          - CLOUDBERRY_BACKUPPLAN_DELETED
          - CLOUDBERRY_BACKUPPLAN_CREATION_FAILED
          - CLOUDBERRY_BACKUPJOB_STARTED
          - CLOUDBERRY_BACKUPJOB_SUCCEEDED
          - CLOUDBERRY_BACKUPJOB_FAILED
          - CLOUDBERRY_BACKUPJOB_COMPLETED_WITH_WARNING
          - CLOUDBERRY_USER_CREATED
          - CLOUDBERRY_NETWORK_CREDENTIAL_CREATED
          - CLOUDBERRY_NETWORK_CREDENTIAL_CREATION_FAILED
          - RDP_CONNECTION_INITIATED
          - RDP_CONNECTION_ESTABLISHED
          - RDP_CONNECTION_TERMINATED
          - RDP_AUTO_PROVISION
          - SCHEDULED_TASK_CREATED
          - SCHEDULED_TASK_UPDATED
          - SCHEDULED_TASK_DELETED
          - SCRIPT_CREATED
          - SCRIPT_UPDATED
          - SCRIPT_DELETED
          - NINJA_BACKUP_BACKUPJOB_START_REQUESTED
          - NINJA_BACKUP_BACKUPJOB_STARTED
          - NINJA_BACKUP_BACKUPJOB_IN_PROCESS
          - NINJA_BACKUP_BACKUPJOB_COMPLETED
          - NINJA_BACKUP_BACKUPJOB_FAILED
          - NINJA_BACKUP_RESTOREJOB_START_REQUESTED
          - NINJA_BACKUP_RESTOREJOB_STARTED
          - NINJA_BACKUP_RESTOREJOB_IN_PROCESS
          - NINJA_BACKUP_RESTOREJOB_COMPLETED
          - NINJA_BACKUP_RESTOREJOB_FAILED
          - NINJA_BACKUP_BACKUPJOB_COMPLETED_WITH_WARNING
          - NINJA_BACKUP_BACKUP_DOWNLOADED
          - NINJA_BACKUP_BACKUPPLAN_ADDED
          - NINJA_BACKUP_BACKUPPLAN_EDITED
          - NINJA_BACKUP_BACKUPPLAN_DELETED
          - NINJA_BACKUP_BACKUPJOB_CANCELLED
          - NINJA_BACKUP_BACKUPJOB_PROCESSING
          - NINJA_BACKUP_INSTALL_FAILED
          - NINJA_BACKUP_UNINSTALL_FAILED
          - NINJA_BACKUP_INSTALLED
          - NINJA_BACKUP_UNINSTALLED
          - NINJA_BACKUP_RESTOREJOB_CANCELLED
          - NINJA_BACKUP_BACKUPPLAN_CREATION_FAILED
          - NINJA_BACKUP_BACKUP_CONFIGURE_FAILED
          - NINJA_BACKUP_FILE_DOWNLOAD
          - NINJA_BACKUP_FOLDER_DOWNLOAD
          - NINJA_BACKUP_UPSYNCJOB_PROCESSING
          - NINJA_BACKUP_UPSYNCJOB_IN_PROCESS
          - NINJA_BACKUP_UPSYNCJOB_STARTED
          - NINJA_BACKUP_UPSYNCJOB_COMPLETED
          - NINJA_BACKUP_UPSYNCJOB_CANCELLED
          - NINJA_BACKUP_UPSYNCJOB_FAILED
          - NINJA_BACKUP_BACKUP_NAS_ACCESS_FAILED
          - NINJA_BACKUP_IMAGE_RESTORE_STARTED
          - NINJA_BACKUP_IMAGE_RESTORE_COMPLETED
          - NINJA_BACKUP_IMAGE_RESTORE_FAILED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_STARTED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_COMPLETED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FAILED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FILE_STARTED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FILE_COMPLETED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FILE_FAILED
          - NINJA_BACKUP_IMAGE_MOUNT_COMPLETED
          - NINJA_BACKUP_IMAGE_MOUNT_FAILED
          - NINJA_BACKUP_INTEGRITY_CHECK_START_REQUESTED
          - NINJA_BACKUP_INTEGRITY_CHECK_STARTED
          - NINJA_BACKUP_INTEGRITY_CHECK_IN_PROCESS
          - NINJA_BACKUP_INTEGRITY_CHECK_COMPLETED
          - NINJA_BACKUP_INTEGRITY_CHECK_FAILED
          - NINJA_BACKUP_INTEGRITY_CHECK_CANCELLED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FOLDER_STARTED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FOLDER_COMPLETED
          - NINJA_BACKUP_IMAGE_DOWNLOAD_FOLDER_FAILED
          - BACKUP_IMAGE_RESTORE_CANCELED
          - BACKUP_IMAGE_DOWNLOAD_CANCELED
          - QC_INVITATION_CREATED
          - QC_INVITATION_DISABLED
          - QC_EXPIRED_INVITATION_BLOCKED
          - QC_INVITATION_UPDATED
          - QC_DEVICE_DELETED
          - QC_DEVICE_AGENT_INSTALL_REQUESTED
          - QC_SESSION_STARTED
          - QC_SESSION_TERMINATED
          - QC_SESSION_REPORT_SUBMITTED
          - REMOTE_SUPPORT_CREATED
          - REMOTE_SUPPORT_UPDATED
          - REMOTE_SUPPORT_DELETED
          - MDM_LOCK_DEVICE_STATUS_CREATED
          - MDM_REBOOT_DEVICE_STATUS_CREATED
          - MDM_RESET_PASSCODE_DEVICE_STATUS_CREATED
          - MDM_RELINQUISH_OWNERSHIP_DEVICE_STATUS_CREATED
          - MDM_LOCK_DEVICE_STATUS_UPDATED
          - MDM_REBOOT_DEVICE_STATUS_UPDATED
          - MDM_RESET_PASSCODE_DEVICE_STATUS_UPDATED
          - MDM_RELINQUISH_OWNERSHIP_DEVICE_STATUS_UPDATED
          - MDM_CLEAR_PASSCODE_STATUS_CREATED
          - MDM_CLEAR_PASSCODE_STATUS_UPDATED
          - MDM_ERASE_STATUS_CREATED
          - MDM_ERASE_STATUS_UPDATED
          - MDM_UPDATE_POLICY_STATUS_CREATED
          - MDM_UPDATE_POLICY_STATUS_UPDATED
          - MDM_ASSIGN_POLICY_STATUS_CREATED
          - MDM_ASSIGN_POLICY_STATUS_UPDATED
          - MDM_DIVISION_CONFIG_ENABLED
          - MDM_DIVISION_CONFIG_DISABLED
          - MDM_DIVISION_CONFIG_UPDATED
          - MDM_APN_CERTIFICATE_UPLOADED
          - MDM_ACTION_DEVICE_STATUS_FAILED
          - MDM_DISOWN_STATUS_FORBIDDEN
          - MDM_DISOWN_STATUS_COMPLETED
          - MDM_ADE_TOKEN_UPLOADED
          - MDM_ADE_TOKEN_RENEWED
          - MDM_RENEW_ENROLLMENT_PROFILE_STATUS_CREATED
          - MDM_RENEW_ENROLLMENT_PROFILE_STATUS_UPDATED
          - MDM_INSTALL_APP_STATUS_CREATED
          - MDM_APN_CERTIFICATE_RENEWED
          - MDM_CONNECTION_ANDROID_ENTERPRISE_RENAME_SUCCESS
          - REPORT_TEMPLATE_CREATED
          - REPORT_TEMPLATE_UPDATED
          - REPORT_TEMPLATE_DELETED
          - REPORT_SCHEDULE_CREATED
          - REPORT_SCHEDULE_UPDATED
          - REPORT_SCHEDULE_DELETED
          - REPORT_TEMPLATE_DUPLICATED
          - REPORT_SCHEDULE_DUPLICATED
          - GRAVITYZONE_ENABLED
          - GRAVITYZONE_DISABLED
          - GRAVITYZONE_SCAN_STARTED
          - GRAVITYZONE_SCAN_COMPLETED
          - GRAVITYZONE_SCAN_FAILED
          - GRAVITYZONE_THREAT_DELETE_FROM_QUARANTINE
          - GRAVITYZONE_THREAT_RESTORE_FROM_QUARANTINE
          - GRAVITYZONE_THREAT_DELETE_FROM_QUARANTINE_FAILED
          - GRAVITYZONE_THREAT_RESTORE_FROM_QUARANTINE_FAILED
          - GRAVITYZONE_INSTALLATION_SUCCEEDED
          - GRAVITYZONE_INSTALLATION_FAILED
          - GRAVITYZONE_THREAT_IGNORED
          - GRAVITYZONE_THREAT_PRESENT
          - GRAVITYZONE_THREAT_DELETED
          - GRAVITYZONE_THREAT_BLOCKED
          - GRAVITYZONE_THREAT_QUARANTINED
          - GRAVITYZONE_THREAT_CLEANED
          - GRAVITYZONE_PURGE_QUARANTINE_FAILED
          - GRAVITYZONE_PURGE_QUARANTINE_SUCCESS
          - GRAVITYZONE_THREAT_RESTORE_AND_EXCLUDED_FROM_QUARANTINE
          - GRAVITYZONE_THREAT_RESTORE_AND_EXCLUDED_FROM_QUARANTINE_FAILED
          - GRAVITYZONE_THREAT_DELETE_FROM_QUARANTINE_COMPLETED
          - GRAVITYZONE_THREAT_RESTORE_FROM_QUARANTINE_COMPLETED
          - GRAVITYZONE_PROVISION_COMPLETED
          - GRAVITYZONE_PROVISION_FAILED
          - GRAVITYZONE_RETRY_INSTALL_COMPLETED
          - GRAVITYZONE_PARTNER_ASSIST_DISABLED
          - GRAVITYZONE_SCAN_ATTEMPT_COMPLETED
          - GRAVITYZONE_RESET_INACCESSIBLE_LICENSE_COMPLETED
          - GRAVITYZONE_THREAT_DELETE_FROM_QUARANTINE_REQUESTED
          - GRAVITYZONE_THREAT_RESTORE_FROM_QUARANTINE_REQUESTED
          - GRAVITYZONE_THREAT_RESTORE_AND_EXCLUDED_FROM_QUARANTINE_REQUESTED
          - GRAVITYZONE_INSTALLATION_STARTED
          - GRAVITYZONE_DOWNLOAD_FAILED
          - GRAVITYZONE_INSTALLATION_RETRY_STARTED
          - GRAVITYZONE_SCAN_CANCELLED
          - GRAVITYZONE_DISABLING_FAILED
          - GRAVITYZONE_INSTALLATION_EXISTS_DETECTED
          - GRAVITYZONE_THREAT_BLOCKED_FROM_ACTIVE_REQUESTED
          - GRAVITYZONE_THREAT_BLOCKED_FROM_ACTIVE_COMPLETED
          - GRAVITYZONE_THREAT_BLOCKED_FROM_ACTIVE_FAILED
          - GRAVITYZONE_DEVICE_MANAGED
          - GRAVITYZONE_DEVICE_UNMANAGED
          - GRAVITYZONE_COMPANY_CANNOT_BE_ACCESSED
          - ATTACHMENT_FILE_SUSPICIOUS
          - SMTP_SEND_ERROR
          - TECHNICIAN_ROLE_CREATED
          - TECHNICIAN_ROLE_UPDATED
          - TECHNICIAN_ROLE_DELETED
          - TECHNICIAN_ROLE_ASSIGNMENT_CHANGED
          - TECHNICIAN_PERMISSIONS_CHANGED
          - END_USER_ROLE_CREATED
          - END_USER_ROLE_UPDATED
          - END_USER_ROLE_DELETED
          - END_USER_ROLE_ASSIGNMENT_CHANGED
          - END_USER_PERMISSIONS_CHANGED
          - SENTINEL_ONE_AGENT_ENABLED
          - SENTINEL_ONE_AGENT_DISABLED
          - SENTINEL_ONE_AGENT_STARTED
          - SENTINEL_ONE_AGENT_UPGRADED
          - SENTINEL_ONE_AGENT_SHUT_DOWN
          - SENTINEL_ONE_AGENT_INSTALLATION_SUCCEEDED
          - SENTINEL_ONE_AGENT_INSTALLATION_FAILED
          - SENTINEL_ONE_POLICY_CHANGED
          - SENTINEL_ONE_LOCAL_CONFIG_CHANGE_FAILED
          - SENTINEL_ONE_REGISTRATION_SUCCEEDED
          - SENTINEL_ONE_REGISTRATION_FAILED
          - SENTINEL_ONE_REMEDIATION_SUCCEEDED
          - SENTINEL_ONE_REMEDIATION_FAILED
          - SENTINEL_ONE_MITIGATION_SUCCEEDED
          - SENTINEL_ONE_MITIGATION_FAILED
          - SENTINEL_ONE_MITIGATION_REQUIRE_REBOOT
          - SENTINEL_ONE_MITIGATION_CANNOT_KILL
          - SENTINEL_ONE_MITIGATION_FAILED_TO_KILL
          - SENTINEL_ONE_QUARANTINE_SUCCEEDED
          - SENTINEL_ONE_QUARANTINE_FAILED
          - SENTINEL_ONE_UNQUARANTINE_SUCCEEDED
          - SENTINEL_ONE_UNQUARANTINE_FAILED
          - SENTINEL_ONE_THREAT_DETECTED
          - SENTINEL_ONE_SCAN_STARTED
          - SENTINEL_ONE_SCAN_COMPLETED
          - SENTINEL_ONE_SCAN_FAILED
          - SENTINEL_ONE_SCAN_ABORTED
          - SENTINEL_ONE_COMMAND_RECEIVED
          - SENTINEL_ONE_COMMAND_FAILED
          - OAUTH2_CREATED
          - OAUTH2_UPDATED
          - OAUTH2_DELETED
          - CROWDSTRIKE_SENSOR_ENABLED
          - CROWDSTRIKE_SENSOR_DISABLED
          - CROWDSTRIKE_SENSOR_STARTED
          - CROWDSTRIKE_SENSOR_UPGRADED
          - CROWDSTRIKE_SENSOR_SHUT_DOWN
          - CROWDSTRIKE_SENSOR_INSTALLATION_SUCCEEDED
          - CROWDSTRIKE_SENSOR_INSTALLATION_FAILED
          - CROWDSTRIKE_REGISTRATION_SUCCEEDED
          - CROWDSTRIKE_REGISTRATION_FAILED
          - CROWDSTRIKE_REMEDIATION_SUCCEEDED
          - CROWDSTRIKE_REMEDIATION_FAILED
          - CROWDSTRIKE_MITIGATION_SUCCEEDED
          - CROWDSTRIKE_MITIGATION_FAILED
          - CROWDSTRIKE_QUARANTINE_SUCCEEDED
          - CROWDSTRIKE_QUARANTINE_FAILED
          - CROWDSTRIKE_THREAT_DETECTED
          - CROWDSTRIKE_MISSING_PERMISSIONS
          - CROWDSTRIKE_CREDENTIAL_INVALID
          - SERVICE_NOW_UPDATED
          - SERVICE_NOW_CONFIGURATION_ITEM_CLASS_MAPPING_CREATED
          - SERVICE_NOW_CONFIGURATION_ITEM_CLASS_MAPPING_UPDATED
          - SERVICE_NOW_CONFIGURATION_ITEM_CLASS_MAPPING_DELETED
          - SERVICE_NOW_RESET_AUTHENTICATION
          - SERVICE_NOW_NODE_SYNC_NODE_CREATED
          - SERVICE_NOW_NODE_SYNC_NODE_UPDATED
          - SERVICE_NOW_NODE_SYNC_NODE_ERROR
          - SERVICE_NOW_NODE_SYNC_BY_CLIENT_STARTED
          - SERVICE_NOW_NODE_SYNC_BY_CLIENT_COMPLETED
          - SERVICE_NOW_CLIENT_MAPPING_CREATED
          - SERVICE_NOW_CLIENT_MAPPING_UPDATED
          - SERVICE_NOW_CLIENT_MAPPING_DELETED
          - SERVICE_NOW_SYNC_CLIENT_ON_DEMAND
          - SERVICE_NOW_CLIENT_MAPPING_STATUS_UPDATED
          - ZENDESK_UPDATED
          - FRESHSERVICE_UPDATED
          - NINJA_TICKETING_CREATION_FAILED
          - NINJA_TICKETING_FORM_CREATED
          - NINJA_TICKETING_FORM_UPDATED
          - NINJA_TICKETING_FORM_ACTIVED
          - NINJA_TICKETING_FORM_DEACTIVED
          - NINJA_TICKETING_ATTRIBUTE_CREATED
          - NINJA_TICKETING_ATTRIBUTE_UPDATED
          - NINJA_TICKETING_ATTRIBUTE_ACTIVED
          - NINJA_TICKETING_ATTRIBUTE_DEACTIVATED
          - NINJA_TICKETING_RULESET_CREATED
          - NINJA_TICKETING_RULESET_UPDATED
          - NINJA_TICKETING_RULESET_DELETED
          - NINJA_TICKETING_EMAIL_ADDRESS_CONFIG_CREATED
          - NINJA_TICKETING_EMAIL_ADDRESS_CONFIG_UPDATED
          - NINJA_TICKETING_EMAIL_ADDRESS_CONFIG_DELETED
          - NINJA_TICKETING_EMAIL_ADDRESS_CONFIG_MAKE_DEFAULT
          - NINJA_TICKETING_TRIGGER_CREATED
          - NINJA_TICKETING_TRIGGER_UPDATED
          - NINJA_TICKETING_TRIGGER_DELETED
          - NINJA_TICKETING_TICKET_CREATED
          - NINJA_TICKETING_TICKET_DELETED
          - NINJA_TICKETING_PENDING_EMAIL_CREATION_APPROVED
          - NINJA_TICKETING_PENDING_EMAIL_UPDATE_APPROVED
          - NINJA_TICKETING_PENDING_EMAIL_REJECTED
          - NINJA_TICKETING_ENABLED
          - NINJA_TICKETING_DISABLED
          - NINJA_TICKETING_UPDATED
          - NINJA_TICKETING_FORM_MAKE_DEFAULT
          - NINJA_TICKETING_CONDITION_RULE_MAKE_DEFAULT
          - NINJA_TICKETING_SCRIPT_RULE_MAKE_DEFAULT
          - NINJA_TICKETING_PENDING_EMAIL_RECEIVED
          - NINJA_TICKETING_EMAIL_ALLOWLIST_ITEM_CREATED
          - NINJA_TICKETING_EMAIL_ALLOWLIST_ITEM_UPDATED
          - NINJA_TICKETING_EMAIL_ALLOWLIST_ITEM_DELETED
          - NINJA_TICKETING_EMAIL_BLOCKLIST_ITEM_CREATED
          - NINJA_TICKETING_EMAIL_BLOCKLIST_ITEM_UPDATED
          - NINJA_TICKETING_EMAIL_BLOCKLIST_ITEM_DELETED
          - NINJA_TICKETING_TICKET_REINSTATED
          - NINJA_TICKETING_STATUS_CREATED
          - NINJA_TICKETING_STATUS_UPDATED
          - NINJA_TICKETING_STATUS_DELETED
          - NINJA_TICKETING_AGREEMENT_BULK_UPDATED
          - KNOWLEDGE_BASE_DOCUMENT_CREATED
          - KNOWLEDGE_BASE_DOCUMENT_UPDATED
          - KNOWLEDGE_BASE_DOCUMENT_ARCHIVED
          - KNOWLEDGE_BASE_DOCUMENT_RESTORED
          - KNOWLEDGE_BASE_DOCUMENT_DELETED
          - KNOWLEDGE_BASE_FOLDER_CREATED
          - KNOWLEDGE_BASE_FOLDER_UPDATED
          - KNOWLEDGE_BASE_FOLDER_ARCHIVED
          - KNOWLEDGE_BASE_FOLDER_RESTORED
          - KNOWLEDGE_BASE_FOLDER_DELETED
          - KNOWLEDGE_BASE_PUBLIC_TEMPORARY_TOKEN_CREATED
          - KNOWLEDGE_BASE_PUBLIC_LINK_CREATED
          - KNOWLEDGE_BASE_PUBLIC_LINK_UPDATED
          - KNOWLEDGE_BASE_PUBLIC_LINK_DELETED
          - KNOWLEDGE_BASE_FOLDER_MOVED
          - KNOWLEDGE_BASE_DOCUMENT_MOVED
          - KNOWLEDGE_BASE_FOLDER_SHARED
          - KNOWLEDGE_BASE_FOLDER_ACCESS_RESTRICTED
          - DOCUMENT_TEMPLATE_CREATED
          - DOCUMENT_TEMPLATE_UPDATED
          - DOCUMENT_TEMPLATE_ARCHIVED
          - DOCUMENT_TEMPLATE_RESTORED
          - DOCUMENT_TEMPLATE_DELETED
          - CLIENT_DOCUMENT_CREATED
          - CLIENT_DOCUMENT_UPDATED
          - CLIENT_DOCUMENT_ARCHIVED
          - CLIENT_DOCUMENT_RESTORED
          - CLIENT_DOCUMENT_DELETED
          - CLIENT_DOCUMENT_ATTRIBUTE_VALUE_DECRYPTED
          - CLIENT_DOCUMENT_REVISION_DELETED
          - CLIENT_DOCUMENTATION_DELEGATE_NODE_RESPONSIBILITY_ADDED
          - CLIENT_DOCUMENTATION_DELEGATE_NODE_RESPONSIBILITY_REMOVED
          - CLIENT_DOCUMENT_ATTRIBUTE_TEMPORARY_PUBLIC_TOKEN_CREATED
          - CLIENT_CHECKLIST_CREATED
          - CLIENT_CHECKLIST_UPDATED
          - CLIENT_CHECKLIST_DELETED
          - CLIENT_CHECKLIST_PROMOTED
          - CLIENT_CHECKLIST_TEMPORARY_PUBLIC_TOKEN_CREATED
          - CLIENT_CHECKLIST_ARCHIVED
          - CLIENT_CHECKLIST_RESTORED
          - CHECKLIST_TEMPLATE_CREATED
          - CHECKLIST_TEMPLATE_UPDATED
          - CHECKLIST_TEMPLATE_DELETED
          - CHECKLIST_TEMPLATE_ARCHIVED
          - CHECKLIST_TEMPLATE_RESTORED
          - RELATED_ITEM_CREATED
          - RELATED_ITEM_UPDATED
          - RELATED_ITEM_DELETED
          - RELATED_ITEM_SECURE_VALUE_DECRYPTED
          - RELATED_ITEM_TEMPORARY_PUBLIC_TOKEN_CREATED
        status:
          type: string
          description: Status description
        activityResult:
          type: string
          description: Activity result
          enum:
          - SUCCESS
          - FAILURE
          - UNSUPPORTED
          - UNCOMPLETED
        sourceConfigUid:
          type: string
          description: Source configuration/policy element reference
          format: uuid
        sourceName:
          type: string
          description: Source configuration/policy element name
        subject:
          type: string
          description: Activity subject
        userId:
          type: integer
          description: User identifier
          format: int32
        message:
          type: string
          description: Activity message
        type:
          type: string
          description: Activity type description
        data:
          type: object
          additionalProperties: true
          description: Activity data
    NodeActivitiesResponse:
      type: object
      properties:
        lastActivityId:
          type: integer
          description: Last recorded activity ID for account
          format: int64
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        lastNodeActivityId:
          type: integer
          description: Last recorded activity ID for device
          format: int64
    Alert:
      type: object
      properties:
        uid:
          type: string
          description: Alert UID (activity series UID)
          format: uuid
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        message:
          type: string
          description: Alert message
        createTime:
          type: number
          description: Alert creation timestamp
          format: double
        updateTime:
          type: number
          description: Alert last updated
          format: double
        sourceType:
          type: string
          description: Alert origin
          enum:
          - AGENT_OFFLINE
          - CONDITION_AGENT_CPU
          - CONDITION_AGENT_MEMORY
          - CONDITION_AGENT_NETWORK
          - CONDITION_AGENT_DISK_IO
          - CONDITION_AGENT_DISK_FREE_SPACE
          - CONDITION_AGENT_DISK_USAGE
          - CONDITION_AGENT_CVSS_SCORE
          - CONDITION_AGENT_PATCH_LAST_INSTALLED
          - CONDITION_NMS_CPU
          - CONDITION_NMS_MEMORY
          - CONDITION_NMS_NETWORK_TRAFFIC_BITS
          - CONDITION_NMS_NETWORK_TRAFFIC_PERCENT
          - CONDITION_NMS_NETWORK_STATUS
          - CONDITION_NMS_NETWORK_STATUS_CHANGE
          - CONDITION_NMS_SYSTEM_UPTIME
          - CONDITION_PING
          - CONDITION_PING_LATENCY
          - CONDITION_PING_PACKET_LOSS
          - CONDITION_PING_RESPONSE
          - CONDITION_SYSTEM_UPTIME
          - CONDITION_SMART_STATUS_DEGRATED
          - CONDITION_RAID_HEALTH_STATUS
          - CONDITION_SCRIPT_RESULT
          - CONDITION_HTTP
          - CONDITION_HTTP_RESPONSE
          - CONDITION_PORT
          - CONDITION_PORT_SCAN
          - CONDITION_SYSLOG
          - CONDITION_CONFIGURATION_FILE
          - CONDITION_SNMPTRAP
          - CONDITION_CRITICAL_EVENT
          - CONDITION_DNS
          - CONDITION_EMAIL
          - CONDITION_CUSTOM_SNMP
          - CONDITION_COMPOUND
          - SHADOWPROTECT_BACKUPJOB_CREATE
          - SHADOWPROTECT_BACKUPJOB_UPDATE
          - SHADOWPROTECT_BACKUPJOB_DELETE
          - SHADOWPROTECT_BACKUPJOB_EXECUTE
          - IMAGEMANAGER_MANAGEDFOLDER_CREATE
          - IMAGEMANAGER_MANAGEDFOLDER_UPDATE
          - IMAGEMANAGER_MANAGEDFOLDER_DELETE
          - IMAGEMANAGER_MANAGEDFOLDER_EXECUTE
          - TEAMVIEWER_CONNECTION
          - RETRIEVE_AGENT_LOGS
          - SCHEDULED_TASK
          - CONDITION_WINDOWS_EVENT_LOG_TRIGGERED
          - CONDITION_WINDOWS_SERVICE_STATE_CHANGED
          - UI_MESSAGE_ACTION_REBOOT
          - UI_MESSAGE_BD_INSTALLATION_ISSUES
          - GRAVITYZONE_UI_MESSAGE_INSTALLATION_ISSUES
          - AV_QUARANTINE_THREAT
          - AV_RESTORE_THREAT
          - AV_DELETE_THREAT
          - AV_REMOVE_THREAT
          - BITDEFENDER_RESTORE_THREAT
          - BITDEFENDER_DELETE_THREAT
          - CONDITION_BITLOCKER_STATUS
          - CONDITION_FILEVAULT_STATUS
          - CONDITION_LINUX_PROCESS
          - CONDITION_LINUX_Daemon
          - CONDITION_LINUX_PROCESS_RESOURCE
          - CONDITION_LINUX_PROCESS_RESOURCE_CPU
          - CONDITION_LINUX_PROCESS_RESOURCE_MEMORY
          - CONDITION_LINUX_DISK_FREE_SPACE
          - CONDITION_LINUX_DISK_USAGE
          - CONDITION_VM_AGGREGATE_CPU_USAGE
          - CONDITION_VM_DISK_USAGE
          - CONDITION_VM_HOST_DATASTORE
          - CONDITION_VM_HOST_UPTIME
          - CONDITION_VM_HOST_DEVICE_DOWN
          - CONDITION_VM_HOST_BAD_SENSORS
          - CONDITION_VM_HOST_SENSOR_HEALTH
          - CONDITION_VM_GUEST_GUEST_OPERATIONAL_MODE
          - CONDITION_VM_GUEST_SNAPSHOT_SIZE
          - CONDITION_VM_GUEST_SNAPSHOT_LIFESPAN
          - CONDITION_VM_GUEST_TOOLS_NOT_RUNNING
          - CONDITION_HV_GUEST_CHECKPOINT_SIZE
          - CONDITION_HV_GUEST_CHECKPOINT_LIFESPAN
          - CONDITION_SOFTWARE
          - CONDITION_WINDOWS_PROCESS_STATE
          - CONDITION_WINDOWS_PROCESS_RESOURCE_CPU
          - CONDITION_WINDOWS_PROCESS_RESOURCE_MEMORY
          - CONDITION_MAC_PROCESS_STATE
          - CONDITION_MAC_PROCESS_RESOURCE_CPU
          - CONDITION_MAC_PROCESS_RESOURCE_MEMORY
          - CONDITION_MAC_DEAMON
          - CONDITION_CUSTOM_FIELD
          - CONDITION_PENDING_REBOOT
        sourceConfigUid:
          type: string
          description: Source configuration/policy element reference
          format: uuid
        sourceName:
          type: string
          description: Source configuration/policy element name
        subject:
          type: string
          description: Alert subject
        userId:
          type: integer
          description: User identifier
          format: int32
        psaTicketId:
          type: object
          description: Related PSA ticket ID
        ticketTemplateId:
          type: integer
          description: PSA ticket template
          format: int32
        data:
          type: object
          additionalProperties: true
          description: Alert data
        device:
          $ref: '#/components/schemas/NodeWithDetailedReferences'
    DiskDrive:
      type: object
      properties:
        bytesPerSector:
          type: integer
          description: Number of bytes per sector
          format: int32
        description:
          type: string
          description: Description
        interfaceType:
          type: string
          description: Interface type
        manufacturer:
          type: string
          description: Manufacturer
        mediaType:
          type: string
          description: Media Type
        model:
          type: string
          description: Model
        name:
          type: string
          description: Name
        partitionCount:
          type: integer
          description: Number of partitions
          format: int32
        serialNumber:
          type: string
          description: Serial number
        size:
          type: integer
          description: Size (Bytes)
          format: int64
        smartCapable:
          type: boolean
          description: Is S.M.A.R.T. capable?
        status:
          type: string
          description: Status
    OSPatch:
      type: object
      properties:
        id:
          type: string
          description: Identifier
          format: uuid
        name:
          type: string
          description: Name
        severity:
          type: string
          description: Severity
        status:
          type: string
          description: Status
        type:
          type: string
          description: Type
        installedAt:
          type: number
          description: Installation attempt timestamp
          format: double
        kbNumber:
          type: string
          description: KB Number
    SoftwarePatch:
      type: object
      properties:
        id:
          type: string
          description: Identifier
          format: uuid
        productIdentifier:
          type: string
          description: Software product identifier
          format: uuid
        title:
          type: string
          description: Patch title
        impact:
          type: string
          description: Impact
        status:
          type: string
          description: Status
        type:
          type: string
          description: Patch type
        installedAt:
          type: number
          description: Installation attempt timestamp
          format: double
    LoggedOnUser:
      type: object
      properties:
        userName:
          type: string
          description: User name
        logonTime:
          type: number
          description: Time of logon
          format: double
    DeviceLink:
      type: object
      properties:
        url:
          type: string
          description: URL
        expires:
          type: number
          description: Link expiration time
          format: double
    NetworkInterface:
      type: object
      properties:
        adapterName:
          type: string
          description: Adapter Name
        defaultGateway:
          type: string
          description: Default Gateway
        interfaceType:
          type: string
          description: Interface Type
        dnsHostName:
          type: string
          description: DNS HostName
        dnsServers:
          type: string
          description: DNS Servers
        interfaceIndex:
          type: string
          description: Interface Index
        interfaceName:
          type: string
          description: Interface Name
        ipAddress:
          type: array
          description: IP Address
          items:
            type: string
            description: IP Address
        linkSpeed:
          type: string
          description: Link Speed
        macAddress:
          type: array
          description: MAC Address
          items:
            type: string
            description: MAC Address
        mtu:
          type: string
          description: MTU
        status:
          type: string
          description: Status
        subnetMask:
          type: string
          description: Subnet Mask
    WindowsService:
      type: object
      properties:
        name:
          type: string
          description: Name
        displayName:
          type: string
          description: Display Name
        description:
          type: string
          description: Description
        startType:
          type: string
          description: Start Type
          enum:
          - AUTO_START
          - AUTO_START_DELAYED
          - BOOT_START
          - DEMAND_START
          - DISABLED
          - SYSTEM_START
        userName:
          type: string
          description: User Name
        state:
          type: string
          description: State
          enum:
          - UNKNOWN
          - STOPPED
          - START_PENDING
          - RUNNING
          - STOP_PENDING
          - PAUSE_PENDING
          - PAUSED
          - CONTINUE_PENDING
    Application:
      type: object
      properties:
        installDate:
          type: string
          description: Installation Date
          format: date-time
        location:
          type: string
          description: Location
        name:
          type: string
          description: Product Name
        publisher:
          type: string
          description: Publisher
        size:
          type: integer
          description: Size on disk
          format: int64
        version:
          type: string
          description: Version
        productCode:
          type: string
          description: Product Code
    PolicyOverrides:
      type: object
      properties:
        overrides:
          type: array
          description: List of policy sections
          items:
            type: string
            description: List of policy sections
    RebootRequest:
      type: object
      properties:
        reason:
          type: string
          description: Stated reboot reason
    CredentialReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          enum:
          - SNMPV12C
          - SNMPV3
          - TELNET_SSH
          - NETWORK_LOCATION
          - ENCRYPTION_KEY
          - BASIC
          - SNMPV1
          - SNMPV2
    DeviceCredentialOptions:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/CredentialReference'
    DeviceScriptingOptions:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ScriptCategory'
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/Script'
        credentials:
          $ref: '#/components/schemas/DeviceCredentialOptions'
    Script:
      type: object
      properties:
        type:
          type: string
          description: Type of script/action
          enum:
          - ACTION
          - SCRIPT
        id:
          type: integer
          description: Custom script identifier (Scripts)
          format: int32
        uid:
          type: string
          description: Built-in action identifier (Actions)
          format: uuid
        name:
          type: string
          description: Name
        language:
          type: string
          description: Script language
        description:
          type: string
          description: Description
        architecture:
          uniqueItems: true
          type: array
          description: Applicable architectures
          items:
            type: string
            description: Applicable architectures
        categoryId:
          type: integer
          description: Script Category identifier
          format: int32
    ScriptCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        internal:
          type: boolean
    RunScriptRequest:
      type: object
      properties:
        type:
          type: string
          description: Type
          enum:
          - ACTION
          - SCRIPT
        id:
          type: integer
          description: Script identifier
          format: int32
        uid:
          type: string
          description: Built-in action identifier
          format: uuid
        parameters:
          type: string
          description: Action/Script parameters
        runAs:
          type: string
          description: Credential role/identifier
    WindowsServiceConfiguration:
      type: object
      properties:
        startType:
          type: string
          description: Start Type
          enum:
          - AUTO_START
          - AUTO_START_DELAYED
          - BOOT_START
          - DEMAND_START
          - DISABLED
          - SYSTEM_START
        userName:
          type: string
          description: Username
    DeviceMutableProperties:
      type: object
      properties:
        displayName:
          type: string
          description: Display name (User assigned)
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        nodeRoleId:
          type: integer
          description: Node Role identifier
          format: int32
        policyId:
          type: integer
          description: "Assigned policy ID (overrides organization policy mapping,\
            \ or reverts to organization policy if Null)"
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        locationId:
          type: integer
          description: Location identifier
          format: int32
        warranty:
          $ref: '#/components/schemas/WarrantyDates'
    MaintenanceSettings:
      type: object
      properties:
        disabledFeatures:
          type: array
          description: List of features that will be disabled during maintenance
          items:
            type: string
            description: List of features that will be disabled during maintenance
            enum:
            - ALERTS
            - PATCHING
            - AVSCANS
            - TASKS
        start:
          type: number
          description: "Maintenance window start (optional, defaults to now)"
          format: double
        end:
          type: number
          description: Maintenance window end
          format: double
    User:
      type: object
      properties:
        id:
          type: integer
          description: User identifier
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        enabled:
          type: boolean
        administrator:
          type: boolean
        permitAllClients:
          type: boolean
        notifyAllClients:
          type: boolean
        mustChangePw:
          type: boolean
        mfaConfigured:
          type: boolean
        userType:
          type: string
          enum:
          - TECHNICIAN
          - END_USER
        invitationStatus:
          type: string
          enum:
          - REGISTERED
          - PENDING
          - EXPIRED
        organizationId:
          type: integer
          description: Identifier of organization for end-users
          format: int32
        deviceIds:
          type: array
          description: Device IDs which end-user is authorized to access
          items:
            type: integer
            description: Device IDs which end-user is authorized to access
            format: int32
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        roles:
          type: array
          description: A list of role names assigned to the user. This is provided
            when the 'includeRoles' query parameter is set to 'true'
          items:
            type: string
            description: A list of role names assigned to the user. This is provided
              when the 'includeRoles' query parameter is set to 'true'
    Link:
      type: object
      properties:
        url:
          type: string
          description: URL
    GenerateInstallerRequestDto:
      type: object
      properties:
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        locationId:
          type: integer
          description: Location identifier
          format: int32
        installerType:
          type: string
          description: Agent installer type
          enum:
          - WINDOWS_MSI
          - MAC_DMG
          - MAC_PKG
          - LINUX_DEB
          - LINUX_RPM
          - LINUX_ARM64_DEB
          - LINUX_ARMV7A_DEB
          - LINUX_ARM64_RPM
          - LINUX_ARMV7A_RPM
        usageLimit:
          type: integer
          description: Usage limit
          format: int32
          readOnly: true
        content:
          $ref: '#/components/schemas/InstallerContent'
    InstallerContent:
      type: object
      properties:
        nodeRoleId:
          type: string
          description: "Identifier for the nodeRole target of this installer. Acceptable\
            \ values include integers, 'auto', or an empty string. If the value is\
            \ omitted, or an empty string, it defaults to 'auto'."
          default: auto
      description: content
    LocationBackupUsageSummary:
      type: object
      properties:
        locationId:
          type: integer
          description: Device location id
          format: int32
        locationName:
          type: string
          description: Device location name
        locationDescription:
          type: string
          description: Device location description
        revisionsCurrentSize:
          type: integer
          format: int64
        revisionsPreviousSize:
          type: integer
          format: int64
        revisionsDeletedSize:
          type: integer
          format: int64
        localFileFolderSize:
          type: integer
          format: int64
        localImageSize:
          type: integer
          format: int64
        localImageV2Size:
          type: integer
          format: int64
        cloudFileFolderSize:
          type: integer
          format: int64
        cloudImageSize:
          type: integer
          format: int64
        cloudImageV2Size:
          type: integer
          format: int64
        lastSuccessfulBackupJob:
          type: number
          format: double
        lastFailedBackupJob:
          type: number
          format: double
        organizationId:
          type: integer
          format: int32
        organizationName:
          type: string
        revisionsTotalSize:
          type: integer
          description: Revisions total size
          format: int64
          readOnly: true
        cloudTotalSize:
          type: integer
          description: Revisions cloud total size
          format: int64
          readOnly: true
        localTotalSize:
          type: integer
          description: Revisions local total size
          format: int64
          readOnly: true
    OrganizationModel:
      type: object
      properties:
        name:
          type: string
          description: Organization full name
        description:
          type: string
          description: Organization Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        nodeApprovalMode:
          type: string
          description: Device Approval Mode
          enum:
          - AUTOMATIC
          - MANUAL
          - REJECT
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
    AntivirusStatusReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceAntivirusStatus'
    Cursor:
      type: object
      properties:
        name:
          type: string
        offset:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        expires:
          type: number
          format: double
    DeviceAntivirusStatus:
      type: object
      properties:
        productName:
          type: string
          description: Product name
        productState:
          type: string
          description: Product state
        definitionStatus:
          type: string
          description: Definition Status
        version:
          type: string
          description: Product Version
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    AntivirusThreatsReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceAntivirusThreat'
    DeviceAntivirusThreat:
      type: object
      properties:
        name:
          type: string
          description: Threat name
        productCode:
          type: string
          description: AntiVirus vendor product code
        quarantineId:
          type: string
          description: Threat Quarantine ID
        status:
          type: string
          description: Threat Status (vendor specific)
        type:
          type: string
          description: Type of Threat
        threatId:
          type: integer
          description: Threat ID
          format: int64
        category:
          type: string
          description: Threat Category
        level:
          type: string
          description: Threat Level
        detectionSource:
          type: string
          description: Detection source
        traceList:
          type: string
          description: "Trace list (Files, Cookies, etc. Vendor specific)"
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    ComputerSystemsReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceComputerSystem'
    DeviceComputerSystem:
      type: object
      properties:
        name:
          type: string
          description: Name
        manufacturer:
          type: string
          description: Manufacturer
        model:
          type: string
          description: Model
        biosSerialNumber:
          type: string
          description: Bios Serial Number
        serialNumber:
          type: string
          description: Serial Number
        domain:
          type: string
        domainRole:
          type: string
        numberOfProcessors:
          type: integer
          format: int32
        totalPhysicalMemory:
          type: integer
          format: int64
        virtualMachine:
          type: boolean
        chassisType:
          type: string
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    AttributeValueUpdatedByInfo:
      type: object
      properties:
        source:
          type: string
          enum:
          - API
          - USER
          - SCRIPT
        user:
          $ref: '#/components/schemas/UserBasicInfo'
      description: Value source (who/what updated the value)
    NodeAttributeInfo:
      type: object
      properties:
        name:
          type: string
          description: Field name
        value:
          type: object
          description: Field Value
        updated:
          type: number
          description: Last field update timestamp
          format: double
          writeOnly: true
        updatedBy:
          $ref: '#/components/schemas/AttributeValueUpdatedByInfo'
        updateTime:
          type: number
          format: double
      description: Field values
    NodeAttributesDetailed:
      type: object
      properties:
        deviceId:
          type: integer
          description: Entity identifier
          format: int32
          writeOnly: true
        entityType:
          type: string
          description: Entity type
          enum:
          - NODE
          - LOCATION
          - ORGANIZATION
        fields:
          type: array
          description: Field values
          items:
            $ref: '#/components/schemas/NodeAttributeInfo'
        entityId:
          type: integer
          format: int32
    NodeAttributesDetailedReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/NodeAttributesDetailed'
    NodeAttributes:
      type: object
      properties:
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        fields:
          type: object
          additionalProperties:
            type: object
            description: Field values
          description: Field values
    NodeAttributesReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/NodeAttributes'
    DeviceHealthReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceHealthSummary'
    DeviceHealthSummary:
      type: object
      properties:
        activeThreatsCount:
          type: integer
          description: Active AV threats count
          format: int32
        quarantinedThreatsCount:
          type: integer
          description: Quarantined AV threats count
          format: int32
        blockedThreatsCount:
          type: integer
          description: Blocked AV threats count
          format: int32
        failedOSPatchesCount:
          type: integer
          description: Number of failed OS patches
          format: int32
        pendingOSPatchesCount:
          type: integer
          description: Number of pending OS patches
          format: int32
        alertCount:
          type: integer
          description: Alerts count
          format: int32
        activeJobCount:
          type: integer
          description: Alerts job count
          format: int32
        failedSoftwarePatchesCount:
          type: integer
          description: Number of failed software patches
          format: int32
        pendingSoftwarePatchesCount:
          type: integer
          description: Number of pending software patches
          format: int32
        pendingRebootReason:
          type: string
          description: Pending reboot reasons
        avInstallStatus:
          type: string
          description: Antivirus installation status
          enum:
          - REQUESTED
          - DOWNLOAD_STARTED
          - DOWNLOADED
          - DOWNLOAD_FAILED
          - INSTALL_STARTED
          - INSTALLED
          - INSTALL_FAILED
          - UNINSTALL_REQUESTED
          - UNINSTALL_FAILED
          - UNINSTALLED
        productsInstallationStatuses:
          type: object
          additionalProperties:
            type: string
            description: Integrated products' installation statuses
            enum:
            - REQUESTED
            - DOWNLOAD_STARTED
            - DOWNLOADED
            - DOWNLOAD_FAILED
            - INSTALL_STARTED
            - INSTALLED
            - INSTALL_FAILED
            - UNINSTALL_REQUESTED
            - UNINSTALL_FAILED
            - UNINSTALLED
          description: Integrated products' installation statuses
        offline:
          type: boolean
          description: Is device offline?
        parentDeviceId:
          type: integer
          description: Parent device identifier
          format: int32
        parentOffline:
          type: boolean
          description: Is parent device offline
        healthStatus:
          type: string
          description: Health status
          enum:
          - UNKNOWN
          - HEALTHY
          - NEEDS_ATTENTION
          - UNHEALTHY
        installationIssuesCount:
          type: integer
          format: int32
        deviceId:
          type: integer
          description: Device identifier
          format: int32
    DeviceUsageReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/NodeWithDetailedReferences'
    DeviceDiskDrive:
      type: object
      properties:
        bytesPerSector:
          type: integer
          description: Number of bytes per sector
          format: int32
        description:
          type: string
          description: Description
        interfaceType:
          type: string
          description: Interface type
        manufacturer:
          type: string
          description: Manufacturer
        mediaType:
          type: string
          description: Media Type
        model:
          type: string
          description: Model
        name:
          type: string
          description: Name
        partitionCount:
          type: integer
          description: Number of partitions
          format: int32
        serialNumber:
          type: string
          description: Serial number
        size:
          type: integer
          description: Size (Bytes)
          format: int64
        smartCapable:
          type: boolean
          description: Is S.M.A.R.T. capable?
        status:
          type: string
          description: Status
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    DiskDriveReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceDiskDrive'
    DeviceOSPatch:
      type: object
      properties:
        id:
          type: string
          description: Identifier
          format: uuid
        name:
          type: string
          description: Name
        severity:
          type: string
          description: Severity
        status:
          type: string
          description: Status
        type:
          type: string
          description: Type
        installedAt:
          type: number
          description: Installation attempt timestamp
          format: double
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
        kbNumber:
          type: string
          description: KB Number
    OSPatchReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceOSPatch'
    DeviceSoftwarePatch:
      type: object
      properties:
        id:
          type: string
          description: Identifier
          format: uuid
        productIdentifier:
          type: string
          description: Software product identifier
          format: uuid
        title:
          type: string
          description: Patch title
        impact:
          type: string
          description: Impact
        status:
          type: string
          description: Status
        type:
          type: string
          description: Patch type
        installedAt:
          type: number
          description: Installation attempt timestamp
          format: double
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    SoftwarePatchReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceSoftwarePatch'
    DeviceLoggedOnUser:
      type: object
      properties:
        userName:
          type: string
          description: User name
        logonTime:
          type: number
          description: Time of logon
          format: double
        deviceId:
          type: integer
          description: Device identifier
          format: int32
    LoggedOnUsersReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceLoggedOnUser'
    DeviceNetworkInterfaces:
      type: object
      properties:
        adapterName:
          type: string
          description: Adapter Name
        defaultGateway:
          type: string
          description: Default Gateway
        interfaceType:
          type: string
          description: Interface Type
        dnsHostName:
          type: string
          description: DNS HostName
        dnsServers:
          type: string
          description: DNS Servers
        interfaceIndex:
          type: string
          description: Interface Index
        interfaceName:
          type: string
          description: Interface Name
        ipAddress:
          type: array
          description: IP Address
          items:
            type: string
            description: IP Address
        linkSpeed:
          type: string
          description: Link Speed
        macAddress:
          type: array
          description: MAC Address
          items:
            type: string
            description: MAC Address
        mtu:
          type: string
          description: MTU
        status:
          type: string
          description: Status
        subnetMask:
          type: string
          description: Subnet Mask
        deviceId:
          type: integer
          description: Device identifier
          format: int32
    NetworkInterfacesReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceNetworkInterfaces'
    DeviceOperatingSystem:
      type: object
      properties:
        manufacturer:
          type: string
          description: Manufacturer
        name:
          type: string
          description: Name
        architecture:
          type: string
          description: Architecture
        lastBootTime:
          type: number
          description: Last boot time
          format: double
        buildNumber:
          type: string
          description: Build number
        releaseId:
          type: string
          description: Release ID
        servicePackMajorVersion:
          type: integer
          description: Service Pack Major Version
          format: int32
        servicePackMinorVersion:
          type: integer
          description: Service Pack Minor Version
          format: int32
        locale:
          type: string
          description: Locale
        language:
          type: string
          description: Language
        needsReboot:
          type: boolean
          description: Operating system has pending reboot requests
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    OperatingSystemsReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceOperatingSystem'
    DevicePolicyOverrides:
      type: object
      properties:
        overrides:
          type: array
          description: List of policy sections
          items:
            type: string
            description: List of policy sections
        deviceId:
          type: integer
          description: Device identifier
          format: int32
    PolicyOverridesReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyOverrides'
    DeviceProcessor:
      type: object
      properties:
        architecture:
          type: string
          description: Architecture
        maxClockSpeed:
          type: integer
          description: Max Clock Speed
          format: int64
        clockSpeed:
          type: integer
          description: Current Clock Speed
          format: int64
        name:
          type: string
          description: Name
        numCores:
          type: integer
          description: Number of Cores
          format: int32
        numLogicalCores:
          type: integer
          description: "Number of Logical Cores]"
          format: int32
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    ProcessorReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceProcessor'
    DeviceRAIDController:
      type: object
      properties:
        backupBatteryStatus:
          type: string
          description: Backup Battery Status
        batteryTemperature:
          type: integer
          description: Battery Temperature
          format: int32
        biosVersion:
          type: string
          description: BIOS Version
        cacheSize:
          type: integer
          description: Cache size (bytes)
          format: int64
        controllerIndex:
          type: integer
          description: Controller Index
          format: int32
        driverName:
          type: string
          description: Device Driver Name
        driverVersion:
          type: string
          description: Driver Version
        family:
          type: string
          description: Family
        firmwareVersion:
          type: string
          description: Firmware Version
        hardwareRevision:
          type: string
          description: Hardware Revision
        manufacturer:
          type: string
          description: Manufacturer
        manufacturingDate:
          type: number
          description: Manufacturing date
          format: double
        model:
          type: string
          description: Model
        physicalDriveCount:
          type: integer
          description: Physical drive count
          format: int32
        slot:
          type: string
          description: Slot
        systemHealthStatus:
          type: string
          description: System Health Status
        virtualDriveCount:
          type: integer
          description: Virtual drive count
          format: int32
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    RAIDControllerReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRAIDController'
    DeviceRAIDDrive:
      type: object
      properties:
        controllerIndex:
          type: integer
          description: Controller index
          format: int32
        driveGroup:
          type: string
          description: Drive Group
        driveId:
          type: string
          description: Drive Identifier
        interfaceType:
          type: string
          description: Interface type
        location:
          type: string
          description: Location
        mediaType:
          type: string
          description: Media type
        model:
          type: string
          description: Model
        protectionInfo:
          type: string
          description: Protection Information
        selfEncrypted:
          type: boolean
          description: Is self encrypted?
        serial:
          type: string
          description: Serial number
        size:
          type: integer
          description: Size (bytes)
          format: int64
        spun:
          type: boolean
          description: Spun?
        status:
          type: string
          description: Status
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    RAIDDriveReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRAIDDrive'
    ScopedAttributesDetailed:
      type: object
      properties:
        scope:
          type: string
          description: Value definition scope (entity type)
          enum:
          - NODE
          - LOCATION
          - ORGANIZATION
        entityId:
          type: integer
          description: "Entity identifier (device, organization, location)"
          format: int32
        fields:
          type: array
          description: Field values
          items:
            $ref: '#/components/schemas/NodeAttributeInfo'
    ScopedAttributesDetailedReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScopedAttributesDetailed'
    ScopedAttributes:
      type: object
      properties:
        scope:
          type: string
          description: Value definition scope (entity type)
          enum:
          - NODE
          - LOCATION
          - ORGANIZATION
        entityId:
          type: integer
          description: "Entity identifier (device, organization, location)"
          format: int32
        fields:
          type: object
          additionalProperties:
            type: object
            description: Field values
          description: Field values
    ScopedAttributesReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScopedAttributes'
    DeviceApplication:
      type: object
      properties:
        installDate:
          type: string
          description: Installation Date
          format: date-time
        location:
          type: string
          description: Location
        name:
          type: string
          description: Product Name
        publisher:
          type: string
          description: Publisher
        size:
          type: integer
          description: Size on disk
          format: int64
        version:
          type: string
          description: Version
        productCode:
          type: string
          description: Product Code
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    SoftwareReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceApplication'
    DeviceVolume:
      type: object
      properties:
        name:
          type: string
          description: Name
        driveLetter:
          type: string
          description: Drive Letter
        label:
          type: string
          description: Volume Label
        deviceType:
          type: string
          description: Device Type
        fileSystem:
          type: string
          description: File System Type
        autoMount:
          type: boolean
          description: Automatically Mounted
        compressed:
          type: boolean
          description: Compressed
        capacity:
          type: integer
          description: Capacity (bytes)
          format: int64
        freeSpace:
          type: integer
          description: Free Space (bytes)
          format: int64
        serialNumber:
          type: string
          description: Serial Number
        bitLockerStatus:
          $ref: '#/components/schemas/VolumeBitLockerStatus'
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    VolumesReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceVolume'
    DeviceWindowsService:
      type: object
      properties:
        name:
          type: string
          description: Name
        displayName:
          type: string
          description: Display Name
        description:
          type: string
          description: Description
        startType:
          type: string
          description: Start Type
          enum:
          - AUTO_START
          - AUTO_START_DELAYED
          - BOOT_START
          - DEMAND_START
          - DISABLED
          - SYSTEM_START
        userName:
          type: string
          description: User Name
        state:
          type: string
          description: State
          enum:
          - UNKNOWN
          - STOPPED
          - START_PENDING
          - RUNNING
          - STOP_PENDING
          - PAUSE_PENDING
          - PAUSED
          - CONTINUE_PENDING
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        timestamp:
          type: number
          description: Date/Time when data was collected/updated
          format: double
    WindowsServiceReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceWindowsService'
    PolicyInfo:
      type: object
      properties:
        parentPolicyId:
          type: integer
          description: Parent Policy identifier
          format: int32
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
        nodeClass:
          type: string
          description: Node Class
          enum:
          - WINDOWS_SERVER
          - WINDOWS_WORKSTATION
          - LINUX_WORKSTATION
          - MAC
          - ANDROID
          - APPLE_IOS
          - APPLE_IPADOS
          - VMWARE_VM_HOST
          - VMWARE_VM_GUEST
          - HYPERV_VMM_HOST
          - HYPERV_VMM_GUEST
          - LINUX_SERVER
          - MAC_SERVER
          - CLOUD_MONITOR_TARGET
          - NMS_SWITCH
          - NMS_ROUTER
          - NMS_FIREWALL
          - NMS_PRIVATE_NETWORK_GATEWAY
          - NMS_PRINTER
          - NMS_SCANNER
          - NMS_DIAL_MANAGER
          - NMS_WAP
          - NMS_IPSLA
          - NMS_COMPUTER
          - NMS_VM_HOST
          - NMS_APPLIANCE
          - NMS_OTHER
          - NMS_SERVER
          - NMS_PHONE
          - NMS_VIRTUAL_MACHINE
          - NMS_NETWORK_MANAGEMENT_AGENT
        enabled:
          type: boolean
          description: Policy Enabled Flag
          default: true
    ActivitiesResponse:
      type: object
      properties:
        lastActivityId:
          type: integer
          description: Last recorded activity ID for account
          format: int64
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    AutomationScript:
      type: object
      properties:
        id:
          type: integer
          description: Script ID
          format: int32
        name:
          type: string
          description: Script Name
        description:
          type: string
          description: Script Description
        active:
          type: boolean
          description: Script is Active
        language:
          type: string
          description: Script Language
        architecture:
          uniqueItems: true
          type: array
          description: Applicable Architectures
          items:
            type: string
            description: Applicable Architectures
        operatingSystems:
          uniqueItems: true
          type: array
          description: Applicable Operating Systems
          items:
            type: string
            description: Applicable Operating Systems
        scriptParameters:
          type: array
          description: Script Parameters
          items:
            type: string
            description: Script Parameters
        scriptVariables:
          type: array
          description: Script Variables
          items:
            $ref: '#/components/schemas/ScriptVariable'
        createdBy:
          type: string
          description: Script Created By
        lastUpdatedBy:
          type: string
          description: Script Last Updated By
        createdOn:
          type: number
          description: Script date of creation
          format: double
        updatedOn:
          type: number
          description: Script last updated date
          format: double
    ScriptVariable:
      type: object
      properties:
        id:
          type: string
          description: Script Variable ID
        name:
          type: string
          description: Script Variable Name
        description:
          type: string
          description: Script Variable Description
        type:
          type: string
          description: Script Variable Type
          enum:
          - CHECKBOX
          - DATE
          - DATETIME
          - DECIMAL
          - INTEGER
          - IPADDRESS
          - DROPDOWN
          - TEXT
          - OTHER
        source:
          type: string
          description: Script Variable Source
          enum:
          - LITERAL
          - OTHER
        defaultValue:
          type: string
          description: Script Variable Default Value
        required:
          type: boolean
          description: Script Variable is Required
        valueList:
          type: array
          description: Script Variable List of Possible Values
          items:
            type: string
            description: Script Variable List of Possible Values
      description: Script Variables
    AttributeContent:
      type: object
      properties:
        customizeForEndUser:
          type: boolean
        endUserCustomization:
          $ref: '#/components/schemas/EndUserCustomization'
        values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeContentValue'
        required:
          type: boolean
        footerText:
          type: string
        tooltipText:
          type: string
        advancedSettings:
          $ref: '#/components/schemas/AttributeContentAdvancedSettings'
    AttributeContentValue:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        active:
          type: boolean
        system:
          type: boolean
    AttributePublicApiDTO:
      type: object
      properties:
        entityType:
          type: string
          description: Entity Type
          enum:
          - USER
          - NODE
          - TICKET
          - DOCUMENT
        scope:
          type: string
          description: Scope
          enum:
          - NODE_GLOBAL
          - NODE_ROLE
          - NODE_CLASS
        definitionScope:
          uniqueItems: true
          type: array
          description: Definition Scope
          items:
            type: string
            description: Definition Scope
            enum:
            - NODE
            - LOCATION
            - ORGANIZATION
        type:
          type: string
          description: Type
          enum:
          - DROPDOWN
          - MULTI_SELECT
          - CHECKBOX
          - TEXT
          - TEXT_MULTILINE
          - TEXT_ENCRYPTED
          - NUMERIC
          - DECIMAL
          - DATE
          - DATE_TIME
          - TIME
          - ATTACHMENT
          - NODE_DROPDOWN
          - NODE_MULTI_SELECT
          - CLIENT_DROPDOWN
          - CLIENT_MULTI_SELECT
          - CLIENT_LOCATION_DROPDOWN
          - CLIENT_LOCATION_MULTI_SELECT
          - CLIENT_DOCUMENT_DROPDOWN
          - CLIENT_DOCUMENT_MULTI_SELECT
          - EMAIL
          - PHONE
          - IP_ADDRESS
          - WYSIWYG
          - URL
        label:
          type: string
          description: Label
        description:
          type: string
          description: Description
        name:
          type: string
          description: Name
        defaultValue:
          type: string
          description: Default Value
        endUserPermission:
          type: string
          description: End User Permission
          enum:
          - HIDDEN
          - EDITABLE_OPTIONAL
          - EDITABLE_REQUIRED
          - READ_ONLY
        technicianPermission:
          type: string
          description: Technician Permission
          enum:
          - NONE
          - EDITABLE
          - READ_ONLY
        scriptPermission:
          type: string
          description: Script Permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        apiPermission:
          type: string
          description: Public API Permission
          enum:
          - NONE
          - READ_ONLY
          - WRITE_ONLY
          - READ_WRITE
        content:
          $ref: '#/components/schemas/AttributeContent'
        system:
          type: boolean
          description: System
        active:
          type: boolean
          description: Active
        createTime:
          type: number
          description: Create Time
          format: double
        updateTime:
          type: number
          description: Update Time
          format: double
    EndUserCustomization:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        label:
          type: string
    NotificationChannel:
      type: object
      properties:
        id:
          type: integer
          description: Notification Channel ID
          format: int32
        name:
          type: string
          description: Notification Channel Name
        description:
          type: string
          description: Notification Channel Description
        enabled:
          type: boolean
          description: Notification Channel Enabled
        type:
          type: string
          description: Notification Channel Type
          enum:
          - EMAIL
          - META_CHANNEL
          - PAGER_DUTY
          - SLACK
          - SMS
          - MICROSOFT_TEAMS
          - WEBHOOK
          - OTHER
    Group:
      type: object
      properties:
        id:
          type: integer
          description: Group identifier
          format: int32
        name:
          type: string
          description: Group Name
        description:
          type: string
          description: Group description
        shared:
          type: boolean
          description: Group is shared with all users?
        created:
          type: number
          description: Timestamp of group creation
          format: double
        updated:
          type: number
          description: Timestamp last update
          format: double
        deviceCount:
          type: integer
          description: Estimated/Last known device count.  Can be `null` if group
            membership has not been evaluated recently
          format: int32
        lastEvaluated:
          type: number
          description: Last evaluation time of group membership for nodes (search)
          format: double
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
    LocationWithOrganizationRef:
      type: object
      properties:
        name:
          type: string
          description: Location name
        address:
          type: string
          description: Address
        description:
          type: string
          description: Description
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        id:
          type: integer
          description: Location identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
    ScheduledTask:
      type: object
      properties:
        id:
          type: integer
          description: Scheduled Task identifier
          format: int32
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
        enabled:
          type: boolean
          description: Is Enabled ?
        created:
          type: number
          description: Timestamp of Scheduled Task creation
          format: double
        lastRun:
          type: number
          description: Timestamp of last Scheduled Task run
          format: double
        runCount:
          type: integer
          description: Number of times scheduled task ran
          format: int32
    SoftwareProduct:
      type: object
      properties:
        id:
          type: string
          description: Product identifier
          format: uuid
        vendorName:
          type: string
          description: Vendor Name
        productName:
          type: string
          description: Product Name
        installable:
          type: boolean
          description: Installable
        active:
          type: boolean
          description: Active
    DeviceSearchMatch:
      type: object
      properties:
        id:
          type: integer
          description: Node (Device) identifier
          format: int32
        parentDeviceId:
          type: integer
          description: Parent Node identifier
          format: int32
        organizationId:
          type: integer
          description: Organization identifier
          format: int32
        locationId:
          type: integer
          description: Location identifier
          format: int32
        nodeClass:
          type: string
          description: Node Class
          enum:
          - WINDOWS_SERVER
          - WINDOWS_WORKSTATION
          - LINUX_WORKSTATION
          - MAC
          - ANDROID
          - APPLE_IOS
          - APPLE_IPADOS
          - VMWARE_VM_HOST
          - VMWARE_VM_GUEST
          - HYPERV_VMM_HOST
          - HYPERV_VMM_GUEST
          - LINUX_SERVER
          - MAC_SERVER
          - CLOUD_MONITOR_TARGET
          - NMS_SWITCH
          - NMS_ROUTER
          - NMS_FIREWALL
          - NMS_PRIVATE_NETWORK_GATEWAY
          - NMS_PRINTER
          - NMS_SCANNER
          - NMS_DIAL_MANAGER
          - NMS_WAP
          - NMS_IPSLA
          - NMS_COMPUTER
          - NMS_VM_HOST
          - NMS_APPLIANCE
          - NMS_OTHER
          - NMS_SERVER
          - NMS_PHONE
          - NMS_VIRTUAL_MACHINE
          - NMS_NETWORK_MANAGEMENT_AGENT
        nodeRoleId:
          type: integer
          description: Node Role identifier
          format: int32
        rolePolicyId:
          type: integer
          description: Node Role policy ID based on organization and location Policy
            Mapping
          format: int32
        policyId:
          type: integer
          description: Assigned policy ID (overrides organization and location policy
            mapping)
          format: int32
        approvalStatus:
          type: string
          description: Approval Status
          enum:
          - PENDING
          - APPROVED
        offline:
          type: boolean
          description: Is Offline?
        displayName:
          type: string
          description: Display Name
        systemName:
          type: string
          description: System Name
        dnsName:
          type: string
          description: DNS Name
        netbiosName:
          type: string
          description: NETBIOS Name
        created:
          type: number
          description: Created
          format: double
        lastContact:
          type: number
          description: Last Contact
          format: double
        lastUpdate:
          type: number
          description: Last data submission timestamp
          format: double
        userData:
          type: object
          additionalProperties: true
          description: Custom attributes
        tags:
          type: array
          description: Tags
          items:
            type: string
            description: Tags
        fields:
          type: object
          additionalProperties:
            type: object
            description: Custom Fields
          description: Custom Fields
        maintenance:
          $ref: '#/components/schemas/Maintenance'
        references:
          $ref: '#/components/schemas/NodeReferences'
        score:
          type: integer
          description: Match score
          format: int32
        matchAttr:
          type: string
          description: Name of the attribute that matched the query
        matchAttrValue:
          type: string
          description: Value of that attribute that matched
      description: Devices matching search query
    DeviceSearchResults:
      type: object
      properties:
        query:
          type: string
          description: Search query
        devices:
          type: array
          description: Devices matching search query
          items:
            $ref: '#/components/schemas/DeviceSearchMatch'
    BackupJob:
      type: object
      properties:
        jobId:
          type: string
          description: Job id
          format: uuid
        jobStartTime:
          type: number
          description: Job start time
          format: double
        jobEndTime:
          type: number
          description: Job end time
          format: double
        jobStatus:
          type: string
          description: Job status
        planGuid:
          type: string
          description: Plan id
          format: uuid
        planName:
          type: string
          description: Plan name
        planType:
          type: string
          description: Plan type
        totalActualStorageBytes:
          type: integer
          description: Total bytes
          format: int64
        organizationId:
          type: integer
          description: Organization id
          format: int32
        locationId:
          type: integer
          description: Location id
          format: int32
        deviceId:
          type: integer
          description: Device id
          format: int32
    BackupJobReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          items:
            $ref: '#/components/schemas/BackupJob'
    LockhartIntegrityCheckJob:
      type: object
      properties:
        deviceId:
          type: integer
          description: Device identifier
          format: int32
        device:
          $ref: '#/components/schemas/NodeWithDetailedReferences'
        jobId:
          type: string
          description: Job id.
          format: uuid
        jobStartTime:
          type: number
          description: Job start time.
          format: double
        jobEndTime:
          type: number
          description: Job end time.
          format: double
        jobStatus:
          type: string
          description: Job status.
        planGuid:
          type: string
          description: Plan id.
          format: uuid
        planName:
          type: string
          description: Plan name.
        planType:
          type: string
          description: Plan type.
        totalActualStorageBytes:
          type: integer
          description: Total bytes
          format: int64
        totalActualStorageFiles:
          type: integer
          description: Total files.
          format: int64
        actualBytesChecked:
          type: integer
          description: Bytes checked.
          format: int64
        actualFilesChecked:
          type: integer
          description: Files checked.
          format: int64
      description: The integrity check job information.
    LockhartIntegrityCheckJobReport:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        results:
          type: array
          description: List of integrity check jobs.
          items:
            $ref: '#/components/schemas/LockhartIntegrityCheckJob'
      description: The integrity check job report.
    TicketingAttributePublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        attributeType:
          type: string
        name:
          type: string
        description:
          type: string
        customizeForEndUser:
          type: boolean
        nameForEndUser:
          type: string
        descriptionForEndUser:
          type: string
        endUserOption:
          type: string
        technicianOption:
          type: string
        content:
          $ref: '#/components/schemas/AttributeContent'
        system:
          type: boolean
        active:
          type: boolean
        createTime:
          type: number
          format: double
        updateTime:
          type: number
          format: double
    ContactResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int32
        clientName:
          type: string
        uid:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        jobTitle:
          type: string
        displayName:
          type: string
        createTime:
          type: number
          format: double
        updateTime:
          type: number
          format: double
    TicketFormContent:
      type: object
      properties:
        fields:
          type: array
          items:
            type: integer
            format: int32
        timerSettings:
          $ref: '#/components/schemas/TimerSettings'
    TicketFormPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        endUserTitle:
          type: string
        content:
          $ref: '#/components/schemas/TicketFormContent'
        active:
          type: boolean
        createTime:
          type: number
          format: double
        updateTime:
          type: number
          format: double
        fields:
          type: array
          items:
            $ref: '#/components/schemas/TicketingAttributePublicApiDTO'
        default:
          type: boolean
    TimerSettings:
      type: object
      properties:
        enabled:
          type: boolean
        mode:
          type: string
          enum:
          - MANUAL
          - AUTO_START
    Condition:
      type: object
      properties:
        any:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        all:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Rule'
    Rule:
      type: object
      properties:
        field:
          type: string
        operator:
          type: string
        value:
          type: string
    TicketingBoardPublicApiDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        conditions:
          $ref: '#/components/schemas/Condition'
        createTime:
          type: number
          format: double
        updateTime:
          type: number
          format: double
        system:
          type: boolean
        columns:
          uniqueItems: true
          type: array
          items:
            type: string
        sortBy:
          uniqueItems: true
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        ticketCount:
          type: integer
          format: int32
    AttributeData:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - DROPDOWN
          - MULTI_SELECT
          - CHECKBOX
          - TEXT
          - TEXT_MULTILINE
          - TEXT_ENCRYPTED
          - NUMERIC
          - DECIMAL
          - DATE
          - DATE_TIME
          - TIME
          - ATTACHMENT
          - NODE_DROPDOWN
          - NODE_MULTI_SELECT
          - CLIENT_DROPDOWN
          - CLIENT_MULTI_SELECT
          - CLIENT_LOCATION_DROPDOWN
          - CLIENT_LOCATION_MULTI_SELECT
          - CLIENT_DOCUMENT_DROPDOWN
          - CLIENT_DOCUMENT_MULTI_SELECT
          - EMAIL
          - PHONE
          - IP_ADDRESS
          - WYSIWYG
          - URL
    SortBy:
      type: object
      properties:
        field:
          type: string
        direction:
          type: string
          enum:
          - ASC
          - DESC
    TicketDashboardPublicApiDTO:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        metadata:
          $ref: '#/components/schemas/TicketMetadata'
    TicketMetadata:
      type: object
      properties:
        columns:
          uniqueItems: true
          type: array
          items:
            type: string
        sortBy:
          type: array
          items:
            $ref: '#/components/schemas/SortBy'
        attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AttributeData'
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        allColumns:
          uniqueItems: true
          type: array
          items:
            type: string
        columnNamesForExporting:
          uniqueItems: true
          type: array
          items:
            type: string
        allRequiredColumns:
          uniqueItems: true
          type: array
          items:
            type: string
    TicketBoardScrollingRequestDTO:
      type: object
      properties:
        sortBy:
          type: array
          items:
            $ref: '#/components/schemas/SortBy'
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        pageSize:
          type: integer
          format: int32
        searchCriteria:
          maxLength: 512
          minLength: 0
          type: string
        includeColumns:
          uniqueItems: true
          type: array
          items:
            type: string
        lastCursorId:
          type: integer
          format: int32
    AppUserAndContactPublicApiDTO:
      type: object
      properties:
        uid:
          type: string
          description: Global identifier for the user
          format: uuid
        id:
          type: integer
          description: User identifier
          format: int32
        clientId:
          type: integer
          description: Client identifier
          format: int32
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        email:
          type: string
          description: The user's email address
        userType:
          type: string
          description: System User Type
          enum:
          - TECHNICIAN
          - END_USER
          - CONTACT
        naturalId:
          type: string
          description: Last User Identifier
  securitySchemes:
    oauth2:
      type: http
      scheme: bearer
      bearerFormat: bearer
    sessionKey:
      type: apiKey
      name: sessionKey
      in: cookie
